{"data": "# \u6211\u5f00\u6e90\u4e86\u4e00\u5957 RPC \u6846\u67b6\uff0c\u5b66\u7206\u5b83\uff01\n\n> \u672c\u6587\u4f5c\u8005\uff1a[\u7a0b\u5e8f\u5458\u9c7c\u76ae](https://yuyuanweb.feishu.cn/wiki/Abldw5WkjidySxkKxU2cQdAtnah)\n>\n> \u672c\u7ad9\u5730\u5740\uff1a[https://codefather.cn](https://codefather.cn)\n\n\u5927\u5bb6\u597d\uff0c\u6211\u662f\u7a0b\u5e8f\u5458\u9c7c\u76ae\u3002\n\n\u547c\u5438\u4e0d\u505c\uff0c\u65b0\u9879\u76ee\u4e0d\u6b62\uff01\u524d\u6bb5\u65f6\u95f4\u5f00\u59cb\u5e26\u5927\u5bb6\u505a\u7684\u65b0\u9879\u76ee\u300a\u4ece 0 \u5230 1 \u5f00\u53d1 RPC \u6846\u67b6\u300b\u5df2\u7ecf\u5b8c\u6210\uff0c\u6559\u7a0b\u4e5f\u5df2\u7ecf\u5199\u5b8c\u4e86~\n\n\u5f88\u591a\u540c\u5b66\u542c\u5230 \u201c\u5f00\u53d1\u6846\u67b6\u201d \u53ef\u80fd\u4f1a\u6709\u70b9\u80c6\u602f\uff0c\u4f46\u5176\u5b9e\u5f00\u53d1 RPC \u6846\u67b6\u5e76\u4e0d\u96be\uff0c**\u53ea\u8981\u51e0\u4e2a\u5c0f\u65f6** \u5c31\u80fd\u5b66\u4f1a\u6838\u5fc3\u6d41\u7a0b\uff01\u80fd\u591f\u5feb\u901f\u7ed9\u7b80\u5386\u589e\u52a0\u4e00\u4e2a\u533a\u522b\u4e8e\u589e\u5220\u6539\u67e5\u7684\u9879\u76ee\u3002\u800c\u4e14\uff0c\u5f00\u53d1 RPC \u6846\u67b6\u6d89\u53ca\u5f88\u591a\u5e38\u7528\u7684\u6280\u672f\u77e5\u8bc6\u70b9\u3001\u8fd8\u80fd\u5b66\u4e60\u5230\u5f88\u591a\u67b6\u6784\u8bbe\u8ba1\u65b9\u9762\u7684\u601d\u8def\u548c\u6280\u5de7\u3002\u56e0\u6b64\uff0c\u5f3a\u70c8\u5efa\u8bae\u6240\u6709\u540e\u7aef\u65b9\u5411\u7684\u540c\u5b66\uff0c\u52a8\u624b\u505a\u4e2a\u81ea\u5df1\u7684 RPC \u6846\u67b6\u3002\n\n\u672c\u9879\u76ee\u7684\u4ee3\u7801\u5b8c\u5168\u5f00\u6e90\uff1a[https://github.com/liyupi/yu-rpc](https://github.com/liyupi/yu-rpc)\n\n\u5b66\u4e60\u80fd\u529b\u5f3a\u7684\u540c\u5b66\uff0c\u4e0d\u9700\u8981\u8d2d\u4e70\u6559\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u6309\u7167\u6211\u5212\u5206\u7684\u76ee\u5f55\u6a21\u5757\u81ea\u5b66\u3002\n\n![](https://pic.yupi.icu/1/image-20240312152234729.png)\n\n\u5f53\u7136\uff0c\u5982\u679c\u4f60\u662f [\u7f16\u7a0b\u5bfc\u822a](https://mp.weixin.qq.com/s/5pt0nOTGb3g3Uf9kf-f31Q) \u7684\u540c\u5b66\uff0c\u672c\u9879\u76ee\u5168\u5957\u6587\u5b57\u6559\u7a0b\u90fd\u53ef\u4ee5\u514d\u8d39\u9605\u8bfb\u3002\n\n\u5982\u56fe\uff0c\u6574\u6574 12 \u8282\u8be6\u7ec6\u7684\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff1a\n\n![](https://pic.yupi.icu/1/image-20240312152159311.png)\n\n> \u52a0\u5165\u7f16\u7a0b\u5bfc\u822a\uff1ahttps://yupi.icu\n\n\u672c\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u7ed9\u5927\u5bb6\u514d\u8d39\u5206\u4eab\u6559\u7a0b\u4e2d\u7684\u7b2c\u4e00\u8282 \u2014\u2014 \u5e26\u5927\u5bb6\u4ece 0 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u6613\u7248\u7684 RPC \u6846\u67b6\uff0c\u6ca1\u63a5\u89e6\u8fc7\u6b64\u7c7b\u9879\u76ee\u7684\u540c\u5b66\u5e94\u8be5\u80fd\u6709\u4e0d\u5c11\u6536\u83b7~\n\n\u2b50\ufe0f \u5168\u6587\u957f\u8fbe\u8fd1 7000 \u5b57\uff0c\u5efa\u8bae\u5927\u5bb6\u6536\u85cf\u8d77\u6765\uff0c\u6162\u6162\u5b66\u4e60\u3002\n\n\n\n## \u4e00\u3001\u57fa\u672c\u6982\u5ff5\n\n### \u4ec0\u4e48\u662f RPC\uff1f\n\u4e13\u4e1a\u5b9a\u4e49\uff1aRPC\uff08Remote Procedure Call\uff09\u5373\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff0c\u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u901a\u4fe1\u534f\u8bae\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u548c\u4ea4\u4e92\uff0c\u5c31\u50cf\u672c\u5730\u8c03\u7528\u4e00\u6837\u3002\n\n\u7b80\u5355\u7406\u89e3\uff0c\u65b0\u5f00\u4e86\u4e00\u5bb6\u5356\u9c7c\u76ae\u7684\u719f\u98df\u5e97\uff0c\u73b0\u5728\u4f60\u4f5c\u4e3a\u6d88\u8d39\u8005\u60f3\u8981\u628a\u9c7c\u76ae\u8d2d\u4e70\u5230\u5bb6\u3002\u5982\u679c\u662f\u4ee5\u524d\uff0c\u4f60\u53ea\u80fd\u81ea\u5df1\u8dd1\u817f\u5230\u7ebf\u4e0b\u5e97\u94fa\u8d2d\u4e70\uff0c\u8017\u65f6\u8017\u529b\u3002\u4f46\u73b0\u5728\u6709\u4e86\u624b\u673a\u3001\u7f51\u7edc\u3001\u5916\u5356\u5e73\u53f0\uff0c\u4f60\u53ea\u9700\u8981\u5728\u5bb6\u52a8\u52a8\u624b\u6307\uff0c\u5c31\u80fd\u70b9\u4e2a\u5916\u5356\u8ba9\u9a91\u624b\u628a\u9c7c\u76ae\u914d\u9001\u5230\u5bb6\uff0c\u4f60\u4e0d\u9700\u8981\u5173\u6ce8\u7f51\u7edc\u662f\u600e\u4e48\u4f20\u8f93\u7684\u3001\u5916\u5356\u5e73\u53f0\u662f\u600e\u4e48\u64cd\u4f5c\u7684\u3001\u9a91\u624b\u5c0f\u54e5\u662f\u600e\u4e48\u914d\u9001\u7684\uff0c\u53ea\u8d1f\u8d23\u4eab\u53d7\u9c7c\u76ae\u5c31\u884c\u4e86\u3002\n\n\n\n### \u4e3a\u4ec0\u4e48\u9700\u8981 RPC\uff1f\n\n\u56de\u5230 RPC \u7684\u6982\u5ff5\uff0cRPC \u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\uff08\u79f0\u4e3a\u670d\u52a1\u6d88\u8d39\u8005\uff09\u50cf\u8c03\u7528\u81ea\u5df1\u7a0b\u5e8f\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u8c03\u7528\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff08\u79f0\u4e3a\u670d\u52a1\u63d0\u4f9b\u8005\uff09\u7684\u63a5\u53e3\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u6570\u636e\u7684\u4f20\u8f93\u5904\u7406\u8fc7\u7a0b\u3001\u5e95\u5c42\u7f51\u7edc\u901a\u4fe1\u7684\u7ec6\u8282\u7b49\u3002\u8fd9\u4e9b\u90fd\u4f1a\u7531 RPC \u6846\u67b6\u5e2e\u4f60\u5b8c\u6210\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u8f7b\u677e\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\uff0c\u5feb\u901f\u5f00\u53d1\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u73b0\u5728\u6709\u4e2a\u9879\u76ee A \u63d0\u4f9b\u4e86\u70b9\u9910\u670d\u52a1\uff0c\u9879\u76ee B \u9700\u8981\u8c03\u7528\u70b9\u9910\u670d\u52a1\u5b8c\u6210\u4e0b\u5355\u3002\n\n\u70b9\u9910\u670d\u52a1\u548c\u63a5\u53e3\u7684\u793a\u4f8b\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\ninterface OrderService {\n    // \u70b9\u9910\uff0c\u8fd4\u56de orderId\n    long order(\u53c2\u65701, \u53c2\u65702, \u53c2\u65703);\n}\n```\n\n\u5982\u679c\u6ca1\u6709 RPC \u6846\u67b6\uff0c\u9879\u76ee B \u600e\u4e48\u8c03\u7528\u9879\u76ee A \u7684\u670d\u52a1\u5462\uff1f\n\n\u9996\u5148\uff0c\u7531\u4e8e\u9879\u76ee A \u548c\u9879\u76ee B \u90fd\u662f\u72ec\u7acb\u7684\u7cfb\u7edf\uff0c\u4e0d\u80fd\u50cf SDK \u4e00\u6837\u4f5c\u4e3a\u4f9d\u8d56\u5305\u5f15\u5165\u3002\u90a3\u4e48\u5c31\u9700\u8981\u9879\u76ee A \u63d0\u4f9b web \u670d\u52a1\uff0c\u5e76\u4e14\u7f16\u5199\u4e00\u4e2a\u70b9\u9910\u63a5\u53e3\u66b4\u9732\u670d\u52a1\uff0c\u6bd4\u5982\u8bbf\u95ee `http://yupi.icu` \u5c31\u80fd\u8c03\u7528\u70b9\u9910\u670d\u52a1\uff1b\u7136\u540e\u9879\u76ee B \u4f5c\u4e3a\u670d\u52a1\u6d88\u8d39\u8005\uff0c\u9700\u8981\u81ea\u5df1\u6784\u9020\u8bf7\u6c42\uff0c\u5e76\u901a\u8fc7 HttpClient \u8bf7\u6c42\u4e0a\u8ff0\u5730\u5740\u3002\u5982\u679c\u9879\u76ee B \u9700\u8981\u8c03\u7528\u66f4\u591a\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u6bcf\u4e2a\u670d\u52a1\u548c\u65b9\u6cd5\u7684\u8c03\u7528\u90fd\u7f16\u5199\u4e00\u4e2a HTTP \u8bf7\u6c42\uff0c\u90a3\u4e48\u4f1a\u975e\u5e38\u9ebb\u70e6\uff01\n\n\u793a\u4f8b\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\nurl = \"http://yupi.icu\"\nreq = new Req(\u53c2\u65701, \u53c2\u65702, \u53c2\u65703)\nres = httpClient.post(url).body(req).execute()\norderId = res.data.orderId\n```\n\n\u800c\u6709\u4e86 RPC \u6846\u67b6\uff0c\u9879\u76ee B \u53ef\u4ee5\u901a\u8fc7\u4e00\u884c\u4ee3\u7801\u5b8c\u6210\u8c03\u7528\uff01\n\n\u793a\u4f8b\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\norderId = orderService.order(\u53c2\u65701, \u53c2\u65702, \u53c2\u65703)\n```\n\n\n\n\u770b\u8d77\u6765\u5c31\u8ddf\u8c03\u7528\u81ea\u5df1\u9879\u76ee\u7684\u65b9\u6cd5\u6ca1\u6709\u4efb\u4f55\u533a\u522b\uff01\u662f\u4e0d\u662f\u5f88\u4e1d\u6ed1\uff1f\n\n\n\n## \u4e8c\u3001RPC \u6846\u67b6\u5b9e\u73b0\u601d\u8def\n\n### \u57fa\u672c\u8bbe\u8ba1\nRPC \u6846\u67b6\u4e3a\u4ec0\u4e48\u80fd\u5e2e\u6211\u4eec\u7b80\u5316\u8c03\u7528\uff1f\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a RPC \u6846\u67b6\u5462\uff1f\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5f00\u5c40\u4e00\u5f20\u56fe\uff0c\u6709\u670d\u52a1\u6d88\u8d39\u8005\u548c\u670d\u52a1\u63d0\u4f9b\u8005\u4e24\u4e2a\u89d2\u8272\uff1a\n\n![](https://pic.yupi.icu/1/1708313001733-888f2115-6407-48ea-bf12-d3a61d77704c.jpeg)\n\n\u6d88\u8d39\u8005\u60f3\u8981\u8c03\u7528\u63d0\u4f9b\u8005\uff0c\u5c31\u9700\u8981\u63d0\u4f9b\u8005\u542f\u52a8\u4e00\u4e2a `web \u670d\u52a1`\uff0c\u7136\u540e\u901a\u8fc7 `\u8bf7\u6c42\u5ba2\u6237\u7aef`\u53d1\u9001 HTTP \u6216\u8005\u5176\u4ed6\u534f\u8bae\u7684\u8bf7\u6c42\u6765\u8c03\u7528\u3002\n\n\u6bd4\u5982\u8bf7\u6c42 `yupi.icu/order` \u5730\u5740\u540e\uff0c\u63d0\u4f9b\u8005\u4f1a\u8c03\u7528 orderService \u7684 order \u65b9\u6cd5\uff1a\n\n![](https://pic.yupi.icu/1/1708315395549-204f8ec0-0d1c-4e26-9af3-b1f128781f73.jpeg)\n\n\u4f46\u5982\u679c\u63d0\u4f9b\u8005\u63d0\u4f9b\u4e86\u591a\u4e2a\u670d\u52a1\u548c\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u63a5\u53e3\u548c\u65b9\u6cd5\u90fd\u8981\u5355\u72ec\u5199\u4e00\u4e2a\u63a5\u53e3\uff1f\u6d88\u8d39\u8005\u8981\u9488\u5bf9\u6bcf\u4e2a\u63a5\u53e3\u5199\u4e00\u6bb5 HTTP \u8c03\u7528\u7684\u903b\u8f91\u4e48\uff1f\n\n\u5176\u5b9e\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u670d\u52a1\u8c03\u7528\u63a5\u53e3\uff0c\u901a\u8fc7 `\u8bf7\u6c42\u5904\u7406\u5668` \u6839\u636e\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u53c2\u6570\u6765\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\u3001\u8c03\u7528\u4e0d\u540c\u7684\u670d\u52a1\u548c\u65b9\u6cd5\u3002\n\n\u53ef\u4ee5\u5728\u670d\u52a1\u63d0\u4f9b\u8005\u7a0b\u5e8f\u7ef4\u62a4\u4e00\u4e2a `\u672c\u5730\u670d\u52a1\u6ce8\u518c\u5668`\uff0c\u8bb0\u5f55\u670d\u52a1\u548c\u5bf9\u5e94\u5b9e\u73b0\u7c7b\u7684\u6620\u5c04\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6d88\u8d39\u8005\u8981\u8c03\u7528 orderService \u670d\u52a1\u7684 order \u65b9\u6cd5\uff0c\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\uff0c\u53c2\u6570\u4e3a `service=orderService,method=order`\uff0c\u7136\u540e\u8bf7\u6c42\u5904\u7406\u5668\u4f1a\u6839\u636e service \u4ece\u670d\u52a1\u6ce8\u518c\u5668\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u73b0\u7c7b\uff0c\u5e76\u4e14\u901a\u8fc7 Java \u7684\u53cd\u5c04\u673a\u5236\u8c03\u7528 method \u6307\u5b9a\u7684\u65b9\u6cd5\u3002\n\n![](https://pic.yupi.icu/1/1708315343539-7a6919e0-29fb-4750-9202-0badb9ec1100.jpeg)\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e Java \u5bf9\u8c61\u65e0\u6cd5\u76f4\u63a5\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\uff0c\u6240\u4ee5\u8981\u5bf9\u4f20\u8f93\u7684\u53c2\u6570\u8fdb\u884c `\u5e8f\u5217\u5316` \u548c `\u53cd\u5e8f\u5217\u5316`\u3002\n\n![](https://pic.yupi.icu/1/1708316849249-6b8d3f6c-1fb8-435b-a71b-bf1a5f59fbc8.jpeg)\n\n\u4e3a\u4e86\u7b80\u5316\u6d88\u8d39\u8005\u53d1\u8bf7\u6c42\u7684\u4ee3\u7801\uff0c\u5b9e\u73b0\u7c7b\u4f3c\u672c\u5730\u8c03\u7528\u7684\u4f53\u9a8c\u3002\u53ef\u4ee5\u57fa\u4e8e\u4ee3\u7406\u6a21\u5f0f\uff0c\u4e3a\u6d88\u8d39\u8005\u8981\u8c03\u7528\u7684\u63a5\u53e3\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u7531\u4ee3\u7406\u5bf9\u8c61\u5b8c\u6210\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u8fc7\u7a0b\u3002\n\n\u6240\u8c13\u4ee3\u7406\uff0c\u5c31\u662f\u6709\u4eba\u5e2e\u4f60\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4e0d\u7528\u81ea\u5df1\u64cd\u5fc3\u3002\n\n\u81f3\u6b64\uff0c\u4e00\u4e2a\u6700\u7b80\u6613\u7684 RPC \u6846\u67b6\u67b6\u6784\u56fe\u8bde\u751f\u4e86\uff1a\n\n![](https://pic.yupi.icu/1/1708316995684-afefdfe6-4996-402c-82d9-5ed61b63496d.jpeg)\n\n\u4e0a\u56fe\u4e2d\u7684\u865a\u7ebf\u6846\u90e8\u5206\uff0c\u5c31\u662f RPC \u6846\u67b6\u9700\u8981\u63d0\u4f9b\u7684\u6a21\u5757\u548c\u80fd\u529b\u3002\n\n\n\n### \u6269\u5c55\u8bbe\u8ba1\n\n\u867d\u7136\u4e0a\u8ff0\u8bbe\u8ba1\u5df2\u7ecf\u8dd1\u901a\u4e86\u57fa\u672c\u8c03\u7528\u6d41\u7a0b\uff0c\u4f46\u79bb\u4e00\u4e2a\u5b8c\u5907\u7684 RPC \u6846\u67b6\u8fd8\u6709\u5f88\u5927\u7684\u5dee\u8ddd\uff0c\u8ba9\u6211\u4eec\u5e26\u7740\u95ee\u9898\u6765\u8fdb\u4e00\u6b65\u5b8c\u5584\u4e0b\u67b6\u6784\u8bbe\u8ba1\u3002\n\n\n\n#### 1\u3001\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\n\n\u95ee\u9898 1\uff1a\u6d88\u8d39\u8005\u5982\u4f55\u77e5\u9053\u63d0\u4f9b\u8005\u7684\u8c03\u7528\u5730\u5740\u5462\uff1f\n\n\u7c7b\u6bd4\u751f\u6d3b\u573a\u666f\uff0c\u6211\u4eec\u70b9\u5916\u5356\u65f6\uff0c\u5916\u5356\u5c0f\u54e5\u5982\u4f55\u77e5\u9053\u6211\u4eec\u7684\u5730\u5740\u548c\u5e97\u94fa\u7684\u5730\u5740\uff1f\u80af\u5b9a\u662f\u4e70\u5bb6\u548c\u5356\u5bb6\u5206\u522b\u586b\u5199\u5730\u5740\uff0c\u7531\u5e73\u53f0\u6765\u4fdd\u5b58\u7684\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a `\u6ce8\u518c\u4e2d\u5fc3`\uff0c\u6765\u4fdd\u5b58\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5730\u5740\u3002\u6d88\u8d39\u8005\u8981\u8c03\u7528\u670d\u52a1\u65f6\uff0c\u53ea\u9700\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6\u5bf9\u5e94\u670d\u52a1\u7684\u63d0\u4f9b\u8005\u5730\u5740\u5373\u53ef\u3002\n\n\u67b6\u6784\u56fe\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708316408914-198184da-8985-4c8f-b8eb-593e82045881-20240312151021139.jpeg)\n\n\u4e00\u822c\u7528\u73b0\u6210\u7684\u7b2c\u4e09\u65b9\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6bd4\u5982 Redis\u3001Zookeeper \u5373\u53ef\u3002\n\n\n\n#### 2\u3001\u8d1f\u8f7d\u5747\u8861\n\n\u95ee\u9898 2\uff1a\u5982\u679c\u6709\u591a\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u6d88\u8d39\u8005\u5e94\u8be5\u8c03\u7528\u54ea\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u7ed9\u670d\u52a1\u8c03\u7528\u65b9\u589e\u52a0\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\uff0c\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684\u7b97\u6cd5\u6765\u51b3\u5b9a\u8c03\u7528\u54ea\u4e00\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u6bd4\u5982\u8f6e\u8be2\u3001\u968f\u673a\u3001\u6839\u636e\u6027\u80fd\u52a8\u6001\u8c03\u7528\u7b49\u3002\n\n\u67b6\u6784\u56fe\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708317054628-7b110ce5-8577-4401-a9b8-53255ec4308e.jpeg)\n\n\n\n#### 3\u3001\u5bb9\u9519\u673a\u5236\n\n\u95ee\u9898 3\uff1a\u5982\u679c\u670d\u52a1\u8c03\u7528\u5931\u8d25\uff0c\u5e94\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\n\n\u4e3a\u4e86\u4fdd\u8bc1\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u9ad8\u53ef\u7528\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u7ed9\u670d\u52a1\u7684\u8c03\u7528\u589e\u52a0\u4e00\u5b9a\u7684\u5bb9\u9519\u673a\u5236\uff0c\u6bd4\u5982\u5931\u8d25\u91cd\u8bd5\u3001\u964d\u7ea7\u8c03\u7528\u5176\u4ed6\u63a5\u53e3\u7b49\u7b49\u3002\n\n\u67b6\u6784\u56fe\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708317244887-9c701686-a965-4ff6-aace-3f24a9c6a0e8.jpeg)\n\n\n\n#### 4\u3001\u5176\u4ed6\n\u9664\u4e86\u4e0a\u9762\u51e0\u4e2a\u7ecf\u5178\u8bbe\u8ba1\u5916\uff0c\u5982\u679c\u60f3\u8981\u505a\u4e00\u4e2a\u4f18\u79c0\u7684 RPC \u6846\u67b6\uff0c\u8fd8\u8981\u8003\u8651\u5f88\u591a\u95ee\u9898\u3002\n\n\u6bd4\u5982\uff1a\n\n- \u670d\u52a1\u63d0\u4f9b\u8005\u4e0b\u7ebf\u4e86\u600e\u4e48\u529e\uff1f\u9700\u8981\u4e00\u4e2a\u5931\u6548\u8282\u70b9\u5254\u9664\u673a\u5236\u3002\n- \u670d\u52a1\u6d88\u8d39\u8005\u6bcf\u6b21\u90fd\u4ece\u6ce8\u518c\u4e2d\u5fc3\u62c9\u53d6\u4fe1\u606f\uff0c\u6027\u80fd\u4f1a\u4e0d\u4f1a\u5f88\u5dee\uff1f\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u6765\u4f18\u5316\u6027\u80fd\u3002\n- \u5982\u4f55\u4f18\u5316 RPC \u6846\u67b6\u7684\u4f20\u8f93\u901a\u8baf\u6027\u80fd\uff1f\u6bd4\u5982\u9009\u62e9\u5408\u9002\u7684\u7f51\u7edc\u6846\u67b6\u3001\u81ea\u5b9a\u4e49\u534f\u8bae\u5934\u3001\u8282\u7ea6\u4f20\u8f93\u4f53\u79ef\u7b49\u3002\n- \u5982\u4f55\u8ba9\u6574\u4e2a\u6846\u67b6\u66f4\u5229\u4e8e\u6269\u5c55\uff1f\u6bd4\u5982\u4f7f\u7528 Java \u7684 SPI \u673a\u5236\u3001\u914d\u7f6e\u5316\u7b49\u7b49\u3002\n\n\u6240\u4ee5\uff0c\u5b8c\u6210 RPC \u9879\u76ee\u5e76\u4e0d\u96be\uff0c\u4f46\u505a\u4e00\u4e2a\u5b8c\u7f8e\u7684 RPC \u9879\u76ee\u5374\u662f\u96be\u4e8e\u4e0a\u9752\u5929\u554a\uff01\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u505a\u4e00\u4e2a RPC \u9879\u76ee\u5b66\u4e60\u5230\u7f51\u7edc\u3001\u5e8f\u5217\u5316\u3001\u4ee3\u7406\u3001\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u5bb9\u9519\u3001\u53ef\u6269\u5c55\u8bbe\u8ba1\u7b49\u77e5\u8bc6\uff0c\u76f8\u4fe1\u5b8c\u6210\u9879\u76ee\u540e\u4f1a\u6536\u83b7\u6ee1\u6ee1\u3002\n\n\n\n## \u4e09\u3001\u5f00\u53d1\u7b80\u6613\u7248 RPC \u6846\u67b6\n\n\u4e0b\u9762\u6211\u4eec\u5c31\u4ece 0 \u5f00\u59cb\uff0c\u5148\u5b8c\u6210\u4e00\u4e2a\u7b80\u6613\u7248\u7684 RPC \u6846\u67b6\uff0c\u540e\u9762\u518d\u6301\u7eed\u6269\u5c55\u4f18\u5316\u3002\n\n\u67b6\u6784\u8bbe\u8ba1\u56fe\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708316995684-afefdfe6-4996-402c-82d9-5ed61b63496d-20240219201540179.jpeg)\n\n\n\n### \u9879\u76ee\u51c6\u5907\n\n#### 1\u3001\u9879\u76ee\u521d\u59cb\u5316\n\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6839\u76ee\u5f55 `yu-rpc`\uff0c\u7136\u540e\u4f7f\u7528 IDEA \u5f00\u53d1\u5de5\u5177\u4f9d\u6b21\u521b\u5efa\u51e0\u4e2a Maven \u6a21\u5757\u3002\n\n![](https://pic.yupi.icu/1/1708336559546-699079fd-a75c-4fa9-9ad6-f6b66432a2e1.png)\n\n\u6574\u4e2a\u57fa\u7840 RPC \u6846\u67b6\u7684\u9879\u76ee\u76ee\u5f55\u5982\u56fe\uff1a\n\n![](https://pic.yupi.icu/1/1708336608818-d661e1bc-a028-4a63-8db6-cef199cbc209.png)\n\n\u5206\u522b\u4ecb\u7ecd\u51e0\u4e2a\u6a21\u5757\uff1a\n\n- example-common\uff1a\u793a\u4f8b\u4ee3\u7801\u7684\u516c\u5171\u4f9d\u8d56\uff0c\u5305\u62ec\u63a5\u53e3\u3001Model \u7b49\n- example-consumer\uff1a\u793a\u4f8b\u670d\u52a1\u6d88\u8d39\u8005\u4ee3\u7801\n- example-provider\uff1a\u793a\u4f8b\u670d\u52a1\u63d0\u4f9b\u8005\u4ee3\u7801\n- yu-rpc-easy\uff1a\u7b80\u6613\u7248 RPC \u6846\u67b6\n\n\u5728\u793a\u4f8b\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u5c06\u4ee5\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u7528\u6237\u670d\u52a1\u4e3a\u4f8b\uff0c\u6f14\u793a\u6574\u4e2a\u670d\u52a1\u8c03\u7528\u8fc7\u7a0b\u3002\u4e0b\u9762\u6211\u4eec\u4f9d\u6b21\u5b9e\u73b0\u4e0a\u8ff0\u7684\u51e0\u4e2a\u6a21\u5757\u3002\n\n\n\n#### 2\u3001\u516c\u5171\u6a21\u5757\n\n\u516c\u5171\u6a21\u5757\u9700\u8981\u540c\u65f6\u88ab\u6d88\u8d39\u8005\u548c\u670d\u52a1\u63d0\u4f9b\u8005\u5f15\u5165\uff0c\u4e3b\u8981\u662f\u7f16\u5199\u548c\u670d\u52a1\u76f8\u5173\u7684\u63a5\u53e3\u548c\u6570\u636e\u6a21\u578b\u3002\n\n\u6574\u4e2a\u6a21\u5757\u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708336996998-1a46ae19-42b7-4c45-b2d7-584fe83a460a.png)\n\n\n\n1\uff09\u7f16\u5199\u7528\u6237\u5b9e\u4f53\u7c7b User\uff1a\n\n```java\npackage com.yupi.example.common.model;\n\nimport java.io.Serializable;\n\n/**\n * \u7528\u6237\n */\npublic class User implements Serializable {\n\n    private String name;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n```\n\n\n\n\u6ce8\u610f\uff0c\u5bf9\u8c61\u9700\u8981\u5b9e\u73b0\u5e8f\u5217\u5316\u63a5\u53e3\uff0c\u4e3a\u540e\u7eed\u7f51\u7edc\u4f20\u8f93\u5e8f\u5217\u5316\u63d0\u4f9b\u652f\u6301\u3002\n\n\n\n2\uff09\u7f16\u5199\u7528\u6237\u670d\u52a1\u63a5\u53e3 UserService\uff0c\u63d0\u4f9b\u4e00\u4e2a\u83b7\u53d6\u7528\u6237\u7684\u65b9\u6cd5\uff1a\n\n```java\npackage com.yupi.example.common.service;\n\nimport com.yupi.example.common.model.User;\n\n/**\n * \u7528\u6237\u670d\u52a1\n */\npublic interface UserService {\n\n    /**\n     * \u83b7\u53d6\u7528\u6237\n     *\n     * @param user\n     * @return\n     */\n    User getUser(User user);\n}\n```\n\n\n\n#### 3\u3001\u670d\u52a1\u63d0\u4f9b\u8005\n\n\u670d\u52a1\u63d0\u4f9b\u8005\u662f\u771f\u6b63\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u6a21\u5757\u3002\n\n\n\n1\uff09\u5728 `pom.xml` \u6587\u4ef6\u4e2d\u5f15\u5165\u4f9d\u8d56\uff1a\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>com.yupi</groupId>\n        <artifactId>yu-rpc-easy</artifactId>\n        <version>1.0-SNAPSHOT</version>\n    </dependency>\n    <dependency>\n        <groupId>com.yupi</groupId>\n        <artifactId>example-common</artifactId>\n        <version>1.0-SNAPSHOT</version>\n    </dependency>\n    <!-- https://doc.hutool.cn/ -->\n    <dependency>\n        <groupId>cn.hutool</groupId>\n        <artifactId>hutool-all</artifactId>\n        <version>5.8.16</version>\n    </dependency>\n    <!-- https://projectlombok.org/ -->\n    <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>1.18.30</version>\n        <scope>provided</scope>\n    </dependency>\n</dependencies>\n```\n\n\n\n2\uff09\u7f16\u5199\u670d\u52a1\u5b9e\u73b0\u7c7b\uff0c\u5b9e\u73b0\u516c\u5171\u6a21\u5757\u4e2d\u5b9a\u4e49\u7684\u7528\u6237\u670d\u52a1\u63a5\u53e3\u3002\n\n\u529f\u80fd\u662f\u6253\u5370\u7528\u6237\u7684\u540d\u79f0\uff0c\u5e76\u4e14\u8fd4\u56de\u53c2\u6570\u4e2d\u7684\u7528\u6237\u5bf9\u8c61\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.example.provider;\n\nimport com.yupi.example.common.model.User;\nimport com.yupi.example.common.service.UserService;\n\n/**\n * \u7528\u6237\u670d\u52a1\u5b9e\u73b0\u7c7b\n */\npublic class UserServiceImpl implements UserService {\n\n    public User getUser(User user) {\n        System.out.println(\"\u7528\u6237\u540d\uff1a\" + user.getName());\n        return user;\n    }\n}\n```\n\n\n\n3\uff09\u7f16\u5199\u670d\u52a1\u63d0\u4f9b\u8005\u542f\u52a8\u7c7b EasyProviderExample\uff0c\u4e4b\u540e\u4f1a\u5728\u8be5\u7c7b\u7684 main \u65b9\u6cd5\u4e2d\u7f16\u5199\u63d0\u4f9b\u670d\u52a1\u7684\u4ee3\u7801\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.example.provider;\n\nimport com.yupi.example.common.service.UserService;\nimport com.yupi.yurpc.registry.LocalRegistry;\nimport com.yupi.yurpc.server.HttpServer;\nimport com.yupi.yurpc.server.VertxHttpServer;\n\n/**\n * \u7b80\u6613\u670d\u52a1\u63d0\u4f9b\u8005\u793a\u4f8b\n */\npublic class EasyProviderExample {\n\n    public static void main(String[] args) {\n        // \u63d0\u4f9b\u670d\u52a1\n    }\n}\n```\n\n\n\n\u6700\u7ec8\u5f97\u5230\u7684\u8be5\u6a21\u5757\u76ee\u5f55\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708337332111-1e56db79-0a21-429e-8b59-31215ec0799d.png)\n\n\n\n#### 4\u3001\u670d\u52a1\u6d88\u8d39\u8005\n\n\u670d\u52a1\u6d88\u8d39\u8005\u662f\u9700\u8981\u8c03\u7528\u670d\u52a1\u7684\u6a21\u5757\u3002\n\n\n\n1\uff09\u5728 `pom.xml` \u6587\u4ef6\u4e2d\u5f15\u5165\u4f9d\u8d56\uff0c\u548c\u63d0\u4f9b\u8005\u6a21\u5757\u7684\u4f9d\u8d56\u4e00\u81f4\uff1a\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>com.yupi</groupId>\n        <artifactId>yu-rpc-easy</artifactId>\n        <version>1.0-SNAPSHOT</version>\n    </dependency>\n    <dependency>\n        <groupId>com.yupi</groupId>\n        <artifactId>example-common</artifactId>\n        <version>1.0-SNAPSHOT</version>\n    </dependency>\n    <!-- https://doc.hutool.cn/ -->\n    <dependency>\n        <groupId>cn.hutool</groupId>\n        <artifactId>hutool-all</artifactId>\n        <version>5.8.16</version>\n    </dependency>\n    <!-- https://projectlombok.org/ -->\n    <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>1.18.30</version>\n        <scope>provided</scope>\n    </dependency>\n</dependencies>\n```\n\n\n\n2\uff09\u521b\u5efa\u670d\u52a1\u6d88\u8d39\u8005\u542f\u52a8\u7c7b EasyConsumerExample\uff0c\u7f16\u5199\u8c03\u7528\u63a5\u53e3\u7684\u4ee3\u7801\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.example.consumer;\n\nimport com.yupi.example.common.model.User;\nimport com.yupi.example.common.service.UserService;\nimport com.yupi.yurpc.proxy.ServiceProxyFactory;\n\n/**\n * \u7b80\u6613\u670d\u52a1\u6d88\u8d39\u8005\u793a\u4f8b\n */\npublic class EasyConsumerExample {\n\n    public static void main(String[] args) {\n        // todo \u9700\u8981\u83b7\u53d6 UserService \u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61\n        UserService userService = null;\n        User user = new User();\n        user.setName(\"yupi\");\n        // \u8c03\u7528\n        User newUser = userService.getUser(user);\n        if (newUser != null) {\n            System.out.println(newUser.getName());\n        } else {\n            System.out.println(\"user == null\");\n        }\n    }\n}\n```\n\n\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u73b0\u5728\u662f\u65e0\u6cd5\u83b7\u53d6\u5230 userService \u5b9e\u4f8b\u7684\uff0c\u6240\u4ee5\u9884\u7559\u4e3a null\u3002\u6211\u4eec\u4e4b\u540e\u7684\u76ee\u6807\u662f\uff0c\u80fd\u591f\u901a\u8fc7 RPC \u6846\u67b6\uff0c\u5feb\u901f\u5f97\u5230\u4e00\u4e2a\u652f\u6301\u8fdc\u7a0b\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u50cf\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u4e00\u6837\u8c03\u7528 UserService \u7684\u65b9\u6cd5\u3002\n\n\n\n\u6700\u7ec8\u5f97\u5230\u7684\u8be5\u6a21\u5757\u76ee\u5f55\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708337621351-998a9137-17da-484c-939b-f5e43a5dbd5b.png)\n\n\n\n### web \u670d\u52a1\u5668\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u5148\u8ba9\u670d\u52a1\u63d0\u4f9b\u8005\u63d0\u4f9b **\u53ef\u8fdc\u7a0b\u8bbf\u95ee** \u7684\u670d\u52a1\u3002\u90a3\u4e48\uff0c\u5c31\u9700\u8981\u4e00\u4e2a web \u670d\u52a1\u5668\uff0c\u80fd\u591f\u63a5\u53d7\u5904\u7406\u8bf7\u6c42\u3001\u5e76\u8fd4\u56de\u54cd\u5e94\u3002\n\nweb \u670d\u52a1\u5668\u7684\u9009\u62e9\u6709\u5f88\u591a\uff0c\u6bd4\u5982 Spring Boot \u5185\u5d4c\u7684 Tomcat\u3001NIO \u6846\u67b6 Netty \u548c Vert.x \u7b49\u7b49\u3002\n\n\u6b64\u5904\u9c7c\u76ae\u5e26\u5927\u5bb6\u4f7f\u7528\u9ad8\u6027\u80fd\u7684 NIO \u6846\u67b6 Vert.x \u6765\u4f5c\u4e3a RPC \u6846\u67b6\u7684 web \u670d\u52a1\u5668\u3002\n\nVert.x \u5b98\u65b9\u6587\u6863\uff1ahttps://vertx.io/\n\n\n\n1\uff09\u6253\u5f00 `yu-rpc-easy` \u9879\u76ee\uff0c\u5f15\u5165 Vert.x \u548c\u5de5\u5177\u7c7b\u7684\u4f9d\u8d56\uff1a\n\n```xml\n<dependencies>\n    <!-- https://mvnrepository.com/artifact/io.vertx/vertx-core -->\n    <dependency>\n        <groupId>io.vertx</groupId>\n        <artifactId>vertx-core</artifactId>\n        <version>4.5.1</version>\n    </dependency>\n    <!-- https://doc.hutool.cn/ -->\n    <dependency>\n        <groupId>cn.hutool</groupId>\n        <artifactId>hutool-all</artifactId>\n        <version>5.8.16</version>\n    </dependency>\n    <!-- https://projectlombok.org/ -->\n    <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>1.18.30</version>\n        <scope>provided</scope>\n    </dependency>\n</dependencies>\n```\n\n\n\n2\uff09\u7f16\u5199\u4e00\u4e2a web \u670d\u52a1\u5668\u7684\u63a5\u53e3 HttpServer\uff0c\u5b9a\u4e49\u7edf\u4e00\u7684\u542f\u52a8\u670d\u52a1\u5668\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u6269\u5c55\uff0c\u6bd4\u5982\u5b9e\u73b0\u591a\u79cd\u4e0d\u540c\u7684 web \u670d\u52a1\u5668\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.server;\n\n/**\n * HTTP \u670d\u52a1\u5668\u63a5\u53e3\n */\npublic interface HttpServer {\n\n    /**\n     * \u542f\u52a8\u670d\u52a1\u5668\n     *\n     * @param port\n     */\n    void doStart(int port);\n}\n```\n\n\n\n3\uff09\u7f16\u5199\u57fa\u4e8e Vert.x \u5b9e\u73b0\u7684 web \u670d\u52a1\u5668 VertxHttpServer\uff0c\u80fd\u591f\u76d1\u542c\u6307\u5b9a\u7aef\u53e3\u5e76\u5904\u7406\u8bf7\u6c42\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.server;\n\nimport io.vertx.core.Vertx;\n\npublic class VertxHttpServer implements HttpServer {\n\n    public void doStart(int port) {\n        // \u521b\u5efa Vert.x \u5b9e\u4f8b\n        Vertx vertx = Vertx.vertx();\n\n        // \u521b\u5efa HTTP \u670d\u52a1\u5668\n        io.vertx.core.http.HttpServer server = vertx.createHttpServer();\n\n        // \u76d1\u542c\u7aef\u53e3\u5e76\u5904\u7406\u8bf7\u6c42\n        server.requestHandler(request -> {\n            // \u5904\u7406 HTTP \u8bf7\u6c42\n            System.out.println(\"Received request: \" + request.method() + \" \" + request.uri());\n\n            // \u53d1\u9001 HTTP \u54cd\u5e94\n            request.response()\n                    .putHeader(\"content-type\", \"text/plain\")\n                    .end(\"Hello from Vert.x HTTP server!\");\n        });\n\n        // \u542f\u52a8 HTTP \u670d\u52a1\u5668\u5e76\u76d1\u542c\u6307\u5b9a\u7aef\u53e3\n        server.listen(port, result -> {\n            if (result.succeeded()) {\n                System.out.println(\"Server is now listening on port \" + port);\n            } else {\n                System.err.println(\"Failed to start server: \" + result.cause());\n            }\n        });\n    }\n}\n```\n\n\n\n4\uff09\u9a8c\u8bc1 web \u670d\u52a1\u5668\u80fd\u5426\u542f\u52a8\u6210\u529f\u5e76\u63a5\u53d7\u8bf7\u6c42\u3002\n\n\u4fee\u6539\u793a\u4f8b\u670d\u52a1\u63d0\u4f9b\u8005\u6a21\u5757\u7684 `EasyProviderExample` \u7c7b\uff0c\u7f16\u5199\u542f\u52a8 web \u670d\u52a1\u7684\u4ee3\u7801\uff0c\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.example.provider;\n\nimport com.yupi.example.common.service.UserService;\nimport com.yupi.yurpc.registry.LocalRegistry;\nimport com.yupi.yurpc.server.HttpServer;\nimport com.yupi.yurpc.server.VertxHttpServer;\n\n/**\n * \u7b80\u6613\u670d\u52a1\u63d0\u4f9b\u8005\u793a\u4f8b\n */\npublic class EasyProviderExample {\n\n    public static void main(String[] args) {\n        // \u542f\u52a8 web \u670d\u52a1\n        HttpServer httpServer = new VertxHttpServer();\n        httpServer.doStart(8080);\n    }\n}\n```\n\n\n\n\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee `localhost:8080`\uff0c\u67e5\u770b\u80fd\u5426\u6b63\u5e38\u8bbf\u95ee\u5e76\u770b\u5230\u8f93\u51fa\u7684\u6587\u5b57\u3002\n\n\n\n\u6b64\u65f6\u7684 RPC \u6a21\u5757\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708338414572-cfda8efb-d3d7-4795-b4ae-6527d89c05b6.png)\n\n\n\n### \u672c\u5730\u670d\u52a1\u6ce8\u518c\u5668\n\n\u6211\u4eec\u73b0\u5728\u505a\u7684\u7b80\u6613 RPC \u6846\u67b6\u4e3b\u8981\u662f\u8dd1\u901a\u6d41\u7a0b\uff0c\u6240\u4ee5\u6682\u65f6\u5148\u4e0d\u7528\u7b2c\u4e09\u65b9\u6ce8\u518c\u4e2d\u5fc3\uff0c\u76f4\u63a5\u628a\u670d\u52a1\u6ce8\u518c\u5230\u670d\u52a1\u63d0\u4f9b\u8005\u672c\u5730\u5373\u53ef\u3002\n\n\u5728 RPC \u6a21\u5757\u4e2d\u521b\u5efa\u672c\u5730\u670d\u52a1\u6ce8\u518c\u5668 LocalRegistry\uff0c\u5f53\u524d\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708339835118-1c72c391-c1cf-4f32-805d-996d7d349c99.png)\n\n\u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684 ConcurrentHashMap \u5b58\u50a8\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\uff0ckey \u4e3a\u670d\u52a1\u540d\u79f0\u3001value \u4e3a\u670d\u52a1\u7684\u5b9e\u73b0\u7c7b\u3002\u4e4b\u540e\u5c31\u53ef\u4ee5\u6839\u636e\u8981\u8c03\u7528\u7684\u670d\u52a1\u540d\u79f0\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\uff0c\u7136\u540e\u901a\u8fc7\u53cd\u5c04\u8fdb\u884c\u65b9\u6cd5\u8c03\u7528\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.registry;\n\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\n\n/**\n * \u672c\u5730\u6ce8\u518c\u4e2d\u5fc3\n */\npublic class LocalRegistry {\n\n    /**\n     * \u6ce8\u518c\u4fe1\u606f\u5b58\u50a8\n     */\n    private static final Map<String, Class<?>> map = new ConcurrentHashMap<>();\n\n    /**\n     * \u6ce8\u518c\u670d\u52a1\n     *\n     * @param serviceName\n     * @param implClass\n     */\n    public static void register(String serviceName, Class<?> implClass) {\n        map.put(serviceName, implClass);\n    }\n\n    /**\n     * \u83b7\u53d6\u670d\u52a1\n     *\n     * @param serviceName\n     * @return\n     */\n    public static Class<?> get(String serviceName) {\n        return map.get(serviceName);\n    }\n\n    /**\n     * \u5220\u9664\u670d\u52a1\n     *\n     * @param serviceName\n     */\n    public static void remove(String serviceName) {\n        map.remove(serviceName);\n    }\n}\n```\n\n\n\n\u6ce8\u610f\uff0c\u672c\u5730\u670d\u52a1\u6ce8\u518c\u5668\u548c\u6ce8\u518c\u4e2d\u5fc3\u7684\u4f5c\u7528\u662f\u6709\u533a\u522b\u7684\u3002\u6ce8\u518c\u4e2d\u5fc3\u7684\u4f5c\u7528\u4fa7\u91cd\u4e8e\u7ba1\u7406\u6ce8\u518c\u7684\u670d\u52a1\u3001\u63d0\u4f9b\u670d\u52a1\u4fe1\u606f\u7ed9\u6d88\u8d39\u8005\uff1b\u800c\u672c\u5730\u670d\u52a1\u6ce8\u518c\u5668\u7684\u4f5c\u7528\u662f\u6839\u636e\u670d\u52a1\u540d\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\uff0c\u662f\u5b8c\u6210\u8c03\u7528\u5fc5\u4e0d\u53ef\u5c11\u7684\u6a21\u5757\u3002\n\n\n\n\u670d\u52a1\u63d0\u4f9b\u8005\u542f\u52a8\u65f6\uff0c\u9700\u8981\u6ce8\u518c\u670d\u52a1\u5230\u6ce8\u518c\u5668\u4e2d\uff0c\u4fee\u6539 `EasyProviderExample` \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.example.provider;\n\nimport com.yupi.example.common.service.UserService;\nimport com.yupi.yurpc.registry.LocalRegistry;\nimport com.yupi.yurpc.server.HttpServer;\nimport com.yupi.yurpc.server.VertxHttpServer;\n\n/**\n * \u7b80\u6613\u670d\u52a1\u63d0\u4f9b\u8005\u793a\u4f8b\n */\npublic class EasyProviderExample {\n\n    public static void main(String[] args) {\n        // \u6ce8\u518c\u670d\u52a1\n        LocalRegistry.register(UserService.class.getName(), UserServiceImpl.class);\n\n        // \u542f\u52a8 web \u670d\u52a1\n        HttpServer httpServer = new VertxHttpServer();\n        httpServer.doStart(8080);\n    }\n}\n```\n\n\n\n### \u5e8f\u5217\u5316\u5668\n\n\u670d\u52a1\u5728\u672c\u5730\u6ce8\u518c\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8bf7\u6c42\u4fe1\u606f\u53d6\u51fa\u5b9e\u73b0\u7c7b\u5e76\u8c03\u7528\u65b9\u6cd5\u4e86\u3002\n\n\u4f46\u662f\u5728\u7f16\u5199\u5904\u7406\u8bf7\u6c42\u7684\u903b\u8f91\u524d\uff0c\u6211\u4eec\u8981\u5148\u5b9e\u73b0\u5e8f\u5217\u5316\u5668\u6a21\u5757\u3002\u56e0\u4e3a\u65e0\u8bba\u662f\u8bf7\u6c42\u6216\u54cd\u5e94\uff0c\u90fd\u4f1a\u6d89\u53ca\u53c2\u6570\u7684\u4f20\u8f93\u3002\u800c Java \u5bf9\u8c61\u662f\u5b58\u6d3b\u5728 JVM \u865a\u62df\u673a\u4e2d\u7684\uff0c\u5982\u679c\u60f3\u5728\u5176\u4ed6\u4f4d\u7f6e\u5b58\u50a8\u5e76\u8bbf\u95ee\u3001\u6216\u8005\u5728\u7f51\u7edc\u4e2d\u8fdb\u884c\u4f20\u8f93\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\n\n\u4ec0\u4e48\u662f\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5462\uff1f\n\n- \u5e8f\u5217\u5316\uff1a\u5c06 Java \u5bf9\u8c61\u8f6c\u4e3a\u53ef\u4f20\u8f93\u7684\u5b57\u8282\u6570\u7ec4\u3002\n- \u53cd\u5e8f\u5217\u5316\uff1a\u5c06\u5b57\u8282\u6570\u7ec4\u8f6c\u6362\u4e3a Java \u5bf9\u8c61\u3002\n\n\n\n\u6709\u5f88\u591a\u79cd\u4e0d\u540c\u7684\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u6bd4\u5982 Java \u539f\u751f\u5e8f\u5217\u5316\u3001JSON\u3001Hessian\u3001Kryo\u3001protobuf \u7b49\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u65b9\u4fbf\uff0c\u6b64\u5904\u9009\u62e9 Java \u539f\u751f\u7684\u5e8f\u5217\u5316\u5668\u3002\n\n\n\n1\uff09\u5728 RPC \u6a21\u5757\u4e2d\u7f16\u5199\u5e8f\u5217\u5316\u63a5\u53e3 Serializer\uff0c\u63d0\u4f9b\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4e24\u4e2a\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u540e\u7eed\u6269\u5c55\u66f4\u591a\u7684\u5e8f\u5217\u5316\u5668\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.serializer;\n\nimport java.io.IOException;\n\n/**\n * \u5e8f\u5217\u5316\u5668\u63a5\u53e3\n */\npublic interface Serializer {\n\n    /**\n     * \u5e8f\u5217\u5316\n     *\n     * @param object\n     * @param <T>\n     * @return\n     * @throws IOException\n     */\n    <T> byte[] serialize(T object) throws IOException;\n\n    /**\n     * \u53cd\u5e8f\u5217\u5316\n     *\n     * @param bytes\n     * @param type\n     * @param <T>\n     * @return\n     * @throws IOException\n     */\n    <T> T deserialize(byte[] bytes, Class<T> type) throws IOException;\n}\n```\n\n\n\n2\uff09\u57fa\u4e8e Java \u81ea\u5e26\u7684\u5e8f\u5217\u5316\u5668\u5b9e\u73b0 JdkSerializer\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.serializer;\n\nimport java.io.*;\n\n/**\n * JDK \u5e8f\u5217\u5316\u5668\n */\npublic class JdkSerializer implements Serializer {\n\n    /**\n     * \u5e8f\u5217\u5316\n     *\n     * @param object\n     * @param <T>\n     * @return\n     * @throws IOException\n     */\n    @Override\n    public <T> byte[] serialize(T object) throws IOException {\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);\n        objectOutputStream.writeObject(object);\n        objectOutputStream.close();\n        return outputStream.toByteArray();\n    }\n\n    /**\n     * \u53cd\u5e8f\u5217\u5316\n     *\n     * @param bytes\n     * @param type\n     * @param <T>\n     * @return\n     * @throws IOException\n     */\n    @Override\n    public <T> T deserialize(byte[] bytes, Class<T> type) throws IOException {\n        ByteArrayInputStream inputStream = new ByteArrayInputStream(bytes);\n        ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);\n        try {\n            return (T) objectInputStream.readObject();\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        } finally {\n            objectInputStream.close();\n        }\n    }\n}\n```\n\n\n\n\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u65e0\u9700\u8bb0\u5fc6\uff0c\u9700\u8981\u7528\u5230\u7684\u65f6\u5019\u7167\u6284\u5373\u53ef\uff0c\u5173\u952e\u662f\u8981\u7406\u89e3\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u533a\u522b\u3002\n\n\n\n\u5f53\u524d RPC \u6a21\u5757\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708340467785-14181d1f-3369-4acd-b8cf-f681246fbeae.png)\n\n\n\n### \u63d0\u4f9b\u8005\u5904\u7406\u8c03\u7528 - \u8bf7\u6c42\u5904\u7406\u5668\n\n\u8bf7\u6c42\u5904\u7406\u5668\u662f RPC \u6846\u67b6\u7684\u5b9e\u73b0\u5173\u952e\uff0c\u5b83\u7684\u4f5c\u7528\u662f\uff1a\u5904\u7406\u63a5\u6536\u5230\u7684\u8bf7\u6c42\uff0c\u5e76\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u627e\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u548c\u65b9\u6cd5\uff0c\u901a\u8fc7\u53cd\u5c04\u5b9e\u73b0\u8c03\u7528\uff0c\u6700\u540e\u5c01\u88c5\u8fd4\u56de\u7ed3\u679c\u5e76\u54cd\u5e94\u8bf7\u6c42\u3002\n\n\n\n1\uff09\u5728 RPC \u6a21\u5757\u4e2d\u7f16\u5199\u8bf7\u6c42\u548c\u54cd\u5e94\u5c01\u88c5\u7c7b\u3002\n\n\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/1708341014680-2035cabf-3956-4e0d-8694-539a7ab45c12.png)\n\n\u8bf7\u6c42\u7c7b RpcRequest \u7684\u4f5c\u7528\u662f\u5c01\u88c5\u8c03\u7528\u6240\u9700\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u670d\u52a1\u540d\u79f0\u3001\u65b9\u6cd5\u540d\u79f0\u3001\u8c03\u7528\u53c2\u6570\u7684\u7c7b\u578b\u5217\u8868\u3001\u53c2\u6570\u5217\u8868\u3002\u8fd9\u4e9b\u90fd\u662f Java \u53cd\u5c04\u673a\u5236\u6240\u9700\u7684\u53c2\u6570\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.model;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.io.Serializable;\n\n/**\n * RPC \u8bf7\u6c42\n */\n@Data\n@Builder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class RpcRequest implements Serializable {\n\n    /**\n     * \u670d\u52a1\u540d\u79f0\n     */\n    private String serviceName;\n\n    /**\n     * \u65b9\u6cd5\u540d\u79f0\n     */\n    private String methodName;\n\n    /**\n     * \u53c2\u6570\u7c7b\u578b\u5217\u8868\n     */\n    private Class<?>[] parameterTypes;\n\n    /**\n     * \u53c2\u6570\u5217\u8868\n     */\n    private Object[] args;\n\n}\n```\n\n\n\n\u54cd\u5e94\u7c7b RpcResponse \u7684\u4f5c\u7528\u662f\u5c01\u88c5\u8c03\u7528\u65b9\u6cd5\u5f97\u5230\u7684\u8fd4\u56de\u503c\u3001\u4ee5\u53ca\u8c03\u7528\u7684\u4fe1\u606f\uff08\u6bd4\u5982\u5f02\u5e38\u60c5\u51b5\uff09\u7b49\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.model;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.io.Serializable;\n\n/**\n * RPC \u54cd\u5e94\n */\n@Data\n@Builder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class RpcResponse implements Serializable {\n\n    /**\n     * \u54cd\u5e94\u6570\u636e\n     */\n    private Object data;\n\n    /**\n     * \u54cd\u5e94\u6570\u636e\u7c7b\u578b\uff08\u9884\u7559\uff09\n     */\n    private Class<?> dataType;\n\n    /**\n     * \u54cd\u5e94\u4fe1\u606f\n     */\n    private String message;\n\n    /**\n     * \u5f02\u5e38\u4fe1\u606f\n     */\n    private Exception exception;\n\n}\n```\n\n\n\n2\uff09\u7f16\u5199\u8bf7\u6c42\u5904\u7406\u5668 HttpServerHandler\u3002\n\n![](https://pic.yupi.icu/1/1708341993908-aafc596b-64b5-45d3-894e-ef915d3714b3.png)\n\n\n\n\u4e1a\u52a1\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n1. \u53cd\u5e8f\u5217\u5316\u8bf7\u6c42\u4e3a\u5bf9\u8c61\uff0c\u5e76\u4ece\u8bf7\u6c42\u5bf9\u8c61\u4e2d\u83b7\u53d6\u53c2\u6570\u3002\n2. \u6839\u636e\u670d\u52a1\u540d\u79f0\u4ece\u672c\u5730\u6ce8\u518c\u5668\u4e2d\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u73b0\u7c7b\u3002\n3. \u901a\u8fc7\u53cd\u5c04\u673a\u5236\u8c03\u7528\u65b9\u6cd5\uff0c\u5f97\u5230\u8fd4\u56de\u7ed3\u679c\u3002\n4. \u5bf9\u8fd4\u56de\u7ed3\u679c\u8fdb\u884c\u5c01\u88c5\u548c\u5e8f\u5217\u5316\uff0c\u5e76\u5199\u5165\u5230\u54cd\u5e94\u4e2d\u3002\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff0c\u914d\u5408\u4e0a\u8ff0\u6d41\u7a0b\u548c\u6ce8\u91ca\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\uff1a\n\n```java\npackage com.yupi.yurpc.server;\n\nimport com.yupi.yurpc.model.RpcRequest;\nimport com.yupi.yurpc.model.RpcResponse;\nimport com.yupi.yurpc.registry.LocalRegistry;\nimport com.yupi.yurpc.serializer.JdkSerializer;\nimport com.yupi.yurpc.serializer.Serializer;\nimport io.vertx.core.Handler;\nimport io.vertx.core.buffer.Buffer;\nimport io.vertx.core.http.HttpServerRequest;\nimport io.vertx.core.http.HttpServerResponse;\n\nimport java.io.IOException;\nimport java.lang.reflect.Method;\n\n/**\n * HTTP \u8bf7\u6c42\u5904\u7406\n */\npublic class HttpServerHandler implements Handler<HttpServerRequest> {\n\n    @Override\n    public void handle(HttpServerRequest request) {\n        // \u6307\u5b9a\u5e8f\u5217\u5316\u5668\n        final Serializer serializer = new JdkSerializer();\n\n        // \u8bb0\u5f55\u65e5\u5fd7\n        System.out.println(\"Received request: \" + request.method() + \" \" + request.uri());\n\n        // \u5f02\u6b65\u5904\u7406 HTTP \u8bf7\u6c42\n        request.bodyHandler(body -> {\n            byte[] bytes = body.getBytes();\n            RpcRequest rpcRequest = null;\n            try {\n                rpcRequest = serializer.deserialize(bytes, RpcRequest.class);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n            // \u6784\u9020\u54cd\u5e94\u7ed3\u679c\u5bf9\u8c61\n            RpcResponse rpcResponse = new RpcResponse();\n            // \u5982\u679c\u8bf7\u6c42\u4e3a null\uff0c\u76f4\u63a5\u8fd4\u56de\n            if (rpcRequest == null) {\n                rpcResponse.setMessage(\"rpcRequest is null\");\n                doResponse(request, rpcResponse, serializer);\n                return;\n            }\n\n            try {\n                // \u83b7\u53d6\u8981\u8c03\u7528\u7684\u670d\u52a1\u5b9e\u73b0\u7c7b\uff0c\u901a\u8fc7\u53cd\u5c04\u8c03\u7528\n                Class<?> implClass = LocalRegistry.get(rpcRequest.getServiceName());\n                Method method = implClass.getMethod(rpcRequest.getMethodName(), rpcRequest.getParameterTypes());\n                Object result = method.invoke(implClass.newInstance(), rpcRequest.getArgs());\n                // \u5c01\u88c5\u8fd4\u56de\u7ed3\u679c\n                rpcResponse.setData(result);\n                rpcResponse.setDataType(method.getReturnType());\n                rpcResponse.setMessage(\"ok\");\n            } catch (Exception e) {\n                e.printStackTrace();\n                rpcResponse.setMessage(e.getMessage());\n                rpcResponse.setException(e);\n            }\n            // \u54cd\u5e94\n            doResponse(request, rpcResponse, serializer);\n        });\n    }\n\n    /**\n     * \u54cd\u5e94\n     *\n     * @param request\n     * @param rpcResponse\n     * @param serializer\n     */\n    void doResponse(HttpServerRequest request, RpcResponse rpcResponse, Serializer serializer) {\n        HttpServerResponse httpServerResponse = request.response()\n                .putHeader(\"content-type\", \"application/json\");\n        try {\n            // \u5e8f\u5217\u5316\n            byte[] serialized = serializer.serialize(rpcResponse);\n            httpServerResponse.end(Buffer.buffer(serialized));\n        } catch (IOException e) {\n            e.printStackTrace();\n            httpServerResponse.end(Buffer.buffer());\n        }\n    }\n}\n```\n\n\n\n\u9700\u8981\u6ce8\u610f\uff0c\u4e0d\u540c\u7684 web \u670d\u52a1\u5668\u5bf9\u5e94\u7684\u8bf7\u6c42\u5904\u7406\u5668\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u4e0d\u540c\uff0c\u6bd4\u5982 Vert.x \u4e2d\u662f\u901a\u8fc7\u5b9e\u73b0 `Handler<HttpServerRequest>` \u63a5\u53e3\u6765\u81ea\u5b9a\u4e49\u8bf7\u6c42\u5904\u7406\u5668\u7684\u3002\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7 `request.bodyHandler` \u5f02\u6b65\u5904\u7406\u8bf7\u6c42\u3002\n\n\n\n3\uff09\u7ed9 HttpServer \u7ed1\u5b9a\u8bf7\u6c42\u5904\u7406\u5668\u3002\n\n\u4fee\u6539 VertxHttpServer \u7684\u4ee3\u7801\uff0c\u901a\u8fc7 `server.requestHandler` \u7ed1\u5b9a\u8bf7\u6c42\u5904\u7406\u5668\u3002\n\n\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.server;\n\nimport io.vertx.core.Vertx;\n\n/**\n * Vertx HTTP \u670d\u52a1\u5668\n */\npublic class VertxHttpServer implements HttpServer {\n\n    /**\n     * \u542f\u52a8\u670d\u52a1\u5668\n     *\n     * @param port\n     */\n    public void doStart(int port) {\n        // \u521b\u5efa Vert.x \u5b9e\u4f8b\n        Vertx vertx = Vertx.vertx();\n\n        // \u521b\u5efa HTTP \u670d\u52a1\u5668\n        io.vertx.core.http.HttpServer server = vertx.createHttpServer();\n\n        // \u76d1\u542c\u7aef\u53e3\u5e76\u5904\u7406\u8bf7\u6c42\n        server.requestHandler(new HttpServerHandler());\n\n        // \u542f\u52a8 HTTP \u670d\u52a1\u5668\u5e76\u76d1\u542c\u6307\u5b9a\u7aef\u53e3\n        server.listen(port, result -> {\n            if (result.succeeded()) {\n                System.out.println(\"Server is now listening on port \" + port);\n            } else {\n                System.err.println(\"Failed to start server: \" + result.cause());\n            }\n        });\n    }\n}\n```\n\n\n\n\u81f3\u6b64\uff0c\u5f15\u5165\u4e86 RPC \u6846\u67b6\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u6a21\u5757\uff0c\u5df2\u7ecf\u80fd\u591f\u63a5\u53d7\u8bf7\u6c42\u5e76\u5b8c\u6210\u670d\u52a1\u8c03\u7528\u4e86\u3002\n\n\n\n### \u6d88\u8d39\u65b9\u53d1\u8d77\u8c03\u7528 - \u4ee3\u7406\n\n\u5728\u9879\u76ee\u51c6\u5907\u9636\u6bb5\uff0c\u6211\u4eec\u5df2\u7ecf\u9884\u7559\u4e86\u4e00\u6bb5\u8c03\u7528\u670d\u52a1\u7684\u4ee3\u7801\uff0c\u53ea\u8981\u80fd\u591f\u83b7\u53d6\u5230 UserService \u5bf9\u8c61\uff08\u5b9e\u73b0\u7c7b\uff09\uff0c\u5c31\u80fd\u8dd1\u901a\u6574\u4e2a\u6d41\u7a0b\u3002\n\n\u4f46 UserService \u7684\u5b9e\u73b0\u7c7b\u4ece\u54ea\u6765\u5462\uff1f\n\n\u603b\u4e0d\u80fd\u628a\u670d\u52a1\u63d0\u4f9b\u8005\u7684 UserServiceImpl \u590d\u5236\u7c98\u8d34\u5230\u6d88\u8d39\u8005\u6a21\u5757\u5427\uff1f\u8981\u80fd\u90a3\u6837\u505a\u8fd8\u9700\u8981 RPC \u6846\u67b6\u5e72\u4ec0\u4e48\uff1f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u5176\u4ed6\u9879\u76ee\u6216\u56e2\u961f\u63d0\u4f9b\u7684\u63a5\u53e3\u65f6\uff0c\u4e00\u822c\u53ea\u5173\u6ce8\u8bf7\u6c42\u53c2\u6570\u548c\u54cd\u5e94\u7ed3\u679c\uff0c\u800c\u4e0d\u5173\u6ce8\u5177\u4f53\u5b9e\u73b0\u3002\n\n\u5728\u4e4b\u524d\u7684\u67b6\u6784\u4e2d\u8bb2\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\u6765\u7b80\u5316\u6d88\u8d39\u65b9\u7684\u8c03\u7528\u3002\n\n\u4ee3\u7406\u7684\u5b9e\u73b0\u65b9\u5f0f\u5927\u81f4\u5206\u4e3a 2 \u7c7b\uff1a\u9759\u6001\u4ee3\u7406\u548c\u52a8\u6001\u4ee3\u7406\uff0c\u4e0b\u9762\u4f9d\u6b21\u5b9e\u73b0\u3002\n\n\n\n#### \u9759\u6001\u4ee3\u7406\n\n\u9759\u6001\u4ee3\u7406\u662f\u6307\u4e3a\u6bcf\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u63a5\u53e3\u6216\u5bf9\u8c61\uff0c\u7f16\u5199\u4e00\u4e2a\u4ee3\u7406\u7c7b\u3002\n\n\u6bd4\u5982\u5728 `example-consumer` \u6a21\u5757\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u9759\u6001\u4ee3\u7406 UserServiceProxy\uff0c\u5b9e\u73b0 UserService \u63a5\u53e3\u548c getUser \u65b9\u6cd5\u3002\n\n![](https://pic.yupi.icu/1/1708342102050-70d78d1f-0b45-435e-b653-649364c624ee.png)\n\n\u53ea\u4e0d\u8fc7\u5b9e\u73b0 getUser \u65b9\u6cd5\u65f6\uff0c\u4e0d\u662f\u590d\u5236\u7c98\u8d34\u670d\u52a1\u63d0\u4f9b\u8005 UserServiceImpl \u4e2d\u7684\u4ee3\u7801\uff0c\u800c\u662f\u8981\u6784\u9020 HTTP \u8bf7\u6c42\u53bb\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\u3002\n\n\u9700\u8981\u6ce8\u610f\u53d1\u9001\u8bf7\u6c42\u524d\u8981\u5c06\u53c2\u6570\u5e8f\u5217\u5316\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.example.consumer;\n\nimport cn.hutool.http.HttpRequest;\nimport cn.hutool.http.HttpResponse;\nimport com.yupi.example.common.model.User;\nimport com.yupi.example.common.service.UserService;\nimport com.yupi.yurpc.model.RpcRequest;\nimport com.yupi.yurpc.model.RpcResponse;\nimport com.yupi.yurpc.serializer.JdkSerializer;\nimport com.yupi.yurpc.serializer.Serializer;\n\nimport java.io.IOException;\n\n/**\n * \u9759\u6001\u4ee3\u7406\n */\npublic class UserServiceProxy implements UserService {\n\n    public User getUser(User user) {\n        // \u6307\u5b9a\u5e8f\u5217\u5316\u5668\n        Serializer serializer = new JdkSerializer();\n\n        // \u53d1\u8bf7\u6c42\n        RpcRequest rpcRequest = RpcRequest.builder()\n                .serviceName(UserService.class.getName())\n                .methodName(\"getUser\")\n                .parameterTypes(new Class[]{User.class})\n                .args(new Object[]{user})\n                .build();\n        try {\n            byte[] bodyBytes = serializer.serialize(rpcRequest);\n            byte[] result;\n            try (HttpResponse httpResponse = HttpRequest.post(\"http://localhost:8080\")\n                    .body(bodyBytes)\n                    .execute()) {\n                result = httpResponse.bodyBytes();\n            }\n            RpcResponse rpcResponse = serializer.deserialize(result, RpcResponse.class);\n            return (User) rpcResponse.getData();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }\n}\n```\n\n\n\n\u7136\u540e\u4fee\u6539 EasyConsumerExample\uff0cnew \u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u5e76\u8d4b\u503c\u7ed9 userService\uff0c\u5c31\u80fd\u5b8c\u6210\u8c03\u7528\uff1a\n\n```java\n/**\n * \u7b80\u6613\u670d\u52a1\u6d88\u8d39\u8005\u793a\u4f8b\n */\npublic class EasyConsumerExample {\n\n    public static void main(String[] args) {\n        // \u9759\u6001\u4ee3\u7406\n        UserService userService = new UserServiceProxy();\n        \n        ...\n    }\n}\n```\n\n\n\n\u9759\u6001\u4ee3\u7406\u867d\u7136\u5f88\u597d\u7406\u89e3\uff08\u5c31\u662f\u5199\u4e2a\u5b9e\u73b0\u7c7b\u561b\uff09\uff0c\u4f46\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5982\u679c\u8981\u7ed9\u6bcf\u4e2a\u670d\u52a1\u63a5\u53e3\u90fd\u5199\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u8fd9\u79cd\u4ee3\u7406\u65b9\u5f0f\u7684\u7075\u6d3b\u6027\u5f88\u5dee\uff01\n\n\u6240\u4ee5 RPC \u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\u3002\n\n\n\n#### \u52a8\u6001\u4ee3\u7406\n\n\u52a8\u6001\u4ee3\u7406\u7684\u4f5c\u7528\u662f\uff0c\u6839\u636e\u8981\u751f\u6210\u7684\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002\n\n\u5e38\u7528\u7684\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0\u65b9\u5f0f\u6709 JDK \u52a8\u6001\u4ee3\u7406\u548c\u57fa\u4e8e\u5b57\u8282\u7801\u751f\u6210\u7684\u52a8\u6001\u4ee3\u7406\uff08\u6bd4\u5982 CGLIB\uff09\u3002\u524d\u8005\u7b80\u5355\u6613\u7528\u3001\u65e0\u9700\u5f15\u5165\u989d\u5916\u7684\u5e93\uff0c\u4f46\u7f3a\u70b9\u662f\u53ea\u80fd\u5bf9\u63a5\u53e3\u8fdb\u884c\u4ee3\u7406\uff1b\u540e\u8005\u66f4\u7075\u6d3b\u3001\u53ef\u4ee5\u5bf9\u4efb\u4f55\u7c7b\u8fdb\u884c\u4ee3\u7406\uff0c\u4f46\u6027\u80fd\u7565\u4f4e\u4e8e JDK \u52a8\u6001\u4ee3\u7406\u3002\n\n\u6b64\u5904\u6211\u4eec\u4f7f\u7528 JDK \u52a8\u6001\u4ee3\u7406\u3002\n\n\n\n1\uff09\u5728 RPC \u6a21\u5757\u4e2d\u7f16\u5199\u52a8\u6001\u4ee3\u7406\u7c7b ServiceProxy\uff0c\u9700\u8981\u5b9e\u73b0 InvocationHandler \u63a5\u53e3\u7684 invoke \u65b9\u6cd5\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u51e0\u4e4e\u5c31\u662f\u628a\u9759\u6001\u4ee3\u7406\u7684\u4ee3\u7801\u642c\u8fd0\u8fc7\u6765\uff09\uff1a\n\n```java\npackage com.yupi.yurpc.proxy;\n\nimport cn.hutool.http.HttpRequest;\nimport cn.hutool.http.HttpResponse;\nimport com.yupi.yurpc.model.RpcRequest;\nimport com.yupi.yurpc.model.RpcResponse;\nimport com.yupi.yurpc.serializer.JdkSerializer;\nimport com.yupi.yurpc.serializer.Serializer;\n\nimport java.io.IOException;\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\n\n/**\n * \u670d\u52a1\u4ee3\u7406\uff08JDK \u52a8\u6001\u4ee3\u7406\uff09\n */\npublic class ServiceProxy implements InvocationHandler {\n\n    /**\n     * \u8c03\u7528\u4ee3\u7406\n     *\n     * @return\n     * @throws Throwable\n     */\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        // \u6307\u5b9a\u5e8f\u5217\u5316\u5668\n        Serializer serializer = new JdkSerializer();\n\n        // \u6784\u9020\u8bf7\u6c42\n        RpcRequest rpcRequest = RpcRequest.builder()\n                .serviceName(method.getDeclaringClass().getName())\n                .methodName(method.getName())\n                .parameterTypes(method.getParameterTypes())\n                .args(args)\n                .build();\n        try {\n            // \u5e8f\u5217\u5316\n            byte[] bodyBytes = serializer.serialize(rpcRequest);\n            // \u53d1\u9001\u8bf7\u6c42\n            // todo \u6ce8\u610f\uff0c\u8fd9\u91cc\u5730\u5740\u88ab\u786c\u7f16\u7801\u4e86\uff08\u9700\u8981\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\u548c\u670d\u52a1\u53d1\u73b0\u673a\u5236\u89e3\u51b3\uff09\n            try (HttpResponse httpResponse = HttpRequest.post(\"http://localhost:8080\")\n                    .body(bodyBytes)\n                    .execute()) {\n                byte[] result = httpResponse.bodyBytes();\n                // \u53cd\u5e8f\u5217\u5316\n                RpcResponse rpcResponse = serializer.deserialize(result, RpcResponse.class);\n                return rpcResponse.getData();\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }\n}\n```\n\n\n\n\u89e3\u91ca\u4e0b\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5f53\u7528\u6237\u8c03\u7528\u67d0\u4e2a\u63a5\u53e3\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u6539\u4e3a\u8c03\u7528 invoke \u65b9\u6cd5\u3002\u5728 invoke \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5230\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u4fe1\u606f\u3001\u4f20\u5165\u7684\u53c2\u6570\u5217\u8868\u7b49\uff0c\u8fd9\u4e0d\u5c31\u662f\u6211\u4eec\u670d\u52a1\u63d0\u4f9b\u8005\u9700\u8981\u7684\u53c2\u6570\u4e48\uff1f\u7528\u8fd9\u4e9b\u53c2\u6570\u6765\u6784\u9020\u8bf7\u6c42\u5bf9\u8c61\u5c31\u53ef\u4ee5\u5b8c\u6210\u8c03\u7528\u4e86\u3002\n\n\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u8bf7\u6c42\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u5730\u5740\u88ab\u786c\u7f16\u7801\u4e86\uff0c\u9700\u8981\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\u548c\u670d\u52a1\u53d1\u73b0\u673a\u5236\u6765\u89e3\u51b3\u3002\n\n\n\n\u6ca1\u529e\u6cd5\u76f4\u63a5\u770b\u61c2\u4e0a\u8ff0\u4ee3\u7801\u4e5f\u6ca1\u5173\u7cfb\uff0c\u5148\u8ddf\u7740\u6572\u5b8c\uff0c\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7 debug \u6765\u5e2e\u52a9\u7406\u89e3\u3002\n\n\n\n2\uff09\u521b\u5efa\u52a8\u6001\u4ee3\u7406\u5de5\u5382 ServiceProxyFactory\uff0c\u4f5c\u7528\u662f\u6839\u636e\u6307\u5b9a\u7c7b\u521b\u5efa\u52a8\u6001\u4ee3\u7406\u5bf9\u8c61\u3002\n\n\u76ee\u5f55\u7ed3\u6784\u5982\u56fe\uff1a\n\n![](https://pic.yupi.icu/1/1708342973280-1ad2d261-9484-4644-b5fc-cf230d3e4624.png)\n\n\n\n\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 **\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f**\uff0c\u6765\u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npackage com.yupi.yurpc.proxy;\n\nimport java.lang.reflect.Proxy;\n\n/**\n * \u670d\u52a1\u4ee3\u7406\u5de5\u5382\uff08\u7528\u4e8e\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61\uff09\n */\npublic class ServiceProxyFactory {\n\n    /**\n     * \u6839\u636e\u670d\u52a1\u7c7b\u83b7\u53d6\u4ee3\u7406\u5bf9\u8c61\n     *\n     * @param serviceClass\n     * @param <T>\n     * @return\n     */\n    public static <T> T getProxy(Class<T> serviceClass) {\n        return (T) Proxy.newProxyInstance(\n                serviceClass.getClassLoader(),\n                new Class[]{serviceClass},\n                new ServiceProxy());\n    }\n}\n```\n\n\n\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u4e3b\u8981\u662f\u901a\u8fc7 `Proxy.newProxyInstance` \u65b9\u6cd5\u4e3a\u6307\u5b9a\u7c7b\u578b\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61\u3002\n\n\n\n3\uff09\u6700\u540e\uff0c\u5728 EasyConsumerExample \u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u5de5\u5382\u6765\u4e3a UserService \u83b7\u53d6\u52a8\u6001\u4ee3\u7406\u5bf9\u8c61\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\n// \u52a8\u6001\u4ee3\u7406\nUserService userService = ServiceProxyFactory.getProxy(UserService.class);\n```\n\n\n\n\u81f3\u6b64\uff0c\u7b80\u6613\u7248\u7684 RPC \u6846\u67b6\u5df2\u7ecf\u5f00\u53d1\u5b8c\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u8fdb\u884c\u6d4b\u8bd5\u3002\n\n\n\n## \u56db\u3001\u6d4b\u8bd5\u9a8c\u8bc1\n\n1\uff09\u4ee5 debug \u6a21\u5f0f\u542f\u52a8\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u6267\u884c main \u65b9\u6cd5\uff1a\n\n![](https://pic.yupi.icu/1/1708343121450-f00c5a15-9912-413c-90d6-95341cf19f91.png)\n\n\n\n2\uff09\u4ee5 debug \u6a21\u5f0f\u542f\u52a8\u670d\u52a1\u6d88\u8d39\u8005\uff0c\u6267\u884c main \u65b9\u6cd5\u3002\n\n\u5728 ServiceProxy \u4ee3\u7406\u7c7b\u4e2d\u6dfb\u52a0\u65ad\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u8c03\u7528 userService \u65f6\uff0c\u5b9e\u9645\u662f\u8c03\u7528\u4e86\u4ee3\u7406\u5bf9\u8c61\u7684 invoke \u65b9\u6cd5\uff0c\u5e76\u4e14\u83b7\u53d6\u5230\u4e86 serviceName\u3001methodName\u3001\u53c2\u6570\u7c7b\u578b\u548c\u5217\u8868\u7b49\u4fe1\u606f\u3002\n\n\u5982\u4e0b\u56fe\uff1a\n\n![](https://pic.yupi.icu/1/1708343476055-e8c79399-310e-4903-b3d1-6b680c3d4486.png)\n\n\n\n3\uff09\u7ee7\u7eed debug\uff0c\u53ef\u4ee5\u770b\u5230\u5e8f\u5217\u5316\u540e\u7684\u8bf7\u6c42\u5bf9\u8c61\uff0c\u7ed3\u6784\u662f\u5b57\u8282\u6570\u7ec4\uff1a\n\n![](https://pic.yupi.icu/1/1708343555673-61f81ffd-81cb-4e8d-90ad-4143af6727ae.png)\n\n\n\n4\uff09\u5728\u670d\u52a1\u63d0\u4f9b\u8005\u6a21\u5757\u7684\u8bf7\u6c42\u5904\u7406\u5668\u4e2d\u6253\u65ad\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u63a5\u53d7\u5e76\u53cd\u5e8f\u5217\u5316\u540e\u7684\u8bf7\u6c42\uff0c\u8ddf\u53d1\u9001\u65f6\u7684\u5185\u5bb9\u4e00\u81f4\uff1a\n\n![](https://pic.yupi.icu/1/1708343721305-f7b186e3-8bc1-4c66-82c7-e3e2bc0934a4.png)\n\n\n\n5\uff09\u7ee7\u7eed debug\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u8bf7\u6c42\u5904\u7406\u5668\u4e2d\uff0c\u901a\u8fc7\u53cd\u5c04\u6210\u529f\u8c03\u7528\u4e86\u65b9\u6cd5\uff0c\u5e76\u5f97\u5230\u4e86\u8fd4\u56de\u7684 User \u5bf9\u8c61\u3002\n\n![](https://pic.yupi.icu/1/1708343782643-6ec50584-9e4b-43e9-b853-24880a91ea02.png)\n\n\n\n6\uff09\u6700\u540e\uff0c\u5728\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u6a21\u5757\u4e2d\u90fd\u8f93\u51fa\u4e86\u7528\u6237\u540d\u79f0\uff0c\u8bf4\u660e\u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u6210\u529f\u3002\n\n![](https://pic.yupi.icu/1/1708343878031-a557c884-a3bc-4bf6-9cf9-e149bcfb3a04.png)\n\n\n\n------\n\n\n\n\u4ee5\u4e0a\uff0c\u5c31\u662f\u672c\u671f\u6559\u7a0b\u3002\u9ebb\u96c0\u867d\u5c0f\uff0c\u4e94\u810f\u4ff1\u5168\u3002\u5927\u5bb6\u4e00\u5b9a\u8981\u81ea\u5df1\u52a8\u624b\u5b9e\u73b0\uff0c\u5370\u8c61\u624d\u4f1a\u66f4\u6df1\u523b\u3002\n\n\u672c\u9879\u76ee\u7684\u4ee3\u7801\u5b8c\u5168\u5f00\u6e90\uff1a[https://github.com/liyupi/yu-rpc](https://github.com/liyupi/yu-rpc)\n\n\u52a0\u5165\u7f16\u7a0b\u5bfc\u822a\uff0c\u83b7\u53d6\u9c7c\u76ae\u7684\u5b8c\u6574\u9879\u76ee\u6559\u7a0b\uff1ahttps://yupi.icu"}