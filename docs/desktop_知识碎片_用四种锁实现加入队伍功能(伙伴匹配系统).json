{"data": "# \u7528\u56db\u79cd\u9501\u5b9e\u73b0\u52a0\u5165\u961f\u4f0d\u529f\u80fd(\u4f19\u4f34\u5339\u914d\u7cfb\u7edf)\n\n> \u4f5c\u8005\uff1a\u957f\u98ce\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 26376\n\n## \u4e00\u3001\u4e3a\u4ec0\u4e48\u8981\u5bf9\u52a0\u5165\u961f\u4f0d\u529f\u80fd\u4e0a\u9501\uff1f\n\n\u9996\u5148\uff0c\u8981\u77e5\u9053\u6211\u4eec\u5728Controller\u4e2d\u5199\u7684\u4ee3\u7801\u9ed8\u8ba4\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u3002\u5728SpringBoot\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0cController\u5b9e\u4f8b\u9ed8\u8ba4\u90fd\u662f\u5355\u4f8b\u5bf9\u8c61\u3002\u6bcf\u5f53\u6536\u5230\u4e00\u4e2aHttp\u8bf7\u6c42\u65f6\uff0c\u5bb9\u5668\u4f1a\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u8c03\u7528\u76f8\u5e94\u7684Controller\u65b9\u6cd5\u3002\u7531\u4e8eController\u662f\u5355\u4f8b\u7684\uff0c\u591a\u4e2a\u8bf7\u6c42\u5c06\u540c\u65f6\u8bbf\u95ee\u4e00\u4e2aController\u5b9e\u4f8b\u3002\n\n\u540c\u4e00\u4e2a\u7528\u6237\u7684\u591a\u6b21\u70b9\u51fb\u52a0\u5165\u961f\u4f0d\u6309\u94ae\uff0c\u6216\u8005\u4e0d\u540c\u7528\u6237\u540c\u4e00\u65f6\u95f4\u70b9\u51fb\u52a0\u5165\u961f\u4f0d\u6309\u94ae\uff0c\u90fd\u4f1a\u5bfc\u81f4\u591a\u4e2a\u7ebf\u7a0b\u5728\u8bbf\u95eeController\u4e2d\u7684\u4ee3\u7801\uff0c\u7136\u540e\u5c31\u53ef\u80fd\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u95ee\u9898\u3002\n\n\u4f8b\u5982\uff1a\n\n\u4f2a\u4ee3\u7801\uff1a\n\n1.\u4ecemysql\u4e2d\u8bfb\u53d6\u961f\u4f0d\u7684\u4eba\u6570\n\n2.\u5224\u65ad\u4e00\u4e2a\u961f\u4f0d\u662f\u5426\u6ee1\u5458\uff1f\n\n3.\u4e0d\u6ee1\u5458\u5c31\u63d2\u5165\u6570\u636e\uff0c\u6ee1\u5458\u5c31\u8fd4\u56de\u52a0\u5165\u961f\u4f0d\u5931\u8d25\n\n\u5047\u5982\u73b0\u5728\u961f\u4f0d\u4eba\u6570\u662f4/5\uff0c\u5f53\u524d\u6709\u4e24\u4e2a\u7528\u6237\u540c\u65f6\u70b9\u51fb\u52a0\u5165\u961f\u4f0d\u6309\u94ae\u3002\u4e24\u4e2a\u7528\u6237\u7684\u8bf7\u6c42\u540c\u65f6\u5230\u4ee3\u78012\u53d1\u73b0\u6ca1\u6709\u6ee1\u5458\uff0c\u7136\u540e\u540c\u65f6\u6267\u884c\u4ee3\u78013\u5c06\u7528\u6237\u6570\u636e\u63d2\u5165\u961f\u4f0d\u4e2d\u3002\u5c31\u4f1a\u51fa\u73b0\u961f\u4f0d\u4eba\u6570\u662f6/5\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u5c31\u9700\u8981\u4e0a\u9501\u3002\n\n## \u4e8c\u3001\u4e0a\u9501\u5b9e\u73b0\u65b9\u5f0f1\uff1a\u5355\u673a\u9501-\u8ba9\u6240\u6709\u7528\u6237\u7684\u6240\u6709\u8bf7\u6c42\u5171\u7528\u4e00\u4e2a\u9501\n\n### 2.1\u5b9e\u73b0\u65b9\u5f0f\uff1a\n\n\u4f7f\u7528synchronized (this)\u6dfb\u52a0\u540c\u6b65\u9501\uff0c\u8fd9\u91cc\u7684this\u5c31\u662f\u901a\u8fc7@Service\u521b\u5efa\u7684TeamServiceImpl\u5bf9\u8c61\uff0c\u662f\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\u3002\u4fdd\u8bc1\u4e86\u6240\u6709\u7528\u6237\u7684\u8bf7\u6c42\u90fd\u662f\u540c\u4e00\u628a\u9501\u3002\n\n### 2.2\u5e94\u7528\u573a\u666f\uff1a\n\n\u6bd4\u5982\u529f\u80fd\u8981\u6c42\u662f\u5224\u65ad\u4e00\u4e2a\u961f\u4f0d\u662f\u5426\u6ee1\u5458\uff0c\u6ee1\u5458\u4e0d\u5141\u8bb8\u52a0\u5165\u961f\u4f0d\uff0c\u8fd9\u79cd\u529f\u80fd\u573a\u666f\u9700\u8981\u6240\u6709\u7528\u6237\u540c\u4e00\u628a\u9501\u3002\u5c31\u53ef\u4ee5\u4f7f\u7528\u3002\n\n### 2.3\u5b9e\u73b0\u4ee3\u7801\uff1a\n\n(\u53ea\u663e\u793a\u90e8\u5206\u4ee3\u7801\uff0c\u9644\u5f55\u6709\u5b8c\u6574\u4ee3\u7801)\uff1a  \n\n```java\n\nsynchronized (this) {\n    // \u5224\u65ad\u961f\u4f0d\u662f\u5426\u5df2\u6ee1\n    // \u4eceMySQL\u4e2d\u8bfb\u53d6\u961f\u4f0d\u4e2d\u4eba\u6570\n    long teamUserNums = this.countTeamUserByTeamId(teamId);\n    \n    // \u5224\u65ad\u662f\u5426\u6ee1\u5458\n    if (teamUserNums >= team.getMaxNum()) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u961f\u4f0d\u5df2\u6ee1\");\n    }\n    \n    UserTeam userTeam = new UserTeam();\n    userTeam.setTeamId(teamId);\n    userTeam.setUserId(userId);\n    userTeam.setJoinTime(new Date());\n    \n    // \u63d2\u5165\u6570\u636e\n    return userTeamService.save(userTeam);\n}\n\n```\n\n\n\n### 2.4\u6d4b\u8bd5\u65b9\u5f0f\uff1a\n\n\u5199\u5b8c\u4ee3\u7801\u4e86\uff0c\u600e\u4e48\u6d4b\u8bd5\u4e00\u4e0b\u662f\u5426\u6709\u6548\u679c\u5462\uff0c\u53ef\u4ee5\u5728\u63d2\u5165\u6570\u636e\u4e4b\u524d\u52a0\u5165\u4e00\u4e2a\u7ebf\u7a0b\u7761\u7720Thread.sleep(5000)\uff0c\u4fdd\u8bc1\u4e24\u6b21\u8bf7\u6c42\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u63d2\u5165\u6570\u636e\u4ee3\u7801\u3002\u7136\u540e\u5728\u672c\u5730\u53ef\u4ee5\u7528\u4e24\u4e2a\u6d4f\u89c8\u5668\u6a21\u62df\u4e24\u4e2a\u7528\u6237\u540c\u65f6\u70b9\u51fb\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u70b9\u51fb\u52a0\u5165\u961f\u4f0d\u6309\u94ae\u3002\u4e0e\u539f\u59cb\u4ee3\u7801\u5bf9\u6bd4\u3002\u53d1\u73b0\u539f\u59cb\u4ee3\u7801\u4e2d\u4f1a\u51fa\u73b0\u8d85\u5458\u7684\u60c5\u51b5\uff0c\u800c\u73b0\u5728\u7684\u4ee3\u7801\u4e0d\u4f1a\u51fa\u73b0\u8d85\u5458\u7684\u60c5\u51b5\u3002\n\nps\uff1a\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u4e24\u4e2a\u6d4f\u89c8\u5668\u6a21\u62df\u4e24\u4e2a\u7528\u6237\uff1f\u7528\u4e00\u4e2a\u6d4f\u89c8\u5668\u65b0\u5efa\u4e24\u4e2a\u7a97\u53e3\u4e0d\u884c\u5417\uff1f\n\n\u4f19\u4f34\u5339\u914d\u7cfb\u7edf\u662f\u57fa\u4e8esession\u4fdd\u5b58\u7528\u6237\u4fe1\u606f\u7684\uff0c\u76ee\u524d\u6211\u505a\u5b9e\u9a8c\u5f97\u77e5\uff0c\u4e00\u4e2a\u6d4f\u89c8\u5668\u5bf9\u5e94\u4e00\u4e2asessionId\uff0c\u5373\u5bf9\u5e94\u4e00\u4e2a\u7528\u6237\u3002\u5728\u4e00\u4e2a\u6d4f\u89c8\u5668\u4e2d\u5efa\u7acb\u591a\u4e2a\u7a97\u53e3\u90fd\u90fd\u5bf9\u5e94\u7684\u662f\u540c\u4e00\u4e2asessionId\u3002\n\n## \u4e09\u3001\u4e0a\u9501\u5b9e\u73b0\u65b9\u5f0f2\uff1a\u5355\u673a\u9501-\u540c\u4e00\u4e2a\u7528\u6237\u7684\u6240\u6709\u8bf7\u6c42\u5171\u7528\u4e00\u4e2a\u9501\n\n### 3.1\u5b9e\u73b0\u65b9\u5f0f\uff1a\n\n\u8fd9\u91cc\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u7528\u6237\u7684\u8bf7\u6c42\u662f\u5171\u7528\u4e00\u628a\u9501\uff0c\u5c31\u4e0d\u80fd\u518d\u7528synchronized(this)\u4e86\u3002\u5e94\u8be5\n\n\u7528\u4e00\u4e2a\u6bcf\u4e00\u4e2a\u7528\u6237\u72ec\u6709\u7684\u4e00\u4e2a\u4fe1\u606f\u53bb\u505a\u4e00\u628a\u9501\u3002\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662fsynchronized (userId.toString().intern())\n\n\u7591\u95ee1\uff1a\u4e3a\u4ec0\u4e48\u4f7f\u7528\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e2a\u7528\u6237\u4e00\u628a\u9501\u95ee\u9898\n\n\u9996\u5148\u4f7f\u7528userId\u4ee5\u533a\u5206\u6bcf\u4e2a\u7528\u6237\uff0c\u7136\u540e\u4f7f\u7528intern\u53ef\u4ee5\u53d6\u51fa\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u5730\u5740\uff0c\u6bd4\u5982userId\u662f1\uff0c\u6bcf\u6b21\u7684\u90fd\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u201c1\u201d\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\u7684\u5730\u5740\u3002\u4f17\u6240\u5468\u77e5\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u7684\u5143\u7d20\u662f\u552f\u4e00\u7684\uff0c\u4fdd\u8bc1\u4e86\u540c\u4e00Id\u7528\u6237\u7684\u6bcf\u6b21\u8bf7\u6c42\u7684\u9501\u5bf9\u8c61\u90fd\u662f\u76f8\u540c\u7684\u3002\n\n\u7591\u95ee2\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528synchronized (userId)\n\n\u56e0\u4e3a\u6bcf\u6b21\u83b7\u53d6\u7684userId\u5bf9\u8c61\u5730\u5740\u90fd\u4e0d\u540c\u3002\u8fd9\u91cc\u6bcf\u6b21\u90fd\u4f1anew\u4e00\u4e2a\u65b0\u7684Long\u5bf9\u8c61\u3002\n\n\u7591\u95ee3\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528synchronized (userId.toString())\n\nto.String()\u65b9\u6cd5\u4f1anew\u4e00\u4e2aString\u800c\u4e0d\u662f\u76f4\u63a5\u4ece\u5e38\u91cf\u6c60\u4e2d\u53d6\u51fa\u5f15\u7528\u5730\u5740\uff0c\u867d\u7136\u6bcf\u6b21userId\u90fd\u76f8\u540c\uff0c\u4f46\u662ftoString\u65b9\u6cd5\u83b7\u53d6\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u5f15\u7528\u90fd\u4e0d\u540c\u3002\n\n### 3.2\u5e94\u7528\u573a\u666f\uff1a\n\n\u6bd4\u5982\u529f\u80fd\u8981\u6c42\u662f\u5224\u65ad\u4e00\u4e2a\u7528\u6237\u6700\u591a\u52a0\u5165\u4e86\u51e0\u4e2a\u961f\u4f0d\u6216\u8005\u5224\u65ad\u4e00\u4e2a\u7528\u6237\u662f\u5426\u6709\u91cd\u590d\u52a0\u5165\u8be5\u961f\u4f0d\uff0c\u8fd9\u79cd\u529f\u80fd\u573a\u666f\u5f53\u524d\u7528\u6237\u7684\u4fe1\u606f\u4e0d\u4f1a\u4e0e\u5176\u4ed6\u7528\u6237\u7684\u4fe1\u606f\u76f8\u4e92\u5f71\u54cd\u3002\u6240\u4ee5\u5c31\u53ef\u4ee5\u4e00\u4e2a\u7528\u6237\u4e00\u628a\u9501\u3002\n\n### 3.3\u5b9e\u73b0\u4ee3\u7801\uff1a\n\n```java\n\nLong userId = loginUser.getId();\n\nsynchronized (userId.toString().intern()) {\n    // \u5224\u65ad\u52a0\u5165\u961f\u4f0d\u6570\u91cf\u662f\u5426\u5df2\u8d85\u51fa5\u4e2a\n    LambdaQueryWrapper<UserTeam> wrapper = new LambdaQueryWrapper<>();\n    wrapper.eq(UserTeam::getUserId, userId);\n    \n    long hasJoinNum = userTeamService.count(wrapper);\n    \n    if (hasJoinNum > 5) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u6700\u591a\u521b\u5efa\u548c\u52a0\u51655\u4e2a\u961f\u4f0d\");\n    }\n    \n    // \u63d2\u5165\u6570\u636e\n    return userTeamService.save(userTeam);\n}\n\n```\n\n\n\n## \u56db\u3001\u4e0a\u9501\u5b9e\u73b0\u65b9\u5f0f3\uff1a\u5206\u5e03\u5f0f\u9501-\u591a\u673a\u90e8\u7f72\u73af\u5883\u4e0b\u6240\u6709\u7528\u6237\u7684\u6240\u6709\u8bf7\u6c42\u5171\u7528\u4e00\u4e2a\u9501\n\n### 4.1\u5b9e\u73b0\u65b9\u5f0f\uff1a\n\n\u4f7f\u7528Redis\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\u53ef\u4ee5\u4f7f\u7528Redisson\u7ec4\u4ef6\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\n\n### 4.2\u5e94\u7528\u573a\u666f\uff1a\n\n1.\u4e0e\u52a0\u9501\u65b9\u5f0f\u4e00\u76f8\u6bd4\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u5206\u5e03\u5f0f\u573a\u666f\u4e0b\u4f7f\u7528\u3002\n\n2.\u6240\u6709\u7528\u6237\u7684\u8bf7\u6c42\u5171\u7528\u4e00\u628a\u9501\n\n### 4.3\u5b9e\u73b0\u4ee3\u7801\uff1a\n\n```java\n\nRLock lock = redissonClient.getLock(\"yupao:team:joinTeam\");\n\ntry {\n    while (true) {\n        if (lock.tryLock(0, -1, TimeUnit.MILLISECONDS)) {\n            System.out.println(\"getLock: \" + Thread.currentThread().getId());\n            \n            // \u5224\u65ad\u961f\u4f0d\u662f\u5426\u5df2\u6ee1\n            long teamUserNums = this.countTeamUserByTeamId(teamId);\n            if (teamUserNums >= team.getMaxNum()) {\n                throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u961f\u4f0d\u5df2\u6ee1\");\n            }\n            \n            UserTeam userTeam = new UserTeam();\n            userTeam.setTeamId(teamId);\n            userTeam.setUserId(userId);\n            userTeam.setJoinTime(new Date());\n            return userTeamService.save(userTeam);\n        }\n    }\n} catch (InterruptedException e) {\n    log.error(\"The lock 'yupao:team:joinTeam' had a error \", e);\n    return false;\n} finally {\n    // \u91ca\u653e\u9501\uff0c\u53ea\u80fd\u91ca\u653e\u81ea\u5df1\u7684\u9501\n    if (lock.isHeldByCurrentThread()) {\n        System.out.println(\"unLock\" + Thread.currentThread().getId());\n        lock.unlock();\n    }\n}\n```\n\n\n\n## \u4e94\u3001\u4e0a\u9501\u5b9e\u73b0\u65b9\u5f0f4\uff1a\u5206\u5e03\u5f0f\u9501-\u591a\u673a\u90e8\u7f72\u73af\u5883\u4e0b\u540c\u4e00\u4e2a\u7528\u6237\u7684\u6240\u6709\u8bf7\u6c42\u5171\u7528\u4e00\u4e2a\u9501\n\n### 5.1\u5b9e\u73b0\u65b9\u5f0f\uff1a\n\n1.\u4f7f\u7528Redis\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\u53ef\u4ee5\u4f7f\u7528Redisson\u7ec4\u4ef6\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u3002\n\n2.\u5728redis\u4e2d\u5b58\u50a8\u7684\u9501\u7684key\u52a0\u4e0auserId\u3002\n\n### 5.2\u5e94\u7528\u573a\u666f\uff1a\n\n1.\u4e0e\u52a0\u9501\u65b9\u5f0f\u4e8c\u76f8\u6bd4\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u5206\u5e03\u5f0f\u573a\u666f\u4e0b\u4f7f\u7528\u3002\n\n2.\u4e00\u4e2a\u7528\u6237\u4e00\u628a\u9501\n\n### 5.3\u5b9e\u73b0\u4ee3\u7801\uff1a\n\n```java\n\nLong userId = loginUser.getId();\nRLock lock = redissonClient.getLock(\"yupao:team:joinTeam:userId\");\n\ntry {\n    while (true) {\n        if (lock.tryLock(0, -1, TimeUnit.MILLISECONDS)) {\n            System.out.println(\"getLock: \" + Thread.currentThread().getId());\n            \n            // \u5224\u65ad\u52a0\u5165\u961f\u4f0d\u6570\u91cf\u662f\u5426\u5df2\u8d85\u51fa5\u4e2a\n            LambdaQueryWrapper<UserTeam> wrapper = new LambdaQueryWrapper<>();\n            wrapper.eq(UserTeam::getUserId, userId);\n            \n            long hasJoinNum = userTeamService.count(wrapper);\n            \n            if (hasJoinNum > 5) {\n                throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u6700\u591a\u521b\u5efa\u548c\u52a0\u51655\u4e2a\u961f\u4f0d\");\n            }\n            \n            // \u63d2\u5165\u6570\u636e\n            return userTeamService.save(userTeam);\n        }\n    }\n} catch (InterruptedException e) {\n    log.error(\"The lock 'yupao:team:joinTeam' had a error \",e);\n    return false;\n} finally {\n    // \u91ca\u653e\u9501\uff0c\u53ea\u80fd\u91ca\u653e\u81ea\u5df1\u7684\u9501\n    if (lock.isHeldByCurrentThread()) {\n        System.out.println(\"unLock\"+Thread.currentThread().getId());\n        lock.unlock();\n    }\n}\n\n```\n\n\n\n# \u516d\u3001\u5f85\u5b8c\u5584\n\n1.\u65b9\u5f0f1\u548c\u65b9\u5f0f2\u7684\u5355\u673a\u9501\u867d\u7136\u89e3\u51b3\u4e86\u7ebf\u7a0b\u4e0d\u5b89\u5168\u95ee\u9898\uff0c\u4f46\u662f\u4e5f\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u95ee\u9898\u5c31\u662f\u5982\u679c\u7b2c\u4e00\u4e2a\u62ff\u5230\u9501\u7684\u4efb\u52a1\u51fa\u73b0\u4e86\u963b\u585e\u60c5\u51b5\uff0c\u4f1a\u5bfc\u81f4\u6574\u4e2a\u529f\u80fd\u5361\u4e3b\u4e4b\u540e\u7684\u8bf7\u6c42\u90fd\u6ca1\u6709\u76f8\u5e94\u3002\u5bf9\u9501\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u4f7f\u7528\u65f6\u95f4\uff0c\u4e00\u5b9a\u65f6\u95f4\u4e4b\u540e\u81ea\u52a8\u91ca\u653e\u9501\uff0c\u9632\u6b62\u51fa\u73b0\u62ff\u5230\u9501\u7684\u7ebf\u7a0b\u51fa\u73b0\u963b\u585e\u7684\u60c5\u51b5\u3002\n\n# \u4e03\u3001\u9644\u5f55\uff1a\u5b8c\u6574\u4ee3\u7801\n\n## 7.1\u5355\u673a\u9501-\u8ba9\u6240\u6709\u7528\u6237\u7684\u6240\u6709\u8bf7\u6c42\u5171\u7528\u4e00\u4e2a\u9501\n\n```java\n\npublic boolean joinTeam(TeamJoinRequest teamJoinRequest, User loginUser) {\n    if (teamJoinRequest == null) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR);\n    }\n\n    if (loginUser == null) {\n        throw new BusinessException(ErrorCode.NOT_LOGIN);\n    }\n\n    Long teamId = teamJoinRequest.getTeamId();\n    Team team = this.getById(teamId);\n    long userId = loginUser.getId();\n\n    // \u5224\u65ad\u52a0\u5165\u7684\u961f\u4f0d\u662f\u5426\u8fc7\u671f\n    Date expireTime = team.getExpireTime();\n    if (expireTime != null && expireTime.before(new Date())) {\n        throw new BusinessException(ErrorCode.SYSTEM_ERROR, \"\u961f\u4f0d\u5df2\u8fc7\u671f\");\n    }\n\n    // \u5224\u65ad\u662f\u5426\u662f\u79c1\u6709\u961f\u4f0d\n    Integer status = team.getStatus();\n    TeamStatusEnum teamStatusEnum = TeamStatusEnum.getEnumByValue(status);\n    if (TeamStatusEnum.PRIVATE.equals(teamStatusEnum)) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u7981\u6b62\u52a0\u5165\u79c1\u6709\u961f\u4f0d\");\n    }\n\n    String password = teamJoinRequest.getPassword();\n    if (TeamStatusEnum.SECRET.equals(teamStatusEnum)) {\n        if (StringUtils.isBlank(password) || !password.equals(team.getPassword())) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u5bc6\u7801\u9519\u8bef\");\n        }\n    }\n\n    synchronized (this) {\n        // \u6bcf\u4e2a\u4eba\u6700\u591a\u53c2\u52a05\u4e2a\u961f\u4f0d\n        LambdaQueryWrapper<UserTeam> wrapper = new LambdaQueryWrapper<>();\n        wrapper.eq(UserTeam::getUserId, userId);\n        long hasJoinNum = userTeamService.count(wrapper);\n        if (hasJoinNum > 5) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u6700\u591a\u521b\u5efa\u548c\u52a0\u51655\u4e2a\u961f\u4f0d\");\n        }\n\n        // \u4e0d\u80fd\u91cd\u590d\u5165\u961f\n        wrapper = new LambdaQueryWrapper<>();\n        wrapper.eq(UserTeam::getUserId, userId).eq(UserTeam::getTeamId, teamId);\n        long hasUserJoinTeam = userTeamService.count(wrapper);\n        if (hasUserJoinTeam > 0) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u7528\u6237\u5df2\u52a0\u5165\u8be5\u961f\u4f0d\");\n        }\n\n        // \u961f\u4f0d\u662f\u5426\u5df2\u6ee1\n        long teamUserNums = this.countTeamUserByTeamId(teamId);\n        if (teamUserNums >= team.getMaxNum()) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u961f\u4f0d\u5df2\u6ee1\");\n        }\n\n        UserTeam userTeam = new UserTeam();\n        userTeam.setTeamId(teamId);\n        userTeam.setUserId(userId);\n        userTeam.setJoinTime(new Date());\n\n        return userTeamService.save(userTeam);\n    }\n}\n\n```\n\n\n\n## 7.2\u5206\u5e03\u5f0f\u9501-\u591a\u673a\u90e8\u7f72\u73af\u5883\u4e0b\u6240\u6709\u7528\u6237\u7684\u6240\u6709\u8bf7\u6c42\u5171\u7528\u4e00\u4e2a\u9501\n\n```java\n\npublic boolean joinTeam(TeamJoinRequest teamJoinRequest, User loginUser) {\n    if (teamJoinRequest == null) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR);\n    }\n\n    if (loginUser == null) {\n        throw new BusinessException(ErrorCode.NOT_LOGIN);\n    }\n\n    Long teamId = teamJoinRequest.getTeamId();\n    Team team = this.getById(teamId);\n\n    // \u5224\u65ad\u52a0\u5165\u7684\u961f\u4f0d\u662f\u5426\u8fc7\u671f\n    Date expireTime = team.getExpireTime();\n    if (expireTime != null && expireTime.before(new Date())) {\n        throw new BusinessException(ErrorCode.SYSTEM_ERROR, \"\u961f\u4f0d\u5df2\u8fc7\u671f\");\n    }\n\n    // \u5224\u65ad\u662f\u5426\u662f\u79c1\u6709\u961f\u4f0d\n    Integer status = team.getStatus();\n    TeamStatusEnum teamStatusEnum = TeamStatusEnum.getEnumByValue(status);\n    if (TeamStatusEnum.PRIVATE.equals(teamStatusEnum)) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u7981\u6b62\u52a0\u5165\u79c1\u6709\u961f\u4f0d\");\n    }\n\n    String password = teamJoinRequest.getPassword();\n    if (TeamStatusEnum.SECRET.equals(teamStatusEnum)) {\n        if (StringUtils.isBlank(password) || !password.equals(team.getPassword())) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u5bc6\u7801\u9519\u8bef\");\n        }\n    }\n\n    long userId = loginUser.getId();\n    RLock lock = redissonClient.getLock(\"yupao:team:joinTeam\");\n\n    try {\n        while (true) {\n            if (lock.tryLock(0, -1, TimeUnit.MILLISECONDS)) {\n                System.out.println(\"getLock: \" + Thread.currentThread().getId());\n\n                // \u6bcf\u4e2a\u4eba\u6700\u591a\u53c2\u52a05\u4e2a\u961f\u4f0d\n                LambdaQueryWrapper<UserTeam> wrapper = new LambdaQueryWrapper<>();\n                wrapper.eq(UserTeam::getUserId, userId);\n                long hasJoinNum = userTeamService.count(wrapper);\n                if (hasJoinNum > 5) {\n                    throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u6700\u591a\u521b\u5efa\u548c\u52a0\u51655\u4e2a\u961f\u4f0d\");\n                }\n\n                // \u4e0d\u80fd\u91cd\u590d\u5165\u961f\n                wrapper = new LambdaQueryWrapper<>();\n                wrapper.eq(UserTeam::getUserId, userId).eq(UserTeam::getTeamId, teamId);\n                long hasUserJoinTeam = userTeamService.count(wrapper);\n                if (hasUserJoinTeam > 0) {\n                    throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u7528\u6237\u5df2\u52a0\u5165\u8be5\u961f\u4f0d\");\n                }\n\n                // \u961f\u4f0d\u662f\u5426\u5df2\u6ee1\n                long teamUserNums = this.countTeamUserByTeamId(teamId);\n                if (teamUserNums >= team.getMaxNum()) {\n                    throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u961f\u4f0d\u5df2\u6ee1\");\n                }\n\n                UserTeam userTeam = new UserTeam();\n                userTeam.setTeamId(teamId);\n                userTeam.setUserId(userId);\n                userTeam.setJoinTime(new Date());\n\n                return userTeamService.save(userTeam);\n            }\n        }\n    } catch (InterruptedException e) {\n        log.error(\"The lock 'yupao:team:joinTeam' had a error \", e);\n        return false;\n    } finally {\n        // \u91ca\u653e\u9501\uff0c\u53ea\u80fd\u91ca\u653e\u81ea\u5df1\u7684\u9501\n        if (lock.isHeldByCurrentThread()) {\n            System.out.println(\"unLock\" + Thread.currentThread().getId());\n            lock.unlock();\n        }\n    }\n}\n\n```\n\n"}