{"data": "# SpringBoot \u9879\u76ee\u4e2d\u5feb\u901f\u5f15\u5165 Rabbit MQ \u901a\u7528\u505a\u6cd5\n\n> \u4f5c\u8005\uff1a[\u5c0f\u4f55\u540c\u5b66](https://wx.zsxq.com/dweb2/index/footprint/185541482828452)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 18055\n\n## \u2b50\u7531\u6765\n\n\u672c\u7bc7\u662f\u5728\u505a**BI\u9879\u76ee**\u65f6\u5c1d\u8bd5**\u5f15\u5165MQ**\u6765\u4f18\u5316\u9879\u76ee\u65f6\u53d1\u73b0\uff0c**MQ\u5f15\u5165\u5230\u9879\u76ee\u4e2d\u505a\u6cd5\u6bd4\u8f83\u7c7b\u4f3c**\u3002\u53d8\u7684\u53ea\u662f\u8c01\u53d1\u6d88\u606f\u7ed9\u8c01\uff0c\u8c01\u53bb\u76d1\u542c\u6d88\u606f\u3002\u81f3\u4e8eMQ\u7684\u53ef\u9760\u6027\uff08\u6bd4\u5982\u751f\u4ea7\u8005\u53ef\u9760\u6027\u3001\u6d88\u8d39\u8005\u53ef\u9760\u6027\u3001\u6d88\u606f\u53ef\u9760\u6027\uff09\u90fd\u662f\u901a\u8fc7\u56fa\u5b9a\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u3002\n\n\u56e0\u6b64\u5c06\u5f15\u5165MQ\u5230BI\u9879\u76ee\u7684\u8fc7\u7a0b\u62bd\u8c61\u51fa\u6765\uff0c\u53d8\u6210\u901a\u7528\u7684\u65b9\u6cd5\uff5e\n\n\n\n## \ud83d\udd36\u5f15\u5165MQ\u76ee\u7684\n\n\u780d\u6389\u8017\u65f6\u4e45\u7684\u4e1a\u52a1\uff0c\u7f29\u77ed\u5355\u4e2a\u4e1a\u52a1\u65f6\u95f4\uff0c\u76d1\u542c\u8005\u5f02\u6b65\u6267\u884c\u8017\u65f6\u4e45\u4efb\u52a1\n\n\u505a\u5b8c\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5b8c\u6210springboot\u9879\u76ee\u4e2dMQ\u57fa\u672c\u914d\u7f6e\uff0c\u5e76\u4e14MQ\u5177\u6709\u4e00\u5b9a\u53ef\u9760\u6027~\ud83d\ude00\n\n\n\n## \u2b55\u6b65\u9aa4\n\n1. \u5728Application\u4e2d\u914d\u7f6eMQ\n\n1. 1. \u751f\u4ea7\u8005\u786e\u8ba4\u673a\u5236\uff0c\u91cd\u8fde\u673a\u5236\u3001\u6d88\u8d39\u8005\u80fd\u8005\u591a\u52b3\u3001\u786e\u8ba4\u673a\u5236\u3001\u5931\u8d25\u6d88\u606f\u5904\u7406\u7b56\u7565\n   2. \u4fdd\u8bc1\u53ef\u9760\u6027\uff08\u914d\u5907\u4e86\u751f\u4ea7\u8005\u786e\u8ba4\uff0c\u91cd\u8fde\u3001\u6d88\u8d39\u8005\u80fd\u8005\u591a\u52b3\uff0c\u786e\u8ba4\u673a\u5236\uff0c\u5931\u8d25\u6d88\u606f\u5904\u7406\u7b56\u7565\uff09 \n\n***\u6ce8\u610f\uff1a\u4e0d\u6e05\u695a\u7684\u5efa\u8bae\u5b66\u4e60\u540e\u914d\u7f6e\uff0c\u4e0d\u8981\u76f4\u63a5\u590d\u5236\uff0c\u6309\u9700\u8bbe\u7f6e~\\***\n\n```xml\nspring:\n\trabbitmq:\n\t  # \u8fde\u63a5\u4fe1\u606f\n\t  host: xxx # \u4f60\u7684IP\u5730\u5740\n\t  port: 5672\n  \t# \u7528\u6237\u76f8\u5173\u4fe1\u606f\u5efa\u8bae\u5728rabbitMQ\u4e2d\u8bbe\u7f6e\u597d\n\t  virtual-host: /bi # \u53ef\u5728UI\u754c\u9762\u521b\u5efa\u72ec\u5c5e\u9879\u76ee\u7684\u865a\u62df\u673a\u4e0e\u7528\u6237\u540d\n\t  username: xxx # \u7528\u6237\u540d\n\t  password: xxx # \u5bc6\u7801\n\t  connection-timeout: 200ms # max waited time\n\t\n\t  # \u751f\u4ea7\u8005\uff08\u6d88\u606f\u53d1\u9001\u8005\uff09\n\t  # \u751f\u4ea7\u8005\u786e\u8ba4\u673a\u5236 - \u9ed8\u8ba4\u53d6\u6d88\uff0c\u6d88\u8017\u6027\u80fd\n\t  publisher-confirm-type: none\n\t  publisher-returns: false\n\t  template:\n\t    # \u751f\u4ea7\u8005\u91cd\u8fde\u673a\u5236\n\t    retry:\n\t      enabled: true\n\t      initial-interval: 1000ms\n\t      multiplier: 1\n\t      max-attempts: 3\n\t\n\t  # \u6d88\u8d39\u8005\uff08\u76d1\u542c\u8005\uff09\n\t  listener:\n\t    simple:\n\t      prefetch: 1 # \uff08\u80fd\u8005\u591a\u52b3\uff09\u6bcf\u6b21\u53ea\u80fd\u83b7\u53d6\u4e00\u6761\u4fe1\u606f\uff0c\u5904\u7406\u5b8c\u624d\u80fd\u83b7\u53d6\u4e0b\u4e00\u6761\n\t      acknowledge-mode: auto # \u6d88\u8d39\u8005\u786e\u8ba4 - \u81ea\u52a8\u6a21\u5f0f\n\t      retry:\n\t        enabled: true # \u5931\u8d25\u6d88\u606f\u5904\u7406\u7b56\u7565\n/**\n * \u5931\u8d25\u8005\u6d88\u606f\u5904\u7406\u7b56\u7565\u5b9e\u73b0\n */\n@Bean\npublic MessageRecoverer messageRecoverer(RabbitTemplate rabbitTemplate){\n    return new RepublishMessageRecoverer(rabbitTemplate, BI_ERROR_EXCHANGE, BI_ERROR_ROUTING_KEY);\n}\n```\n\n1. \u7edf\u4e00\u786e\u5b9a\u5e76\u5b9a\u4e49\u4e1a\u52a1\u7684\u6709\u5173MQ\u5e38\u91cf `MQConstant.java`\n\n1. 1. \u4ea4\u6362\u673a\u3001\u961f\u5217\u3001Key\n   2. error\u4ea4\u6362\u673a\uff0c\u961f\u5217\uff0cKey\uff08*\u6309\u9700\u8bbe\u7f6e*\uff09\n\n1. \u5f00\u59cb\u521d\u59cb\u5316\n\n1. 1. \u4e1a\u52a1MQ \u4e0e error\u4ea4\u6362\u673aMQ\uff0c\u5e76\u7ed1\u5b9a\u5173\u7cfb\uff08\u9009\u4e00\u4e2a\u5c31\u884c\uff0c\u63a8\u8350\u7b2c\u4e8c\u79cd\uff09\n\n```java\n@Configuration\npublic class ErrorConfiguration {\n\n    @Bean\n    public Queue errorQueue() {\n        return QueueBuilder.durable(BI_ERROR_QUEUE).build();\n    }\n\n    @Bean\n    public DirectExchange errorExchange() {\n        return ExchangeBuilder.directExchange(BI_ERROR_EXCHANGE).build();\n    }\n\n    @Bean\n    public Binding errorBinding() {\n        return BindingBuilder.bind(errorQueue()).to(errorExchange()).with(BI_ERROR_ROUTING_KEY);\n    }\n\n}\n@RabbitListener(bindings = @QueueBinding(\n        // \u961f\u5217\uff1a\n        // name - \u961f\u5217\u540d\u5b57\n        // durable - \u961f\u5217\u6301\u4e45\u5316\uff0c\u4e0d\u4f1a\u968f\u7740MQ\u5173\u95ed\u800c\u6d88\u5931\n        // arguments\uff1a\u4f7f\u961f\u5217\u4e3aLazy queue\u5c06\u6d88\u606f\u5c3d\u5feb\u5199\u5165\u78c1\u76d8\n        value = @Queue(\n                name = BI_QUEUE_NAME,\n                durable = \"true\",\n                arguments = @Argument(name = \"x-queue-mode\", value = \"lazy\")),\n        // \u4ea4\u6362\u673a:\u6307\u5b9a\u4ea4\u6362\u673a\u7684\u540d\u5b57\u4e0e\u7c7b\u578b(\u9ed8\u8ba4direct)\n        exchange = @Exchange(name = BI_EXCHANGE_NAME, type = ExchangeTypes.DIRECT),\n        // \u6309\u4ea4\u6362\u673a\u7c7b\u578b(Direct\u3001Topic),\u8bbe\u7f6eKey\n        key = BI_ROUTING_KEY\n))\npublic void receiveMessage(String msg) {\n```\n\n1. 1. JSON\u6d88\u606f\u8f6c\u6362\u5668\uff08\u66ff\u6362\u6389\u539f\u751f\u7684JDK\uff09\n\n```java\n/**\n * \u6d88\u606f\u8f6c\u6362\u5668\n * @return\n */\n@Bean\npublic MessageConverter messageConverter(){\n    return new Jackson2JsonMessageConverter();\n}\n```\n\n1. \u7f16\u5199\u4e1a\u52a1\u4ee3\u7801\uff08\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\uff09\n\n1. 1. \u53d1\u9001\u4fe1\u606f\uff1a\u780d\u6389\u8017\u65f6\u4e45\u7684\u4e1a\u52a1\uff0c\u53d8\u6210\u53d1\u9001\u6d88\u606f\n\n1. 1. 1. \u9009\u7528\u552f\u4e00\u6027\u7684\u4fe1\u606f\uff0c\u5982id\n      2. \u786e\u5b9a\u597d\u6d88\u606f\u7684\u6570\u636e\u7c7b\u578b\n\n1. 1. \u76d1\u542c\u4fe1\u606f\uff1a\u6dfb\u52a0\u76d1\u542c\u8005\uff0c\u6267\u884c\u8017\u65f6\u4e45\u7684\u4e1a\u52a1\u3002\n\n1. 1. 1. \u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\u4ee3\u7801\n      2. \u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u5b9e\u9645\u60c5\u51b5\u4f7f\uff1a**\u4e1a\u52a1\u5e42\u7b49\u6027**\n\n```java\n@RabbitListener(bindings = @QueueBinding(\n        // \u961f\u5217\uff1a\n        // name - \u961f\u5217\u540d\u5b57\n        // durable - \u961f\u5217\u6301\u4e45\u5316\uff0c\u4e0d\u4f1a\u968f\u7740MQ\u5173\u95ed\u800c\u6d88\u5931\n        // arguments\uff1a\u4f7f\u961f\u5217\u4e3aLazy queue\u5c06\u6d88\u606f\u5c3d\u5feb\u5199\u5165\u78c1\u76d8\n        value = @Queue(\n                name = BI_QUEUE_NAME,\n                durable = \"true\",\n                arguments = @Argument(name = \"x-queue-mode\", value = \"lazy\")),\n        // \u4ea4\u6362\u673a:\u6307\u5b9a\u4ea4\u6362\u673a\u7684\u540d\u5b57\u4e0e\u7c7b\u578b(\u9ed8\u8ba4direct)\n        exchange = @Exchange(name = BI_EXCHANGE_NAME, type = ExchangeTypes.DIRECT),\n        // \u6309\u4ea4\u6362\u673a\u7c7b\u578b(Direct\u3001Topic),\u8bbe\u7f6eKey\n        key = BI_ROUTING_KEY\n))\npublic void receiveMessage(Long chatId) {\n    // 0. \u4e1a\u52a1\u5e42\u7b49\u6027\u5224\u65ad - \u57fa\u4e8e\u4e50\u89c2\u9501\u6539\u9020\n    boolean update = chartService.lambdaUpdate()\n            .set(Chart::getStatus, RUNNING_STATUS)\n            .eq(Chart::getId, chatId)\n            .eq(Chart::getStatus, WAIT_STATUS)\n            .update();\n    if (!update) {\n        handleChartUpdateError(chatId, \"\u8be5\u56fe\u8868\u6b63\u5728\u751f\u6210\u4e2d\uff01\u8bf7\u8010\u5fc3\u7b49\u5f85\");\n        return;\n    }\n```\n\n\n\n\u5f53\u7136\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u62d3\u5c55\uff0c\u6bd4\u5982\u5bf9error\u961f\u5217\u8fdb\u884c\u76d1\u542c\uff0c\u9488\u5bf9\u9519\u8bef\u6d88\u606f\u8fdb\u884c\u7279\u6b8a\u4e1a\u52a1\u5904\u7406\u7b49\u7b49~\n\n\u81f3\u6b64\u4e4b\u540e\uff0cMQ\u57fa\u672c\u64cd\u4f5c\u4ee5\u53ca\u914d\u7f6e\u5b8c\u6bd5~\u5e76\u4e14MQ\u53ef\u9760\u6027\u76f8\u5bf9\u9ad8\u3002\n\n\u6700\u540e\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u7528~"}