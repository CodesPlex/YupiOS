{"data": "# Springboot \u5f15\u5165 Nacos ( Windows \u7248)\n\n> \u4f5c\u8005\uff1a[\u4e3a](https://blog.csdn.net/Go_ahead_forever)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 14255\n\n\u9996\u5148\u8981\u4e86\u89e3\u5728 Springboot \u4e2d\u53ea\u652f\u6301\u90a3\u4e9b Springboot \u7684\u7248\u672c\uff08\u6211\u771f\u7684\u88ab\u8fd9\u4e2a\u641e\u6b7b\u4e86\uff09,\u53ef\u4ee5\u5982\u4e0b\u56fe\u53c2\u8003\uff1a\n\n![](https://pic.yupi.icu/5563/202312131307119.png)\n\n\u4e0b\u9762\u6211\u4eec\u5c31\u5f00\u59cb\u5427\n\n## \u4e0b\u8f7d Nacos\n\n[nacos \u4e0b\u8f7d\u5730\u5740](https://github.com/alibaba/nacos/tags)\uff0c\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4f60\u8981\u4e0b\u8f7d\u7684\u7248\u672c\uff0c\u6211\u9009\u62e9\u4e0b\u8f7d\u4e862.2.2\uff0c\u5728\u4e0b\u8f7d\u7684\u65f6\u5019\u6839\u636e\u81ea\u5df1\u7684\u7535\u8111\u9009\u62e9\u5408\u9002\u7684\u538b\u7f29\u5305\n\n\u6211\u8fd9\u91cc\u6f14\u793a windows \u7248\u672c\n\n\u4e0b\u8f7d\u597d\u4ee5\u540e\u5c31\u53ef\u4ee5\u89e3\u538b\uff0c\u653e\u5230\u4e00\u4e2a\u65e0\u4e2d\u6587\u7684\u76ee\u5f55\uff08\u5343\u4e07\uff09\n\n\u7136\u540e\u70b9\u5f00`nacos`\u76ee\u5f55\u5230\u8fbe`bin`\u76ee\u5f55\u91cc\u9762\u5c31\u662f\u53ef\u8fd0\u884c\u7684\u6587\u4ef6\u4e86\u3002\n\n\u5982\u679c\u60f3\u8981\u5355\u8282\u70b9\u8fd0\u884c\uff08\u4e00\u822c\u6211\u4eec\u81ea\u5df1\u5b66\u4e60\u90fd\u662f\u5355\u8282\u70b9\uff0c\u4f46\u662f\u9ed8\u8ba4\u542f\u52a8\u591a\u8282\u70b9\u5c31\u4f1a\u62a5\u9519\uff09\uff0c\u8bf7\u8fd0\u884c\u4e0b\u5217\u547d\u4ee4\uff1a\n\n```bash\n.\\startup.cmd -m standalone\n```\n\n\u547d\u4ee4\u7684\u8fd0\u884c\u662f\u5728 bin \u76ee\u5f55\u4e0b\uff0c\u5982\u679c\u65e0\u6743\u9650\uff0c\u8bf7\u7528\u7ba1\u7406\u5458\u7684\u7ec8\u7aef\u518d\u6b21\u5c1d\u8bd5\u3002\n\n![](https://pic.yupi.icu/5563/202312131307768.png)\n\n\u542f\u52a8\u597d\u540e\uff1a\n\n![](https://pic.yupi.icu/5563/202312131307829.png)\n\n\u70b9\u51fb\u4e0a\u56fe\u51fa\u73b0\u7684\u7f51\u5740\u53ef\u4ee5\u8fdb\u5165\uff08\u5982\u679c\u8981\u8f93\u5165\u5bc6\u7801\u9ed8\u8ba4\u90fd\u662fnacos\uff09\uff1a\n\n![](https://pic.yupi.icu/5563/202312131307841.png)\n\n------\n\n------\n\n------\n\n## Springboot \u4e2d\u5f15\u5165\n\n### \u5f15\u5165\u4f9d\u8d56\u7ba1\u7406\n\n\u8fd9\u4e2a\u4f9d\u8d56\u7ba1\u7406\u5305\u542b\u4e86 Springboot \u7684\u7248\u672c\uff0cspringcloud \u7684\u7248\u672c\uff0cspringalibabacloud \u7684\u7248\u672c\u3002\u5f15\u5165\u4f9d\u8d56\u7ba1\u7406\u662f\u4fbf\u4e8e\u540e\u671f\u52a0\u5165\u4f9d\u8d56\u7684\u65f6\u5019\u4e0d\u7528\u5173\u6ce8\u7248\u672c\u672c\u8eab\uff0c\u53ea\u9700\u8981\u628a\u4f9d\u8d56\u5f15\u5165\u5c31\u597d\u4e86\u3002\n\n\u6211\u8fd9\u91cc springboot \u7684\u7248\u672c\u662f 2.6.11\uff08\u8bf7\u4e25\u683c\u6309\u7167\u5f00\u59cb\u7684\u90a3\u5f20\u56fe\u5bf9\u5e94\u7248\u672c\uff09\n\n\u5728\u4f60\u7684 pom.xml \u6587\u4ef6\u4e2d\u5f15\u5165\uff1a\n\n```xml\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-dependencies</artifactId>\n            <version>${spring-boot.version}</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>2021.0.4</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-alibaba-dependencies</artifactId>\n            <version>2021.0.4.0</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n\n</dependencyManagement>\n```\n\n### \u5f15\u5165\u4f7f\u7528\u7684\u4f9d\u8d56\n\n\u6211\u4eec\u662f\u8981\u4f7f\u7528\u7684\u662f nacos \u7684\u670d\u52a1\u6ce8\u518c\uff0c\u6240\u4ee5\u6211\u4eec\u5f15\u5165 discovery \u7684\u542f\u52a8\u5305\uff0c\u4ee5\u53ca\u8981\u60f3\u542f\u52a8\u6211\u4eec\u8981\u5f15\u5165 springcloud \u7684 bootstrap \u5305\u3002\n\n```xml\n<dependency>\n    <groupId>com.alibaba.cloud</groupId>\n    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-bootstrap</artifactId>\n</dependency>\n```\n\n### \u5728 application.yml \u4e2d\u586b\u5199\u914d\u7f6e\n\n\u8fd9\u91cc\u4e3b\u8981\u5c31\u662f\u914d\u7f6e nacos \u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u4ee5\u53ca\u914d\u7f6e\u6211\u4eec\u6574\u4e2a\u670d\u52a1\u7684\u540d\u79f0\u3002\n\n```yaml\nspring:\n  application:\n    name: nacos-config-example\n  cloud:\n    nacos:\n      discovery:\n        server-addr: localhost:8848\n```\n\n### \u5728\u542f\u52a8\u7c7b\u4e2d\u6dfb\u52a0\u5141\u8bb8\u53d1\u73b0\u7684\u6ce8\u89e3\n\n\u5176\u5b9e\u5c31\u662f\u6ce8\u89e3 `@EnableDiscoveryClient`\n\n\u76f4\u63a5\u770b\u4ee3\u7801\n\n```java\n@SpringBootApplication\n@EnableDiscoveryClient\npublic class UserServiceApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(UserServiceApplication.class, args);\n    }\n\n}\n```\n\n------\n\n------\n\n------\n\n\u7136\u540e\u91cd\u65b0\u542f\u52a8\u5c31\u53ef\u4ee5\u5566\n\n![](https://pic.yupi.icu/5563/202312131308126.png)\n\n> \u8bf4\u660e\uff1a\u5728SpringBoot 2.4.x\u7684\u7248\u672c\u4e4b\u540e\uff0c\u5bf9\u4e8ebootstrap.properties/bootstrap.[yaml\u914d\u7f6e\u6587\u4ef6](https://so.csdn.net/so/search?q=yaml\u914d\u7f6e\u6587\u4ef6&spm=1001.2101.3001.7020)(\u6211\u4eec\u5408\u8d77\u6765\u6210\u4e3aBootstrap\u914d\u7f6e\u6587\u4ef6)\u7684\u652f\u6301\uff0c\u9700\u8981\u5bfc\u5165\u5982\u4e0b\u7684\u4f9d\u8d56\u3002\u7531\u4e8eSpringCloud 2020.*\u4ee5\u540e\u7684\u7248\u672c\u9ed8\u8ba4\u7981\u7528\u4e86bootstrap\uff0c\u5bfc\u81f4\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u65f6\u8bfb\u53d6\u4e0d\u5230\u8be5\u5c5e\u6027\u3002\n>\n> ```xml\n> <dependency>\n>   <groupId>org.springframework.cloud</groupId>\n>   <artifactId>spring-cloud-starter-bootstrap</artifactId>\n> </dependency>\n> ```\n\n## \u4f7f\u7528\n\n> \u6ce8\u610f\uff1a\u5728 Spring Cloud Nacos 2021 \u4ee5\u540e\u5c31\u6ca1\u6709\u5728\u9ed8\u8ba4\u4f7f\u7528 Ribbon \u4f5c\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668\u4e86\uff0c\u800c\u4e14\u5728Cloud\u5b98\u7f51\u4e2d\u4e5f\u63a8\u8350\u4f7f\u7528LoadBalancer \u4f5c\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5bf9\u6b64\u5148\u5f15\u5165\u4f9d\u8d56\uff1a\n>\n> ```xml\n> <!--loadbalancer\u8d1f\u8f7d\u5747\u8861\u5668-->\n> <dependency>\n> <groupId>org.springframework.cloud</groupId>\n> <artifactId>spring-cloud-starter-loadbalancer</artifactId>\n> </dependency> \n> ```\n\n\u5efa\u7acb\u4e00\u4e2a\u7c7b\u4f3c\u7684\u5de5\u7a0b\uff0c\u524d\u9762\u7684\u5f15\u5165\u8fc7\u7a0b\u4e00\u81f4\u3002\n\n\u6700\u7ec8\u5728\u4f7f\u7528\u7684\u65f6\u5019\u5982\u4e0b\uff1a\n\n```java\npackage com.xwhking.orderservice.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.cloud.client.ServiceInstance;\nimport org.springframework.cloud.client.loadbalancer.LoadBalancerClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestTemplate;\n\nimport javax.annotation.Resource;\n\n@RestController\n@RequestMapping(\"/order\")\npublic class TestController {\n    @Resource\n    private RestTemplate restTemplate;\n\n\n    @Resource\n    private LoadBalancerClient loadBalancerClient;\n\n    @GetMapping(\"/test/{id}\")\n    public String getTest(@PathVariable(\"id\") String id){\n        String url = \"http://userservice/user/getOne/\"+id;\n        ServiceInstance serviceInstance = loadBalancerClient.choose(\"userservice\");\n        url = serviceInstance.getUri().toString()+\"/user/getOne/\"+id;\n        String result1 = restTemplate.getForObject(url, String.class);\n        return result1+\"\\n\";\n    }\n}\n```\n\n\u597d\u6587\u63a8\u8350\uff1a[SpringBoot2.6.11 + Spring Cloud Alibaba + Nacos \u642d\u5efa - MyDistance - \u535a\u5ba2\u56ed (cnblogs.com)](https://www.cnblogs.com/CF1314/p/17541747.html)\n\n\u5982\u679c\u6709\u8fd9\u4e9b\u9519\u8bef\u63d0\u793a\uff1a\n\n- `org.springframework.cloud.commons.ConfigDataMissingEnvironmentPostProcessor$ImportException: No spring.config.import set`\n- \u6216\u8005\u542f\u52a8\u4e0d\u4e86\uff0c\u6309\u8fd9\u7bc7\u6587\u7ae0\u6765\u4e00\u904d\uff0c\u51e0\u4e4e\u90fd\u53ef\u4ee5\u5566"}