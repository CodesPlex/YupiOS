{"data": "# Redis \u5b9e\u73b0\u6587\u7ae0\u70b9\u8d5e\u529f\u80fd(\u9644\u5e26\u524d\u540e\u7aef\u4ee3\u7801\u3001\u6570\u636e\u5e93)\n\n> \u4f5c\u8005\uff1a[\u5357\u4fa0](https://gitee.com/crzzx)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 29240\n\n\u4f7f\u7528redis\u4e0emysql\u5b9a\u671f\u540c\u6b65\u7684\u65b9\u6848\u5b9e\u73b0\u70b9\u8d5e\u529f\u80fd\u7684\u76f8\u5173\u903b\u8f91\u8bbe\u8ba1\u548c\u4ee3\u7801\u7f16\u5199\n\n## \uff081\uff09\u524d\u8a00\u53ca\u95ee\u9898\u5206\u6790\n\n\u70b9\u8d5e\u529f\u80fd\u662f\u5f88\u591a\u793e\u4ea4\u5e73\u53f0\u548c\u5728\u7ebf\u5e94\u7528\u4e2d\u5e38\u89c1\u7684\u4e00\u4e2a\u4ea4\u4e92\u7279\u6027\uff0c\u5b83\u53ef\u4ee5\u589e\u5f3a\u7528\u6237\u53c2\u4e0e\u611f\u3001\u793e\u4ea4\u4f53\u9a8c\uff0c\u5e76\u4e14\u6709\u52a9\u4e8e\u5185\u5bb9\u7684\u63a8\u5e7f\u3002\n\n### \u5173\u952e\u7279\u6027\uff1a\n\n1. **\u552f\u4e00\u6027\uff1a** \u6bcf\u4e2a\u7528\u6237\u5bf9\u540c\u4e00\u6761\u5185\u5bb9\u53ea\u80fd\u70b9\u8d5e\u4e00\u6b21\uff0c\u786e\u4fdd\u7528\u6237\u4e0d\u80fd\u591a\u6b21\u91cd\u590d\u70b9\u8d5e\u3002\n2. **\u5373\u65f6\u6027\uff1a** \u70b9\u8d5e\u7684\u53cd\u9988\u5e94\u8be5\u662f\u5373\u65f6\u7684\uff0c\u7528\u6237\u70b9\u51fb\u70b9\u8d5e\u6309\u94ae\u540e\uff0c\u7cfb\u7edf\u5e94\u8be5\u8fc5\u901f\u54cd\u5e94\uff0c\u4e0d\u5e94\u6709\u660e\u663e\u7684\u5ef6\u8fdf\u3002\n3. **\u53ef\u89c1\u6027\uff1a** \u70b9\u8d5e\u72b6\u6001\u5e94\u8be5\u53ca\u65f6\u5730\u53cd\u6620\u5728\u7528\u6237\u754c\u9762\u4e0a\uff0c\u4ee5\u4fbf\u5176\u4ed6\u7528\u6237\u80fd\u591f\u770b\u5230\u8c01\u7ed9\u67d0\u4e2a\u5185\u5bb9\u70b9\u8d5e\u4e86\u3002\n4. **\u53ef\u64a4\u9500\u6027\uff1a** \u7528\u6237\u5e94\u8be5\u80fd\u591f\u53d6\u6d88\u70b9\u8d5e\uff0c\u786e\u4fdd\u7528\u6237\u53ef\u4ee5\u66f4\u6539\u4ed6\u4eec\u7684\u559c\u597d\u3002\n5. **\u8ba1\u6570\u548c\u6392\u540d\uff1a** \u70b9\u8d5e\u6570\u91cf\u901a\u5e38\u4f1a\u88ab\u7528\u4e8e\u8861\u91cf\u5185\u5bb9\u53d7\u6b22\u8fce\u7a0b\u5ea6\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u70b9\u8d5e\u6570\u91cf\u8fdb\u884c\u5b9e\u65f6\u7684\u8ba1\u6570\u548c\u6392\u540d\u3002\n\n## \uff082\uff09\u529f\u80fd\u65b9\u6848\u56fe\n\n![](https://pic.yupi.icu/5563/202312171829589.png)\n\n## \uff083\uff09\u529f\u80fd\u70b9\u8be6\u60c5\n\n### 1. \u524d\u7aef\n\n\u5728\u6b64\u65b9\u6848\u4e2d\uff0c\u524d\u7aef\u6d89\u53ca\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n1. \u9875\u9762\u5f00\u53d1\uff1a\u6bcf\u4e2a\u7ec4\u4ef6\u5e93\u90fd\u6709\u5bf9\u5e94\u7684\u7ec4\u4ef6\u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u5982\u7b14\u8005\u4f7f\u7528\u7684\u662fArco Design\u7684\u5361\u7247\u63d2\u69fd\uff0c\u4f7f\u7528vue3\u96c6\u6210\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```vue\n<template #actions>\n        <span\n          class=\"icon-hover\"\n          style=\"color: #f53f3f\"\n          @click=\"likeOrNot\"\n          v-if=\"likeState === true\"\n        >\n          <IconHeartFill size=\"20\"\n        /></span>\n        <span class=\"icon-hover\" @click=\"likeOrNot\" v-if=\"likeState === false\">\n          <IconHeart size=\"20\" /></span\n        ><span class=\"actionText\">{{\n          parseInt(solution.solutionLikes as any, 10) + 1\n        }}</span>\n</template>\n```\n\n1. \u8fdb\u5165\u6587\u7ae0\u9875\u9762\u65f6\uff0c\u8c03\u7528\u4e24\u4e2a\u63a5\u53e3\uff1a1. \u6587\u7ae0\u4fe1\u606f\u63a5\u53e3\uff1b2. \u7528\u6237\u662f\u5426\u70b9\u8d5e\u72b6\u6001\u67e5\u8be2\u63a5\u53e3\n2. \u7528\u6237\u70b9\u8d5e\u6216\u53d6\u6d88\u70b9\u8d5e\u6210\u529f\u540e\uff1a\u624b\u52a8\u66f4\u65b0\u9875\u9762\u6587\u7ae0\u70b9\u8d5e\u6570\uff08\u56e0\u4e3aredis\u548cmysql\u540c\u6b65\u5e76\u4e0d\u5b9e\u65f6\uff0c\u4e14\u70b9\u8d5e\u6570\u662f\u4ece\u76f8\u5bf9\u6ede\u540e\u7684mysql\u4e2d\u67e5\uff0c\u6240\u4ee5\uff0c\u9700\u8981\u524d\u7aef\u624b\u52a8\u8fd0\u7b97\u4e00\u4e0b\uff0c\u786e\u4fdd\u7ed9\u4e88\u7528\u6237\u6b63\u786e\u7684\u7ed3\u679c\u53cd\u9988\uff0c\u81f3\u4e8e\u9000\u51fa\u9875\u9762\u91cd\u65b0\u8fdb\u5165\u6587\u7ae0\u70b9\u8d5e\u6570\u91cf\u4e0d\u53d8\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u65e0\u6240\u8c13\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u8bf4\uff1a\u4e4b\u6240\u4ee5\u6ca1\u53d8\uff0c\u662f\u56e0\u4e3a\u5176\u4ed6\u4eba\u70b9\u8d5e\u8865\u5145\u4e86\u800c\u5df2\uff09\n3. \u627f\u63a53\uff0c\u540c\u65f6\uff0c\u53d8\u66f4\u7528\u6237\u5f53\u524d\u9875\u9762\u70b9\u8d5e\u72b6\u6001\uff0c\u65e0\u9700\u8c03\u75282\u4e2d\u7684\u70b9\u8d5e\u72b6\u6001\u67e5\u8be2\u63a5\u53e3\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u4e00\u4e9b\u6548\u7387\n\n### 2. Redis\n\n**\u70b9\u8d5e\u662f\u4e00\u4e2a\u9891\u7e41\u7684\u64cd\u4f5c\u3002**\n\n\u4e3a\u4ec0\u4e48\u4f7f\u7528Redis\uff0c\u90a3\u4e48\u9996\u5148\u662f\u5176\u5fc5\u8981\u6027\uff0c\u4ee5\u4e0b\u662fchatgpt\u7ed9\u51fa\u7684\uff1a\n\n1. **\u5feb\u901f\u8bfb\u5199\uff1a** Redis \u662f\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u9ad8\u6027\u80fd\u952e\u503c\u5b58\u50a8\u6570\u636e\u5e93\uff0c\u9002\u5408\u7528\u4e8e\u9700\u8981\u5feb\u901f\u8bfb\u5199\u7684\u573a\u666f\uff0c\u5982\u70b9\u8d5e\u8bb0\u5f55\u7684\u5b58\u50a8\u548c\u8bfb\u53d6\u3002\n2. **\u8ba1\u6570\u5668\uff1a** Redis \u7684\u539f\u5b50\u6027\u64cd\u4f5c\u4f7f\u5176\u975e\u5e38\u9002\u5408\u4f5c\u4e3a\u70b9\u8d5e\u8ba1\u6570\u5668\u7684\u540e\u7aef\u5b58\u50a8\uff0c\u907f\u514d\u4e86\u5e76\u53d1\u64cd\u4f5c\u5bfc\u81f4\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u95ee\u9898\u3002\n3. **\u7f13\u5b58\uff1a** Redis \u53ef\u4ee5\u7528\u4f5c\u7f13\u5b58\u5b58\u50a8\uff0c\u53ef\u4ee5\u7f13\u89e3\u6570\u636e\u5e93\u8d1f\u62c5\uff0c\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06\u70b9\u8d5e\u8bb0\u5f55\u5b58\u50a8\u5728 Redis \u4e2d\uff0c\u51cf\u8f7b\u5bf9\u4e3b\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u538b\u529b\u3002\n4. **\u6301\u4e45\u5316\uff1a** Redis \u652f\u6301\u6570\u636e\u6301\u4e45\u5316\uff0c\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u786e\u4fdd\u6570\u636e\u7684\u53ef\u9760\u6027\u3002\n5. **\u96c6\u5408\u548c\u6392\u5e8f\u96c6\u5408\uff1a** Redis \u7684\u96c6\u5408\u548c\u6392\u5e8f\u96c6\u5408\u6570\u636e\u7ed3\u6784\u975e\u5e38\u9002\u5408\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u70b9\u8d5e\u8bb0\u5f55\u548c\u8ba1\u6570\u3002\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u6dfb\u52a0\u3001\u5220\u9664\u3001\u67e5\u627e\u7b49\u64cd\u4f5c\u3002\n6. **\u5206\u5e03\u5f0f\uff1a** \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0cRedis\u53ef\u4ee5\u4f5c\u4e3a\u5206\u5e03\u5f0f\u9501\u7684\u4e00\u90e8\u5206\uff0c\u786e\u4fdd\u5728\u9ad8\u5e76\u53d1\u60c5\u51b5\u4e0b\u70b9\u8d5e\u64cd\u4f5c\u7684\u4e00\u81f4\u6027\u3002\n\n\u603b\u7684\u6765\u8bf4\uff0c\u4f7f\u7528 Redis \u53ef\u4ee5\u63d0\u9ad8\u70b9\u8d5e\u529f\u80fd\u7684\u6027\u80fd\u3001\u53ef\u9760\u6027\u548c\u6269\u5c55\u6027\uff0c\u4f7f\u7cfb\u7edf\u66f4\u52a0\u7a33\u5b9a\u548c\u9ad8\u6548\u3002\n\n\u660e\u786e\u4e86\u5fc5\u8981\u6027\u4e4b\u540e\uff0c\u672c\u6587\u65b9\u6848\u4e3b\u8981\u4f7f\u7528\u4e86\u4ee5\u4e0b\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\uff1a\n\n1. articleId-set\uff1akey=articleId\uff0cvalue=set\uff08userId\uff09\n2. articleLike-hash\uff1akey=articleId\uff0cval=likesNum;\n\n\u4f7f\u75282\u4e3b\u8981\u662f\u4fbf\u4e8e\u66f4\u5feb\u7684\u67e5\u8be2\u5f53\u524d\u6587\u7ae0\u7684\u70b9\u8d5e\u6570\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u4f7f1\u4e13\u6ce8\u4e8e\u70b9\u8d5e\u8005\u7684\u4fee\u6539\u3002\n\n\uff08\u76f8\u5173\u4ee3\u7801\u57284\uff08\u540e\u7aef\uff09\u4e2d\uff09\n\n### 3. Mysql\n\n\u6d89\u53ca\u7684\u8868\u7ed3\u6784\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a\n\n1. \u6587\u7ae0\u8868\uff08article\uff09\uff1aarticleId\u3001likesNum\u3002\u3002\u3002\n2. \u6587\u7ae0\u70b9\u8d5e\u8868\uff08article_like)\uff1aarticleId\u3001userId\u3002\u3002\u3002\n\n\u70b9\u8d5e\u4fe1\u606f\u7a33\u5b9a\u4e0b\u6765\u540e\uff0c\u4e5f\u662f\u8981\u6301\u4e45\u5316\u7684\uff0c\u56e0\u6b64\u5b58\u5230\u6570\u636e\u5e93\u662f\u5fc5\u8981\u7684\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```sql\n/*\n Navicat Premium Data Transfer\n\n Source Server         : zzx\n Source Server Type    : MySQL\n Source Server Version : 80033 (8.0.33)\n Source Host           : localhost:3306\n Source Schema         : sspuoj_db_dev\n\n Target Server Type    : MySQL\n Target Server Version : 80033 (8.0.33)\n File Encoding         : 65001\n\n Date: 16/12/2023 18:24:31\n*/\n\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for question_solution\n-- ----------------------------\nDROP TABLE IF EXISTS `question_solution`;\nCREATE TABLE `question_solution`  (\n  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',\n  `solutionLikes` bigint NULL DEFAULT 0 COMMENT '\u9898\u89e3\u70b9\u8d5e\u6570',\n  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '\u521b\u5efa\u65f6\u95f4',\n  `updateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '\u66f4\u65b0\u65f6\u95f4',\n  `isDelete` tinyint NOT NULL DEFAULT 0 COMMENT '\u662f\u5426\u5220\u9664',\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `idx_id`(`id` ASC) USING BTREE,\n  INDEX `idx_userId`(`userId` ASC) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 25 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;\n\nSET FOREIGN_KEY_CHECKS = 1;\n\n-- ----------------------------\n-- Table structure for article_likes\n-- ----------------------------\nDROP TABLE IF EXISTS `article_likes`;\nCREATE TABLE `article_likes`  (\n  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',\n  `articleId` bigint NULL DEFAULT NULL COMMENT '\u6587\u7ae0id',\n  `userId` bigint NULL DEFAULT NULL COMMENT '\u70b9\u8d5e\u4ebaid',\n  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '\u521b\u5efa\u65f6\u95f4',\n  `updateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '\u66f4\u65b0\u65f6\u95f4',\n  `isDelete` tinyint NOT NULL DEFAULT 0 COMMENT '\u662f\u5426\u5220\u9664',\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;\n\nSET FOREIGN_KEY_CHECKS = 1;\n```\n\n### 4. \u540e\u7aef\n\n\u4e3b\u8981\u670d\u52a1\u67093\u4e2a\uff1a\n\n1. redis-mysql\u540c\u6b65\u7684\u5b9a\u65f6\u4efb\u52a1\n2. \u67e5\u8be2\u7528\u6237\u662f\u5426\u70b9\u8fc7\u8d5e\n3. \u7528\u6237\u70b9\u8d5e/\u53d6\u6d88\u70b9\u8d5e\n\n\u4e0b\u9762\u6211\u4eec\u7ed3\u5408\u4ee3\u7801\u6765\u7ec6\u8bf4\u3002\n\n\u9996\u5148\u662f2\u30013\u7684service\u4ee3\u7801\uff1a\n\n- \u67e5\u8be2\u7528\u6237\u662f\u5426\u70b9\u8fc7\u8d5e\uff0c\u53ea\u9700\u6839\u636earticleId\u67e5\u5230\u5bf9\u5e94\u7684set\u770b\u91cc\u9762\u6709\u6ca1\u6709\u8be5\u7528\u6237\n- \u70b9\u8d5e\u548c\u53d6\u6d88\u70b9\u8d5e\uff0c\u53ea\u9700\u63d2\u5165\u6216\u5220\u9664set\uff0c\u589e\u52a0\u6216\u4fee\u6539hash\n\n```java\npackage sspu.zzx.sspuoj.service.impl;\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.HashOperations;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.SetOperations;\nimport org.springframework.stereotype.Service;\nimport sspu.zzx.sspuoj.mapper.ArticleLikesMapper;\nimport sspu.zzx.sspuoj.model.entity.ArticleLikes;\nimport sspu.zzx.sspuoj.service.ArticleLikesService;\n\nimport java.util.Collections;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\nimport java.util.stream.Collectors;\n\n/**\n * @author ZZX\n * @description \u9488\u5bf9\u8868\u3010article_likes\u3011\u7684\u6570\u636e\u5e93\u64cd\u4f5cService\u5b9e\u73b0\n * @createDate 2023-12-12 15:14:24\n */\n@Service\npublic class ArticleLikesServiceImpl extends ServiceImpl<ArticleLikesMapper, ArticleLikes> implements ArticleLikesService\n{\n    private final RedisTemplate<String, Object> redisTemplate;\n    private final SetOperations<String, Object> setOperations;\n    private final HashOperations<String, Object, Object> hashOperations;\n\n    @Autowired\n    public ArticleLikesServiceImpl(RedisTemplate<String, Object> redisTemplate)\n    {\n        this.redisTemplate = redisTemplate;\n        this.setOperations = redisTemplate.opsForSet();\n        this.hashOperations = redisTemplate.opsForHash();\n    }\n\n    // \u6dfb\u52a0\u7528\u6237\u5230\u6587\u7ae0\u7684\u70b9\u8d5e\u96c6\u5408\u4e2d\uff0c\u540c\u65f6\u8bbe\u7f6e\u96c6\u5408\u952e\u6c38\u4e0d\u8fc7\u671f\n    public void addUserToLikeSet(Long articleId, Long userId)\n    {\n        Long add = setOperations.add(getArticleLikeSetKey(articleId), userId);\n        // \u8bbe\u7f6e\u96c6\u5408\u952e150\u5e74\u8fc7\u671f\n        redisTemplate.expire(getArticleLikeSetKey(articleId), 365 * 150, TimeUnit.DAYS);\n    }\n\n\n    // \u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u70b9\u8d5e\n    public boolean isUserLiked(Long articleId, Long userId)\n    {\n        return Boolean.TRUE.equals(setOperations.isMember(getArticleLikeSetKey(articleId), userId));\n    }\n\n    // \u8bbe\u7f6e\u6587\u7ae0\u7684\u70b9\u8d5e\u6570\n    public void setArticleLikes(Long articleId, long likes)\n    {\n        hashOperations.put(getArticleLikesHashKey(), articleId, likes);\n    }\n\n    // \u83b7\u53d6\u6587\u7ae0\u7684\u70b9\u8d5e\u6570\n    public Long getArticleLikes(Long articleId)\n    {\n        Object likes = hashOperations.get(getArticleLikesHashKey(), articleId);\n        return likes != null ? Long.parseLong(likes.toString()) : 0L;\n    }\n\n    // \u83b7\u53d6\u6587\u7ae0\u70b9\u8d5e\u7684\u7528\u6237ID\u96c6\u5408\n    public Set<Object> getArticleLikedUsers(Long articleId)\n    {\n        Set<Object> likedUsers = setOperations.members(getArticleLikeSetKey(articleId));\n        return likedUsers != null ? likedUsers : Collections.emptySet();\n    }\n\n\n    // \u79fb\u9664\u7528\u6237\u4ece\u6587\u7ae0\u7684\u70b9\u8d5e\u96c6\u5408\u4e2d\n    public void removeUserFromLikeSet(Long articleId, Long userId)\n    {\n        setOperations.remove(getArticleLikeSetKey(articleId), userId);\n    }\n\n    // \u83b7\u53d6\u6587\u7ae0\u7684\u70b9\u8d5e\u96c6\u5408\u7684\u952e\n    private String getArticleLikeSetKey(Long articleId)\n    {\n        return \"article:\" + articleId + \":likes\";\n    }\n\n    // \u83b7\u53d6\u6587\u7ae0\u70b9\u8d5e\u6570\u7684\u54c8\u5e0c\u8868\u952e\n    private String getArticleLikesHashKey()\n    {\n        return \"article:likes\";\n    }\n\n    // \u70b9\u8d5e\n    public void like(Long articleId, Long userId)\n    {\n        addUserToLikeSet(articleId, userId);\n        Long likes = getArticleLikes(articleId);\n        if (likes >= 0)\n        {\n            setArticleLikes(articleId, likes + 1);\n        }\n    }\n\n    // \u53d6\u6d88\u70b9\u8d5e\n    public void cancelLike(Long articleId, Long userId)\n    {\n        if (isUserLiked(articleId, userId))\n        {\n            removeUserFromLikeSet(articleId, userId);\n            Long likes = getArticleLikes(articleId);\n            if (likes > 0)\n            {\n                setArticleLikes(articleId, likes - 1);\n            }\n        }\n    }\n\n    @Override\n    public Boolean likeArticleOrNot(Long articleId, Long userId)\n    {\n        // \u83b7\u5f97\u5f53\u524d\u70b9\u8d5e\u6587\u7ae0\u7684\u7528\u6237\u96c6\u5408\n        Set<Object> likeUsers = getArticleLikedUsers(articleId);\n        // \u5982\u679c\u5b58\u5728\u8be5\u7528\u6237\uff0c\u5c31\u53d6\u6d88\u70b9\u8d5e\n        if (likeUsers.size() > 0 && likeUsers.contains(userId))\n        {\n            cancelLike(articleId, userId);\n            return false;\n        }\n        // \u53cd\u4e4b\uff0c\u70b9\u8d5e\n        else\n        {\n            like(articleId, userId);\n            return true;\n        }\n    }\n\n\n    @Override\n    public Boolean ifLiked(Long articleId, Long userId)\n    {\n        // \u9996\u5148\u4eceredis\u68c0\u67e5\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u6570\u636e\u5e93\u91cc\u9762\u6700\u7ec8\u4e5f\u4e00\u5b9a\u4f1a\u6709\n        Set<Long> articleLikedUsers = getArticleLikedUsers(articleId).stream().map(e -> (Long) e).collect(Collectors.toSet());\n        if (articleLikedUsers.contains(userId)) return true;\n        /*\n        \u8fd9\u5757\u611f\u89c9\u4e0d\u7528\uff0c\u4fdd\u8bc1\u5b9e\u65f6\u6027\u6bd4\u8f83\u597d\uff0credis\u5b95\u673a\u540e\u518d\u540c\u6b65\u5c31\u597d\u4e86\n        // \u5982\u679credis\u4e2d\u6ca1\u6709\uff0c\u5219\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\uff0c\u6709\u5219\u6709\uff0c\u5426\u5219\u90a3\u786e\u5b9e\u662f\u6ca1\u6709\n        QueryWrapper<ArticleLikes> queryWrapper = new QueryWrapper<>();\n        queryWrapper.eq(\"article_id\", articleId);\n        queryWrapper.eq(\"user_id\", userId);\n        List<ArticleLikes> list = this.list(queryWrapper);\n        return !list.isEmpty();\n         */\n        return false;\n    }\n}\n```\n\n\u6700\u540e\u662f\uff0credis\u4e0emysql\u7684\u540c\u6b65\u4ee3\u7801\uff08\u521d\u7248\u4ee3\u7801\u4e0d\u662f\u5f88\u4f18\u96c5\uff0c\u4f46\u903b\u8f91\u57fa\u672c\u5982\u6b64\uff0c\u4ec5\u4f9b\u53c2\u8003\uff09\n\n```java\npackage sspu.zzx.sspuoj.task;\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Component;\nimport sspu.zzx.sspuoj.model.entity.ArticleLikes;\nimport sspu.zzx.sspuoj.model.entity.QuestionSolution;\nimport sspu.zzx.sspuoj.service.QuestionSolutionService;\nimport sspu.zzx.sspuoj.service.impl.ArticleLikesServiceImpl;\n\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n/**\n * @version 1.0\n * @Author ZZX\n * @Date 2023/12/12 16:54\n */\n@Component\n@Slf4j\npublic class ArticleLikesSynTask\n{\n    @Autowired\n    private QuestionSolutionService questionSolutionService;\n    @Autowired\n    private ArticleLikesServiceImpl articleLikesService;\n\n    /**\n     * \u5b9a\u65f6\u540c\u6b65\u6587\u7ae0\u70b9\u8d5e\u4fe1\u606f\n     */\n    @Scheduled(cron = \"0 0 12 */1 * *\") // \u6bcf1\u5929\n//    @Scheduled(cron = \"0 */1 * * * *\") // \u6bcf\u4e00\u5206\u949f\u6267\u884c\u4e00\u6b21\n    public void synArticleLikes()\n    {\n        log.info(\"\u5b9a\u65f6\u540c\u6b65\u6587\u7ae0\u70b9\u8d5e\u4fe1\u606f - \" + new Date());\n        // \u83b7\u53d6\u6240\u6709title\u4e0d\u662f\u3010\u5916\u90e8\u56fe\u6587\u3011\u7684\u6587\u7ae0\n        QueryWrapper<QuestionSolution> queryWrapper = new QueryWrapper<>();\n        queryWrapper.ne(\"title\", \"\u5916\u90e8\u56fe\u6587\");\n        List<QuestionSolution> articles = questionSolutionService.list(queryWrapper);\n        // \u83b7\u53d6\u6240\u6709\u6587\u7ae0\u70b9\u8d5e\u96c6\u5408\n        List<ArticleLikes> articleLikes = articleLikesService.list();\n        // \u6309\u6587\u7ae0id\u5206\u7ec4\uff0cMap\u7684\u503c\u4e3aList<ArticleLikes>\n        Map<Long, List<ArticleLikes>> idToArticleLikesMap = articleLikes.stream().collect(Collectors.groupingBy(ArticleLikes::getArticleId));\n        // \u5b9a\u4e49\u8981\u66f4\u65b0\u7684question_solution\n        List<QuestionSolution> toUpdateSolution = new ArrayList<>();\n        // \u5b9a\u4e49\u6700\u7ec8\u8981\u5220\u9664\u548c\u6dfb\u52a0\u7684\u70b9\u8d5e\u8bb0\u5f55\n        List<ArticleLikes> toDeleteArticleLikes = new ArrayList<>();\n        List<ArticleLikes> toAddArticleLikes = new ArrayList<>();\n        for (QuestionSolution article : articles)\n        {\n            // \u4eceredis\u4e2d\u6587\u7ae0id\u5bf9\u5e94\u7684\u70b9\u8d5e\u6570\n            Long articleLikesFromRedis = articleLikesService.getArticleLikes(article.getId());\n            // \u4eceredis\u4e2d\u6587\u7ae0id\u5bf9\u5e94\u7684\u5177\u4f53\u70b9\u8d5e\u7528\u6237\u96c6\u5408\n            List<Long> articleLikedUserIds = articleLikesService.getArticleLikedUsers(article.getId()).stream().map(Object::toString) // \u5047\u8bbe\u8fd4\u56de\u7684\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\n                    .map(Long::parseLong).collect(Collectors.toList());\n            // \u83b7\u5f97\u8981\u5220\u9664\u7684\u6587\u7ae0\u70b9\u8d5e\u8bb0\u5f55\n            List<ArticleLikes> articleLikesFromDB = idToArticleLikesMap.get(article.getId());\n            if (articleLikesFromDB == null)\n            {\n                articleLikesFromDB = new ArrayList<>();\n            }\n            /*\u5982\u679credis\u7684\u70b9\u8d5e\u7528\u6237\u96c6\u5408\u4e3a\u7a7a\uff0c\u5219\u4e0d\u6267\u884c\u5220\u9664\u548c\u6dfb\u52a0\uff0c\n                \u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u8ba4\u4e3aredis\u5b95\u673a\u7136\u540e\u521a\u521a\u91cd\u542f\n                \u5e76\u5c06\u6570\u636e\u5e93\u4e2d\u7684\u5bf9\u5e94\u6570\u636e\u540c\u6b65\u81f3redis\u4e2d\n             */\n            if (articleLikedUserIds.isEmpty())\n            {\n                for (ArticleLikes likes : articleLikesFromDB)\n                {\n                    articleLikesService.addUserToLikeSet(article.getId(), likes.getUserId());\n                }\n                articleLikesService.setArticleLikes(article.getId(), articleLikesFromDB.size());\n                continue;\n            }\n            // \u6bd4\u8f83\u6570\u76ee\u548c\u7ed3\u5408\u7684size\uff0c\u4f7f\u5176\u4e00\u81f4\uff0c\u4ee5\u96c6\u5408size\u4e3a\u51c6\uff0c\u5e76\u66f4\u65b0article\u5bf9\u5e94\u8bb0\u5f55\u7684\u70b9\u8d5e\u6570\n            long articleLikeListSize = Long.parseLong(articleLikesFromRedis.toString());\n            if (articleLikesFromRedis.equals(articleLikeListSize))\n            {\n                articleLikesService.setArticleLikes(article.getId(), articleLikeListSize);\n            }\n            if (!article.getSolutionLikes().equals(articleLikeListSize))\n            {\n                article.setSolutionLikes(articleLikeListSize);\n                toUpdateSolution.add(article);\n            }\n            Iterator<ArticleLikes> iterator = articleLikesFromDB.iterator();\n            while (iterator.hasNext())\n            {\n                ArticleLikes likes = iterator.next();\n                if (!articleLikedUserIds.contains(likes.getUserId()))\n                {\n                    toDeleteArticleLikes.add(likes);\n                }\n            }\n            // \u83b7\u5f97\u8981\u6dfb\u52a0\u7684\u6587\u7ae0\u70b9\u8d5e\u8bb0\u5f55\n            List<Long> collectUserIdFromDB = articleLikesFromDB.stream().map(ArticleLikes::getUserId).collect(Collectors.toList());\n            for (Long articleLikedUserId : articleLikedUserIds)\n            {\n                if (!collectUserIdFromDB.contains(articleLikedUserId))\n                {\n                    ArticleLikes articleLikes1 = new ArticleLikes();\n                    articleLikes1.setArticleId(article.getId());\n                    articleLikes1.setUserId(articleLikedUserId);\n                    toAddArticleLikes.add(articleLikes1);\n                }\n            }\n        }\n        // \u66f4\u65b0question_solution\u8868\n        if (toUpdateSolution.size() > 0)\n        {\n            questionSolutionService.updateBatchById(toUpdateSolution);\n        }\n        // \u66f4\u65b0article_likes\u8868\u4e2d\u7684\u5b57\u6bb5\uff08\u5220\u9664\u548c\u6dfb\u52a0\uff09\n        if (toDeleteArticleLikes.size() > 0)\n        {\n            articleLikesService.removeByIds(toDeleteArticleLikes.stream().map(ArticleLikes::getId).collect(Collectors.toList()));\n        }\n        if (toAddArticleLikes.size() > 0)\n        {\n            articleLikesService.saveBatch(toAddArticleLikes);\n        }\n    }\n}\n```\n\n\u5176\u4e2d\uff0c\u8003\u8651\u5230**redis\u6709\u53ef\u80fd\u5b95\u673a**\uff08\u56e0\u4e3a\u8d44\u6e90\u6709\u9650\uff0credis\u6ca1\u6709\u96c6\u7fa4\uff0c\u800c\u4e14\u5c31\u7b97\u6709\u96c6\u7fa4\uff0c\u4e5f\u6709\u53ef\u80fd\u90fd\u6302\uff09\u7684\u95ee\u9898\uff0c\u672c\u65b9\u6848\u662f\u5c06redis\u4e2dset\u4e0d\u5b58\u5728\u6216\u4e3a\u7a7a\uff0c\u4f5c\u4e3a\u5224\u522b\u6807\u5fd7\u3002\u5728\u540c\u6b65\u65f6\uff0c\u5982\u679c\u53d1\u73b0redis\u7684set\u4e3a\u7a7a\uff0c\u5219mysql\u5411redis\u540c\u6b65\uff0c\u5426\u5219\u5c31\u662fredis\u5411mysql\u540c\u6b65\u3002\u8fd9\u79cd\u65b9\u6848\u7684\u597d\u5904\u662f\uff0c\u5224\u522b\u65b9\u4fbf\uff0c\u7f3a\u70b9\u5c31\u662f\uff0c\u5904\u7406\u4e0d\u4e86\u6240\u6709\u4eba\u5bf9\u6240\u6709\u6587\u7ae0\u90fd\u4e0d\u70b9\u8d5e\u7684\u60c5\u51b5\uff0c\u4f46\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\u7684\u6982\u7387\u6bd4\u8f83\u5c11\uff0c\u4e14\u5c31\u7b97\u51fa\u73b0\uff0c\u4e5f\u80fd\u5bb9\u5fcd\uff0c\u4e8e\u662f\u91c7\u53d6\u8be5\u65b9\u6848\u3002\n\n## \uff084\uff09\u603b\u7ed3\n\n\u4e0b\u9762\u662f\u66f4\u65b0\u540e\u7684\u8981\u70b9\u603b\u7ed3\uff0c\u5305\u62ec\u5904\u7406Redis\u5b95\u673a\u7684\u903b\u8f91\uff1a\n\n### \u524d\u7aef\u90e8\u5206\uff1a\n\n1. \u9875\u9762\u5f00\u53d1\uff1a\u4f7f\u7528\u7ec4\u4ef6\u5e93\u4e2d\u7684\u7ec4\u4ef6\uff0c\u5982Arco Design\u7684\u5361\u7247\u63d2\u69fd\uff0c\u5c55\u793a\u70b9\u8d5e\u6309\u94ae\u548c\u70b9\u8d5e\u6570\u91cf\u3002\n2. \u8fdb\u5165\u6587\u7ae0\u9875\u9762\u65f6\uff0c\u8c03\u7528\u4e24\u4e2a\u63a5\u53e3\uff1a\u83b7\u53d6\u6587\u7ae0\u4fe1\u606f\u63a5\u53e3\u548c\u67e5\u8be2\u7528\u6237\u662f\u5426\u70b9\u8d5e\u72b6\u6001\u63a5\u53e3\u3002\n3. \u7528\u6237\u70b9\u8d5e\u6216\u53d6\u6d88\u70b9\u8d5e\u6210\u529f\u540e\uff0c\u624b\u52a8\u66f4\u65b0\u9875\u9762\u4e0a\u7684\u70b9\u8d5e\u6570\uff0c\u5e76\u53d8\u66f4\u7528\u6237\u5f53\u524d\u9875\u9762\u7684\u70b9\u8d5e\u72b6\u6001\u3002\n\n### Redis\u90e8\u5206\uff1a\n\n1. \u4f7f\u7528Redis\u4f5c\u4e3a\u5b58\u50a8\u70b9\u8d5e\u4fe1\u606f\u7684\u540e\u7aef\uff0c\u8003\u8651\u4e86\u5feb\u901f\u8bfb\u5199\u3001\u8ba1\u6570\u5668\u3001\u7f13\u5b58\u3001\u6301\u4e45\u5316\u3001\u96c6\u5408\u548c\u6392\u5e8f\u96c6\u5408\u7b49\u7279\u6027\u3002\n2. \u4f7f\u7528\u4e24\u4e2a\u4e3b\u8981\u7684\u6570\u636e\u7ed3\u6784\uff1aset\u5b58\u50a8\u70b9\u8d5e\u7528\u6237\uff0chash\u5b58\u50a8\u70b9\u8d5e\u6570\u91cf\u3002\n\n### MySQL\u90e8\u5206\uff1a\n\n1. \u8bbe\u8ba1\u4e86\u4e24\u5f20\u8868\uff1a\u6587\u7ae0\u8868\uff08article\uff09\u548c\u6587\u7ae0\u70b9\u8d5e\u8868\uff08article_likes\uff09\u3002\n2. \u70b9\u8d5e\u4fe1\u606f\u9700\u8981\u6301\u4e45\u5316\u5230\u6570\u636e\u5e93\uff0c\u786e\u4fdd\u6570\u636e\u7684\u957f\u4e45\u4fdd\u5b58\u3002\n\n### \u540e\u7aef\u90e8\u5206\uff1a\n\n1. \u63d0\u4f9b\u4e86Redis\u4e0eMySQL\u540c\u6b65\u7684\u5b9a\u65f6\u4efb\u52a1\uff0c\u5b9a\u671f\u5c06\u6570\u636e\u4eceMySQL\u540c\u6b65\u5230Redis\u3002\n2. \u5b9e\u73b0\u4e86\u67e5\u8be2\u7528\u6237\u662f\u5426\u70b9\u8fc7\u8d5e\u7684\u63a5\u53e3\u3001\u7528\u6237\u70b9\u8d5e/\u53d6\u6d88\u70b9\u8d5e\u7684\u63a5\u53e3\u7b49\u670d\u52a1\u3002\n3. \u901a\u8fc7\u5b9a\u65f6\u4efb\u52a1\u5b9e\u73b0\u4e86\u6587\u7ae0\u70b9\u8d5e\u4fe1\u606f\u7684\u540c\u6b65\uff0c\u786e\u4fddRedis\u4e2d\u7684\u6570\u636e\u4e0eMySQL\u4e2d\u7684\u6570\u636e\u4e00\u81f4\u3002\n4. \u5904\u7406\u4e86Redis\u5b95\u673a\u7684\u60c5\u51b5\uff0c\u5728\u540c\u6b65\u4efb\u52a1\u4e2d\u8fdb\u884c\u4e86\u68c0\u67e5\uff0c\u5982\u679cRedis\u4e0d\u53ef\u7528\uff0c\u5c06Mysql\u7684\u6570\u636e\u540c\u6b65\u81f3redis\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u3002"}