{"data": "# \u300a\u8d2f\u7a7f\u8bbe\u8ba1\u6a21\u5f0f\u300b\u7b2c\u4e09\u65b9\u767b\u5f55\u5b9e\u8df5[\u9644\u524d\u540e\u7aef\u5b8c\u6574\u8fc7\u7a0b\u53ca\u6d4b\u8bd5]\n\n> \u4f5c\u8005\uff1a[\u6478\u9c7c\u6446\u70c2\u5c0f\u80fd\u624b](https://blog.dhx.icu)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 1083\n\nSpringboot\u901a\u8fc7\u9002\u914d\u5668\u6a21\u5f0f\u4e0e\u6865\u63a5\u6a21\u5f0f\u96c6\u6210\u7b2c\u4e09\u65b9\u767b\u5f55\u529f\u80fd, \u5305\u542b\u5b8c\u6574\u8fc7\u7a0b\u4ee5\u53ca\u524d\u540e\u7aef\u4ee3\u7801\u5b9e\u6218\n\n\u6700\u8fd1\u5728\u9605\u8bfb **\u6cb3\u5317\u738b\u6821\u957f** \u51fa\u7248\u7684 **\u300a\u8d2f\u7a7f\u8bbe\u8ba1\u6a21\u5f0f\u300b**\uff0c\u521a\u597d\u8d81\u7740\u8fd9\u4e2a\u673a\u4f1a\u7ed9\u4e4b\u524d\u7684\u9879\u76ee\u6269\u5c55\u7b2c\u4e09\u65b9\u767b\u5f55\n\n> **\u8d2f\u7a7f\u8bbe\u8ba1\u6a21\u5f0f** : https://book.douban.com/subject/36579987/\n>\n> \u8fd9\u4e00\u7ae0\u8282 \u4e66\u4e2d\u4e3b\u8981\u5c55\u793a\u4e86\u4ee5 **\u9002\u914d\u5668\u6a21\u5f0f** \u4ee5\u53ca **\u6865\u63a5\u6a21\u5f0f** \u8fdb\u884c\u5b9e\u8df5, \u4e3b\u8981\u96c6\u6210\u4e86 **Gitee** \u7684\u7b2c\u4e09\u65b9\u767b\u5f55\n>\n> \u5355\u4ece\u672c\u7ae0\u6765\u8bb2(\u540e\u9762\u7684\u8fd8\u6ca1\u6709\u8bfb\u5b8c) , \u9605\u8bfb\u4e0b\u6765\u8fd8\u662f\u611f\u89c9\u975e\u5e38\u53cb\u597d\u7684 , \u4f5c\u8005\u5bf9\u6bcf\u4e00\u4e2a\u8981\u70b9\u90fd\u8bb2\u89e3\u7684\u975e\u5e38\u8be6\u7ec6 , \u5e76\u4e14\u914d\u5907\u4e86\u975e\u5e38\u6709\u8da3\u7684\u5b9e\u9645\u9700\u6c42\u573a\u666f , \u975e\u5e38\u9002\u5408\u50cf\u6211\u8fd9\u6837\u4e0d\u719f\u6089\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5c0f\u767d\u53bb\u9605\u8bfb\n>\n> \u8ba1\u5212\u968f\u7740\u9605\u8bfb\u8fdb\u5ea6\u5bf9\u8fdb\u884c\u76f8\u5e94\u7684\u5b9e\u8df5 , \u540c\u65f6\u80fd\u6269\u5c55\u9879\u76ee\u5c31\u66f4\u597d\u4e86\n\n\u672c\u6587\u4e3b\u8981\u7ed3\u5408\u4f5c\u8005\u7684\u8bb2\u89e3 , \u5b8c\u6574\u5730\u5b9e\u8df5\u901a\u8fc7**\u9002\u914d\u5668\u6a21\u5f0f**, **\u6865\u63a5\u6a21\u5f0f** \u5c06\u539f\u672c\u7684\u9879\u76ee(BI Project)\u6539\u9020\u6210\u4e3a\u652f\u6301\u7b2c\u4e09\u65b9\u767b\u5f55\u3002\n\n> \u5b8c\u6574\u524d\u540e\u7aef\u4ee3\u7801\u8bf7\u53c2\u8003\n>\n> - \u540e\u7aef(Springboot): https://github.com/adorabled4/hxBI (\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\u8bf7\u67e5\u770b\u5bf9\u5e94\u7684\u5206\u652f`feature/3rdlogin-****`)\n> - \u524d\u7aef(React + Antd Pro): https://github.com/adorabled4/hxBI-frontend\n>\n> \u5177\u4f53\u7684\u4e09\u65b9\u767b\u5f55\u7684\u4ee3\u7801\u53ef\u901a\u8fc7\u6700\u8fd1\u7684\u63d0\u4ea4\u6765\u67e5\u770b (\u65e5\u671f: 2023\u5e7411\u670814\u65e5)\n\n------\n\n\u518d\u6b21\u4e4b\u524d, \u6211\u4eec\u5148\u4ece\u7528\u6237\u7684\u89d2\u5ea6 , \u6765\u770b\u770b\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6d41\u7a0b\n\n## 3rd\u767b\u5f55\u6d41\u7a0b\n\n> \u4ee5CSDN\u4e3a\u4f8b\n\n\u9996\u5148\u6211\u4eec\u70b9\u51fb \u524d\u7aef\u7684 **icon** (\u6bd4\u5982github)\n\n![](https://pic.yupi.icu/5563/202311191323027.png)\n\n\u63a5\u7740\u4f1a\u8df3\u51fa \u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\n\n![](https://pic.yupi.icu/5563/202311191315068.png)\n\n\u8fd9\u91cc\u53ef\u4ee5\u6ce8\u610f\u4e00\u4e0b\u6b64\u9875\u9762\u7684url\n\n```\nhttps://github.com/login/oauth/authorize?client_id=4bceac0b4d39cf045157&redirect_uri=https%3A%2F%2Fpassport.csdn.net%2Faccount%2Flogin%3FpcAuthType%3Dgithub%26newAuth%3Dtrue%26state%3Dtest\n```\n\n\u4e0a\u9762\u7684\u53c2\u6570\u6709 :\n\n- client_id : 4bceac0b4d39cf045157\n- redirect_uri : https%3A%2F%2Fpassport.csdn.net%2Faccount%2Flogin%3FpcAuthType%3Dgithub%26newAuth%3Dtrue%26state%3Dtest\n\n\u901a\u8fc7\u89e3\u7801\u5de5\u5177 \u6211\u4eec\u53ef\u4ee5 \u5f97\u77e5 redirect_uri \u4e3a\n\n```\nhttps://passport.csdn.net/account/login?pcAuthType=github&newAuth=true&state=test\n```\n\n\u70b9\u51fb\u6388\u6743 , \u663e\u793a\u767b\u5f55\u6210\u529f , \u7a0d\u540e\u8df3\u8f6c\n\n\u6211\u4eec\u89e3\u7801 \u6b64\u65f6\u7684 url : `https://passport.csdn.net/middle?redirectUrl=https://passport.csdn.net/sign#callback`\n\n![](https://pic.yupi.icu/5563/202311191315978.png)\n\n\u90a3\u4e48\u5728\u4e0a\u9762\u7684\u7b2c\u4e09\u65b9\u767b\u5f55\u8fc7\u7a0b\u4e2d , \u53ef\u4ee5\u6ce8\u610f\u5230\u51e0\u4e2a\u5173\u952e\u7684 \u53c2\u6570 \u4ee5\u53ca url\n\n- client_id\n- `https://passport.csdn.net/account/login?pcAuthType=github&newAuth=true&state=test`\n- `https://passport.csdn.net/middle?redirectUrl=https://passport.csdn.net/sign#callback`\n\n\u4e0a\u9762\u7684\u4e3b\u8981\u6d41\u7a0b\u5c31\u662f :\n\n1. \u7528\u6237\u70b9\u51fb ICON , \u8df3\u8f6c\u5230 GitHub\u3002\n2. GitHub \u8981\u6c42\u7528\u6237\u767b\u5f55\uff0c\u7136\u540e\u8be2\u95ee\"CSDN \u8981\u6c42\u83b7\u5f97 xx \u6743\u9650\uff0c\u4f60\u662f\u5426\u540c\u610f\uff1f\"\n3. \u7528\u6237\u540c\u610f\uff0cGitHub \u5c31\u4f1a\u91cd\u5b9a\u5411\u56de CSDN \uff0c\u540c\u65f6\u53d1\u56de\u4e00\u4e2a\u6388\u6743\u7801\u3002\n4. CSDN \u4f7f\u7528\u6388\u6743\u7801\uff0c\u5411 GitHub \u8bf7\u6c42\u4ee4\u724c\u3002\n5. GitHub \u8fd4\u56de\u4ee4\u724c.\n6. CSDN \u4f7f\u7528\u4ee4\u724c\uff0c\u5411 GitHub \u8bf7\u6c42\u7528\u6237\u6570\u636e\u3002\n\n\u5b9e\u9645\u4e0a 4 5 6 \u6b65\u9aa4 , \u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u90fd\u662f\u65e0\u611f\u7684 , \u8fd9\u4e5f\u662f\u6211\u4eec\u5f85\u4f1a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u3002\n\n------\n\n\u6ce8\u610f , \u5728\u5f00\u53d1\u67d0\u4e2a\u65b0\u7279\u6027\u4e4b\u524d , \u9996\u5148\u4ecedev\u7b7e\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u652f , \u8fd9\u91cc\u5206\u522b\u5b9a\u4e49\u4e3a\n\n- `feature/3rdLogin-adapter`\n- `feature/3rdLogin-bridge`\n\n![](https://pic.yupi.icu/5563/202311191315935.png)\n\n## \u9002\u914d\u5668\u6a21\u5f0f\n\n### \u4ecb\u7ecd\n\n\u5c06\u4e00\u4e2a\u63a5\u53e3\u8f6c\u6362\u4e3a\u5ba2\u6237\u7aef\u6240\u671f\u5f85\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u4f7f\u4e24\u4e2a\u63a5\u53e3\u4e0d\u517c\u5bb9\u7684\u7c7b\u53ef\u4ee5\u5728\u4e00\u8d77\u5de5\u4f5c\n\n\u9002\u914d\u5668\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u529f\u80fd\u7684\u6269\u5c55 , \u540c\u65f6\u9700\u8981\u9002\u914d\u4e4b\u524d\u7684\u529f\u80fd\n\n\u9002\u914d\u5668\u6a21\u5f0f\u8fd8\u6709\u4e2a\u522b\u540d\u53eb\uff1a**Wrapper**\uff08\u5305\u88c5\u5668\uff09\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u5c06\u76ee\u6807\u7c7b\u7528\u4e00\u4e2a\u65b0 \u7c7b\u5305\u88c5\u4e00\u4e0b\uff0c\u76f8\u5f53\u4e8e\u5728\u5ba2\u6237\u7aef\u4e0e\u76ee\u6807\u7c7b\u76f4\u63a5\u52a0\u4e86\u4e00\u5c42\u3002\n\n> IT\u4e16\u754c\u6709\u53e5\u4fd7\u8bed\uff1a**\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u662f\u52a0\u4e00\u5c42\u4e0d\u80fd\u89e3\u51b3\u7684**\n\n**\u539f\u672c\u7684 \u7528\u6237\u767b\u5f55 \u5b9e\u73b0\u65b9\u5f0f\u662f \u90ae\u7bb1\u767b\u5f55 \u4ee5\u53ca \u90ae\u7bb1\u9a8c\u8bc1\u7801\u767b\u5f55**\n\n> \u95ee\u5c31\u662f\u77ed\u4fe1\u670d\u52a1\u4e70\u4e0d\u8d77\u53ea\u80fd\u7528\u514d\u8d39\u7684\u90ae\u7bb1 2333\n\n### Gitee\n\n\u4e00\u822c\u6765\u8bb2 , \u6211\u4eec\u5728\u5b66\u4e60\u4e00\u95e8\u4e0d\u719f\u6089 , \u6ca1\u6709\u7ecf\u9a8c\u7684 \u6280\u672f\u7684\u65f6\u5019 , \u6700\u5feb\u7684\u5b66\u4e60\u65b9\u6cd5\u5c31\u662f \u5b98\u65b9\u6587\u6863 : https://gitee.com/api/v5/oauth_doc#/list-item-1\n\n> \u5b9e\u9645\u4e0a\u627e\u4e86\u5f88\u591ablog , \u4e00\u65b9\u9762\u662f\u65f6\u95f4\u95ee\u9898\u5f88\u591a\u5e94\u7528\u7684\u793a\u4f8b\u90fd**\u8fc7\u4e8e\u4e45\u8fdc** \u6216\u8005\u662f **\u4ee3\u7801\u4e0d\u591f\u4f18\u96c5** ,\u751a\u81f3\u8fd8\u6709 \u7ed9\u51fa **\u6dd8\u5b9d\u94fe\u63a5** \u70b9\u51fb\u8d2d\u4e70\u76842333\n\n![](https://pic.yupi.icu/5563/202311191315038.png)\n\n\u9996\u5148\u5728 gitee \u521b\u5efa\u7b2c\u4e09\u65b9\u5e94\u7528 , https://gitee.com/oauth/applications , \u63a5\u7740\u83b7\u53d6\u5230 \u6211\u4eec\u7684 clientId \u4ee5\u53ca clientSecret\n\n#### \u914d\u7f6e\u4fe1\u606f\n\n```properties\ngitee.clientId = xxxxxxxxxxxxxxxxxxxxxxxxxxxxcb49e54\ngitee.clientSecret = xxxxxxxxxxxxxxxxxxxxb0d396bbc614\ngitee.state= GITEE\ngitee.redirectUri = http://localhost:6848/gitee/callback\ngitee.token.url= https://gitee.com/oauth/token?grant_type=authorization_code&client_id=${gitee.clientId}&redirect_uri=${gitee.redirectUri}&client_secret=${gitee.clientSecret}&code=\ngitee.user.url = https://gitee.com/api/v5/user?access_token=\ngitee.user.prefix=${gitee.state}\n```\n\n> \u66f4\u591a API\u5f00\u653e\u5e73\u53f0\u4fe1\u606f\u8bf7 \u67e5\u770b https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoStargazers?ex=no\n\n#### httpUtil\n\n\u8fd9\u91cc\u7531\u4e8e\u6388\u6743\u7528\u6237\u7684\u4fe1\u606f\u5f88\u591a , \u5e76\u4e14\u4e3a\u4e86\u65b9\u4fbf\u4e4b\u540e \u6269\u5c55\u5176\u4ed6\u7684\u767b\u5f55\u65b9\u5f0f \u4e14 \u907f\u514d \u7c7b\u81a8\u80c0\u7684\u95ee\u9898 , \u901a\u8fc7 HttpUtil\u4ee5\u53caJSONObject\u7684\u65b9\u5f0f \u6765 \u8bbf\u95ee\u5177\u4f53\u7684\u6570\u636e\n\nhttps://gitee.com/api/v5/swagger#/getV5User\n\n\u6bd4\u5982gitee\u83b7\u53d6\u6388\u6743\u7528\u6237\u7684\u4fe1\u606f , \u5b57\u6bb5\u662f\u975e\u5e38\u591a\u7684, \u5982\u679c\u4e00\u4e2a\u4e00\u4e2a\u624b\u52a8\u521b\u5efa\u7c7b\u5c31\u975e\u5e38\u7684\u9ebb\u70e6\n\n```json\n{\n    \"avatar_url\": string\n    \"bio\": string\n    \"blog\": string\n    \"created_at\": string\n    \"email\": string\n    \"events_url\": string\n    \"followers\": string\n    \"followers_url\": string\n    \"following\": string\n    \"following_url\": string\n    \"gists_url\": string\n    \"html_url\": string\n    \"id\": integer\n    \"login\": string\n    \"member_role\": string\n    \"name\": string\n    \"organizations_url\": string\n    \"public_gists\": string\n    \"public_repos\": string\n    \"received_events_url\": string\n    \"remark\": string \n    \"repos_url\": string\n    \"stared\": string\n    \"starred_url\": string\n    \"subscriptions_url\": string\n    \"type\": string\n    \"updated_at\": string\n    \"url\": string\n    \"watched\": string\n    \"weibo\": string\n}\n```\n\n\u90a3\u4e48\u5b9a\u4e49httpUtil\u5982\u4e0b\n\n```Java\nimport cn.hutool.json.JSONObject;\nimport cn.hutool.json.JSONUtil;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.methods.HttpRequestBase;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport org.apache.http.util.EntityUtils;\nimport org.springframework.http.HttpMethod;\n\nimport java.io.IOException;\n\npublic class HttpUtil {\n\n    public static final JSONObject execute(String url, HttpMethod method) {\n        HttpRequestBase http = null;\n        CloseableHttpClient client = null;\n        try {\n            client = HttpClients.createDefault();\n            if (method.equals(HttpMethod.GET)) {\n                http = new HttpGet(url);\n            } else {\n                http = new HttpPost(url);\n            }\n            HttpEntity entity = client.execute(http).getEntity();\n            return JSONUtil.parseObj(EntityUtils.toString(entity));\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } finally {\n            http.releaseConnection();\n        }\n    }\n}\n```\n\n#### \u9002\u914d\u5668\u5b9e\u73b0\n\n> **\u8fd9\u91cc\u6211\u4eec\u7684\u9002\u914d\u5668 \u7c7b \u7ee7\u627f\u4e86 \u539f\u672c\u7684userService , \u56e0\u6b64\u5728\u542f\u52a8springboot\u7684\u65f6\u5019\u9700\u8981\u628a\u539f\u672c userServiceImpl \u4e0a\u9762\u7684@service \u6ce8\u91ca\u6389**\n\n\u8fd9\u91cc\u5c31\u662f\u6211\u4eec\u7684\u6838\u5fc3\u5185\u5bb9\u4e86 : \u5b9e\u73b0\u5177\u4f53\u7684\u767b\u5f55\u903b\u8f91\n\n\u7ecf\u8fc7\u4e86\u524d\u9762\u7684\u914d\u7f6e, \u8fd9\u91cc\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u4e5f\u5341\u5206\u7b80\u5355\n\n1. \u56de\u8c03\u63a5\u53e3\u63a5\u6536\u5230 (state , code)\n2. \u540e\u7aef\u901a\u8fc7code \u8bbf\u95ee/oauth/token \u83b7\u53d6access_token\n3. \u901a\u8fc7 access_token\u8bbf\u95ee /api/v5/user \u83b7\u53d6\u6388\u6743\u7528\u6237\u4fe1\u606f\n4. \u6267\u884c\u6ce8\u518c/\u767b\u5f55\u903b\u8f91\n\n\u8fd9\u91cc\u7531\u4e8e\u6211\u539f\u672c\u7684\u540e\u7aef \u662f \u901a\u8fc7 \u90ae\u7bb1\u6ce8\u518c , \u767b\u5f55\u7684, \u56e0\u6b64 \u83b7\u53d6\u7528\u6237\u7684email\u7136\u540e\u6267\u884c\u539f\u672c\u7684quickLogin \u65b9\u6cd5\n\n> \u539f\u4e66\u4e2d\u662f\u5b9a\u4e49\u4e86 \u7528\u6237\u7684password\u4e3a\u7528\u6237\u540d, \u8fd9\u91cc\u8003\u8651\u5230\u53ef\u80fd\u7528\u6237\u539f\u672c\u5df2\u7ecf\u6ce8\u518c\u4e86 \u8d26\u6237 (\u5e76\u4e14\u4fee\u6539\u4e86\u5bc6\u7801), \u5982\u679c\u8fd8\u4f7f\u7528 \u9ed8\u8ba4\u7684 **\u7528\u6237\u540d\u4f5c\u4e3a\u5bc6\u7801\u767b\u5f55\u53ef\u80fd\u4f1a\u51fa\u73b0\u767b\u5f55\u5931\u8d25\u7684\u60c5\u51b5**\n\n\u4e3b\u8981\u4ee3\u7801\u5982\u4e0b\n\n```java\nimport cn.hutool.json.JSONObject;\nimport com.dhx.bi.common.BaseResponse;\nimport com.dhx.bi.common.ErrorCode;\nimport com.dhx.bi.model.DO.UserEntity;\nimport com.dhx.bi.service.Login3rdTarget;\nimport com.dhx.bi.utils.HttpUtil;\nimport com.dhx.bi.utils.ResultUtil;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.stereotype.Component;\n\n@Slf4j\n@Component\npublic class Login3rdAdapter extends UserServiceImpl implements Login3rdTarget {\n\n    @Value(\"${gitee.state}\")\n    private String giteeState;\n    @Value(\"${gitee.token.url}\")\n    private String giteeTokenUrl;\n    @Value(\"${gitee.user.url}\")\n    private String giteeUserUrl;\n\n    @Override\n    public BaseResponse loginByGitee(String code, String state) {\n        if (!giteeState.equals(state)) {\n            throw new UnsupportedOperationException(\"state\u4e0d\u5339\u914d\");\n        }\n        String tokenUrl = giteeTokenUrl.concat(code);\n        JSONObject accessToken = HttpUtil.execute(tokenUrl, HttpMethod.GET);\n        // \u8bf7\u6c42\u7528\u6237\u4fe1\u606f\n        String userUrl = giteeUserUrl.concat((String) accessToken.get(\"access_token\"));\n        JSONObject userInfo = HttpUtil.execute(userUrl, HttpMethod.GET);\n        String email = (String) userInfo.get(\"email\");\n        String password = email;\n        return autoRegister3rdAndLogin(email, password);\n    }\n\n    private BaseResponse autoRegister3rdAndLogin(String email) {\n        // \u90ae\u7bb1\u5feb\u901f\u767b\u5f55(\u65b9\u6cd5\u5185\u5df2\u7ecf\u5305\u542b\u4e86\u6ce8\u518c\u7684\u903b\u8f91)\n        return super.quickLogin(email);\n    }\n}\n```\n\nquickLogin\u65b9\u6cd5\u5982\u4e0b:\n\n```java\npublic BaseResponse quickLogin(String email) {\n    //1. \u83b7\u53d6\u7528\u6237\n    List<UserEntity> users = list(new QueryWrapper<UserEntity>().eq(\"email\", email));\n    UserEntity user;\n    //2. \u6821\u9a8c\n    if (users == null || users.size() == 0) {\n        user = quickRegister(email);\n    } else {\n        user = users.get(0);\n    }\n    //3. \u83b7\u53d6jwt\u7684token\u5e76\u5c06token\u5199\u5165Redis\n    String token = jwtTokensService.generateAccessToken(user);\n    String refreshToken = jwtTokensService.generateRefreshToken(user);\n    JwtToken jwtToken = new JwtToken(token, refreshToken);\n    jwtTokensService.save2Redis(jwtToken, user);\n    return ResultUtil.success(token);\n}\n```\n\n#### \u6d4b\u8bd5\n\n\u9996\u5148\u8bbf\u95ee `https://gitee.com/oauth/authorize?client_id={client_id}&redirect_uri={redirect_uri}&response_type=code`\n\n> \u6ce8\u610f\u6570\u636e\u9700\u8981\u4e0e\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u5bf9\u5e94\n\n\u70b9\u51fb\u540c\u610f\u6388\u6743\n\n![](https://pic.yupi.icu/5563/202311191325571.png)\n\n\u63a5\u7740 \u6211\u4eec\u7684\u540e\u7aef\u56de\u8c03\u63a5\u53e3\u4f1a\u6536\u5230\u8bf7\u6c42\n\n![](https://pic.yupi.icu/5563/202311191315739.png)\n\n\u5176\u4e2d accessToken \u8fd4\u56de\u503c\u4e3a\n\n```json\n{\"access_token\":\"84ece2eaa687165acbe5ecc5e6c7a482\",\"token_type\":\"bearer\",\"expires_in\":86400,\"refresh_token\":\"13080c0b4ce8e93e13cd746549bdfbbad49b1f09a79c4eda31bf374a51f06167\",\"scope\":\"user_info emails\",\"created_at\":1699934719}\n```\n\nuserInfo\u7684\u8fd4\u56de\u503c\u4e3a\n\n```json\n{\n    \"id\": 10665327,\n    \"login\": \"adorabled4\",\n    \"name\": \"adorabled4\",\n    \"avatar_url\": \"https://gitee.com/assets/no_portrait.png\",\n    \"url\": \"https://gitee.com/api/v5/users/adorabled4\",\n    \"html_url\": \"https://gitee.com/adorabled4\",\n    \"remark\": \"\",\n    \"followers_url\": \"https://gitee.com/api/v5/users/adorabled4/followers\",\n    \"following_url\": \"https://gitee.com/api/v5/users/adorabled4/following_url{/other_user}\",\n    \"gists_url\": \"https://gitee.com/api/v5/users/adorabled4/gists{/gist_id}\",\n    \"starred_url\": \"https://gitee.com/api/v5/users/adorabled4/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://gitee.com/api/v5/users/adorabled4/subscriptions\",\n    \"organizations_url\": \"https://gitee.com/api/v5/users/adorabled4/orgs\",\n    \"repos_url\": \"https://gitee.com/api/v5/users/adorabled4/repos\",\n    \"events_url\": \"https://gitee.com/api/v5/users/adorabled4/events{/privacy}\",\n    \"received_events_url\": \"https://gitee.com/api/v5/users/adorabled4/received_events\",\n    \"type\": \"User\",\n    \"blog\": null,\n    \"weibo\": null,\n    \"bio\": null,\n    \"public_repos\": 1,\n    \"public_gists\": 0,\n    \"followers\": 0,\n    \"following\": 1,\n    \"stared\": 3,\n    \"watched\": 3,\n    \"created_at\": \"2022-03-27T18:50:13+08:00\",\n    \"updated_at\": \"2023-11-14T10:26:00+08:00\",\n    \"email\": \"dhx2648466390@163.com\"\n}\n```\n\n\u5230\u8fd9\u91cc\u6211\u4eec\u7684\u6d4b\u8bd5\u9875\u57fa\u672c\u7ed3\u675f\u4e86\n\n\u6700\u540e\u7684 \u7ed3\u6784\u5982\u4e0b\n\n![](https://pic.yupi.icu/5563/202311191315691.png)\n\n### Github\n\n\u6709\u4e86\u524d\u9762\u7684\u57fa\u7840 , \u6211\u4eec\u5728\u4e4b\u540e\u6269\u5c55\u522b\u7684\u5e73\u53f0\u767b\u5f55\u7684\u65f6\u5019\u53ea\u9700\u8981\u6dfb\u52a0\u6838\u5fc3\u7684\u4ee3\u7801\u548c\u914d\u7f6e\u5373\u53ef\u3002\n\n\u9996\u5148\u5728 github \u521b\u5efa \u81ea\u5df1\u7684\u7b2c\u4e09\u65b9\u5e94\u7528\n\n\u8be6\u60c5\u53c2\u8003 : https://docs.github.com/zh/apps/oauth-apps/maintaining-oauth-apps/modifying-an-oauth-app\n\n![](https://pic.yupi.icu/5563/202311191315865.png)\n\n\u6388\u6743\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u7684 web \u5e94\u7528\u7a0b\u5e8f\u6d41\u7a0b\u662f\uff1a\n\n1. \u7528\u6237\u88ab\u91cd\u5b9a\u5411\uff0c\u4ee5\u8bf7\u6c42\u4ed6\u4eec\u7684 GitHub \u8eab\u4efd\n2. \u7528\u6237\u88ab GitHub \u91cd\u5b9a\u5411\u56de\u60a8\u7684\u7ad9\u70b9\n3. \u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7528\u6237\u7684\u8bbf\u95ee\u4ee4\u724c\u8bbf\u95ee API\n\n\u8be6\u7ec6\u7684\u914d\u7f6e\u4fe1\u606f\u8bf7\u53c2\u8003 \u5b98\u65b9\u6587\u6863 : https://docs.github.com/zh/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps\n\n\u8fd9\u91cc\u4e3b\u8981\u7ed9\u51fa \u57fa\u672c\u7684\u4ee3\u7801 \u4ee5\u53ca \u914d\u7f6e\u65b9\u5f0f\n\n> \u603b\u4f53\u4e0a\u4e0eGitee\u7684\u8bf7\u6c42\u65b9\u5f0f\u4e0e\u53c2\u6570\u662f\u975e\u5e38\u76f8\u4f3c\u7684, \u4e0d\u9700\u8981\u505a\u5f88\u5927\u7684\u6539\u52a8\n\n#### \u914d\u7f6e\u4fe1\u606f\n\n```properties\ngithub.clientId = Iv1.89f4b0b049ff2ecf\ngithub.clientSecret = e98c2d6080dc6c3a8f09198c2dd2866549cafc0a\ngithub.state= GITHUB\ngithub.redirectUri = http://localhost:6848/api/login3rd/github/callback\ngithub.token.url= https://github.com/oauth/token?grant_type=authorization_code&client_id=${gitee.clientId}&redirect_uri=${gitee.redirectUri}&client_secret=${gitee.clientSecret}&code=\ngithub.user.url = https://github.com/api/v5/user\ngithub.user.prefix=${github.state}\n```\n\n#### \u6838\u5fc3\u4ee3\u7801\n\n> \u6ce8\u610fgithub\u5728\u8bbf\u95ee \u6388\u6743\u7528\u6237\u7684 \u4fe1\u606f\u7684\u65f6\u5019\u9700\u8981\u628a access_token\u8bbe\u7f6e\u5230 **\u8bf7\u6c42\u5934**\u4e2d\n>\n> ```sql\n> Authorization: Bearer OAUTH-TOKEN\n> GET https://api.github.com/user\n> ```\n\n\u8fd9\u91cc\u4f7f\u7528\u4e86 Hutool\u7684HttpUtil\n\n```java\n@Override\npublic BaseResponse loginByGithub(String state,String code) {\n    if (!githubState.equals(state)) {\n        throw new UnsupportedOperationException(\"state\u4e0d\u5339\u914d\");\n    }\n    String tokenUrl = githubTokenUrl.concat(code);\n    String result = HttpUtil.post(tokenUrl, \"\");\n    Map<String, String> resultMap = splitGithubAccessToken(result);\n    String accessToken = resultMap.get(\"access_token\");\n    log.info(\"github \u8fd4\u56de\u503c:{}\", result);\n    // \u8bf7\u6c42\u7528\u6237\u4fe1\u606f\n    String userUrl = githubUserUrl.concat(accessToken);\n    JSONObject userInfo = JSONUtil.parseObj(HttpUtil.post(userUrl, \"\"));\n    log.info(\"github \u8fd4\u56deuserInfo:{}\", userInfo);\n    String email = (String) userInfo.get(\"email\");\n    return autoRegister3rdAndLogin(email);\n}\n\n// \u89e3\u6790accessToken\nprivate Map<String,String> splitGithubAccessToken(String data){\n    Map<String, String> result = new HashMap<>();\n    Arrays.stream(data.split(\"&\"))\n        .forEach(entry -> {\n            String[] keyValue = entry.split(\"=\");\n            if (keyValue.length == 2) {\n                result.put(keyValue[0], keyValue[1]);\n            }\n        });\n    System.out.println(result);\n    return result;\n}\n```\n\n#### \u6d4b\u8bd5\n\n\u8bbf\u95ee `https://github.com/login/oauth/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=user&state=GITHUB`\n\n> \u5b9e\u9645\u7684\u9879\u76ee\u4e2d\u5728\u524d\u7aef \u7684\u9875\u9762\u8bbe\u7f6e\u4e00\u4e2aICON , \u7136\u540e \u7528\u6237\u70b9\u51fb\u4e4b\u540e\u8df3\u8f6c\u5230\u8fd9\u4e2a\u94fe\u63a5\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002\n\n![](https://pic.yupi.icu/5563/202311191315830.png)\n\n\u83b7\u53d6\u5230\u7684access_token\u4fe1\u606f\n\n```dts\naccess_token=ghu_vBmfKxThWOrPXPe0eNxThaLwRMcjrb2OuveW&expires_in=28800&refresh_token=ghr_WIfoPk2zd0XQ1sdb0Svd0uTJ8CeGwLt3qvx57dYKufdkBRHcBvINKdVY8412byEduUrotH1KpFV8&refresh_token_expires_in=15724800&scope=&token_type=bearer\n```\n\n\u83b7\u53d6\u5230\u7684\u7528\u6237\u4fe1\u606f\n\n```json\n{\n    \"login\": \"adorabled4\",\n    \"id\": 96526641,\n    \"node_id\": \"U_kgDOBcDhMQ\",\n    \"avatar_url\": \"https://avatars.githubusercontent.com/u/96526641?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/adorabled4\",\n    \"html_url\": \"https://github.com/adorabled4\",\n    \"followers_url\": \"https://api.github.com/users/adorabled4/followers\",\n    \"following_url\": \"https://api.github.com/users/adorabled4/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/adorabled4/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/adorabled4/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/adorabled4/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/adorabled4/orgs\",\n    \"repos_url\": \"https://api.github.com/users/adorabled4/repos\",\n    \"events_url\": \"https://api.github.com/users/adorabled4/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/adorabled4/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false,\n    \"name\": \"adorabled4\",\n    \"company\": null,\n    \"blog\": \"https://blog.dhx.icu/\",\n    \"location\": \"CN\",\n    \"email\": \"dhx2648466390@163.com\",\n    \"hireable\": null,\n    \"bio\": null,\n    \"twitter_username\": null,\n    \"public_repos\": 23,\n    \"public_gists\": 0,\n    \"followers\": 8,\n    \"following\": 13,\n    \"created_at\": \"2021-12-22T11:07:54Z\",\n    \"updated_at\": \"2023-10-18T08:20:09Z\"\n}\n```\n\n## \u6865\u63a5\u6a21\u5f0f\n\n### \u4ecb\u7ecd\n\n\u6865\u63a5\u6a21\u5f0f\u662f\u5c06**\u62bd\u8c61\u90e8\u5206\u4e0e\u5b83\u7684\u5b9e\u73b0\u90e8\u5206\u5206\u79bb**\uff0c\u4f7f\u5b83\u4eec\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u53d8\u5316\u3002\u5b83\u662f\u4e00\u79cd\u5bf9\u8c61\u7ed3\u6784\u578b\u6a21\u5f0f\uff0c\u53c8\u79f0\u4e3a\u67c4\u4f53(Handle and Body)\u6a21\u5f0f\u6216\u63a5\u53e3(Interfce)\u6a21\u5f0f\u3002\n\n\u6865\u63a5\u6a21\u5f0fUML\u7c7b\u56fe\u5982\u4e0b\n\n![](https://pic.yupi.icu/5563/202311191315441.webp)\n\n\u7531\u4e8e\u6838\u5fc3\u7684\u4ee3\u7801\u5df2\u7ecf\u5728\u524d\u9762\u7ed9\u51fa , \u8fd9\u91cc\u4e3b\u8981\u5728\u4e8e\u91cd\u65b0\u7ec4\u7ec7\u4ee3\u7801\u7684\u7ed3\u6784\n\n\u6700\u7ec8\u7684\u4ee3\u7801\u7684\u7ed3\u6784\u662f\u8fd9\u6837\u7684\n\n![](https://pic.yupi.icu/5563/202311191315531.png)\n\n\u5176\u4e2d `RegisterLoginFuncInterface` \u4e3b\u8981\u5b9a\u4e49 \u7b2c\u4e09\u65b9\u767b\u5f55\u9700\u8981\u7684function , \u4e5f\u5c31\u662f\"**\u9700\u8981\u4f7f\u7528\u5de5\u5177\u53bb\u505a\u4ec0\u4e48**\" , \u5bf9\u5e94 UML\u56fe\u4e2d\u7684**Implementor**\n\n\u800c `AbstractRegisterLoginComponent` \u5219\u662f\"**\u89c4\u5b9a\u4f7f\u7528\u54ea\u79cd\u7c7b\u578b\u7684\u5de5\u5177**\" , `RegisterLoginComponent` \u4f5c\u4e3a\u5b9e\u73b0 , \u5219\u662f\u6307\u5b9a\"**\u4f7f\u7528\u5de5\u5177\u600e\u4e48\u505a**\"\n\n> \u8fd9\u91cc\u7684\u5de5\u5177\u4e5f\u5c31\u662f `LoginDefault` , `LoginByGitee` , `LoginByGithub`\n\n### \u5173\u4e8eAbstractRegisterLoginFunc\n\n\u6211\u4eec\u7684\u7b2c\u4e09\u65b9\u767b\u5f55 Implementor \u53ea\u9700\u8981\u5b9e\u73b0 `login3rd` \u7684\u903b\u8f91 , \u4f46\u662f\u901a\u7528\u7684 \u6ce8\u518c\u767b\u5f55\u63a5\u53e3\u4e2d \u89c4\u5b9a\u4e86\u9700\u8981\u5b9e\u73b0\u5176\u4ed6\u7684\u65b9\u6cd5 , \u56e0\u6b64\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a `AbstractRegisterLoginFunc` \u5b9e\u73b0 \u7b2c\u4e09\u65b9impl \u4e0d\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5 , \u4f46\u662f\u5bf9\u4e8e\u65b9\u6cd5\u7684\u4e3b\u4f53, \u5e76\u4e0d\u9700\u8981\u5b9e\u73b0\u4ec0\u4e48\u903b\u8f91 , \u53ea\u9700\u8981\u629b\u51fa `UnsupportedOperationException`\u5f02\u5e38\u5373\u53ef \u3002\n\n> \u8bd5\u60f3\u5047\u5982\u6211\u4eec\u4f7f\u7528LoginByGitee , \u662f\u4e0d\u56de\u53bb\u8c03\u7528 \u9ed8\u8ba4\u767b\u5f55\u7684 login\u65b9\u6cd5\u7684, \u8fd9\u91cc\u7684\u5b9e\u73b0, \u53ef\u4ee5\u5229\u597d\u4e4b\u540e\u66f4\u591a\u5e73\u53f0\u7684\u7b2c\u4e09\u65b9\u767b\u5f55\u7684implementor , \u540c\u65f6\u51cf\u5c11\u91cd\u590d\u7684\u4ee3\u7801\u3002\n\n```java\n@Override\npublic BaseResponse login(String email, String password) {\n    throw new UnsupportedOperationException();\n}\n```\n\n\u7c7b\u4f3c\u7684\u8bbe\u8ba1\u6bd4\u5982JDK\u6e90\u7801\u4e2d ArrayList\n\n```java\npublic class ArrayList<E> extends AbstractList<E>\n        implements List<E>, RandomAccess, Cloneable, java.io.Serializable{}\n```\n\n\u5176\u4e2d\u7684 `AbstractList` \u4e2d\u5b9e\u73b0\u4e86 `add`\u65b9\u6cd5 , \u4f46\u662f\u53e6\u4e00\u4e2a\u7c7b `EmptyList` , \u7ee7\u627f\u4e86`AbstractList`\n\n```java\n private static class EmptyList<E>\n        extends AbstractList<E>\n        implements RandomAccess, Serializable { } \n```\n\n\u4f46\u662f\u6211\u4eec\u77e5\u9053 `EmptyList` \u662f\u4e0d\u80fd\u6dfb\u52a0\u4efb\u4f55\u5143\u7d20\u7684, \u8fd9\u91cc\u5b9e\u9645\u4e0a`AbstractList`\u7684add\u65b9\u6cd5\u4f1a\u629b\u51fa `UnsupportedOperationException` , `AbstractRegisterLoginFunc`\u7684\u8bbe\u8ba1\u540c\u7406\n\n```java\npublic void add(int index, E element) {\n    throw new UnsupportedOperationException();\n}\n```\n\n### \u6865\u63a5\u6a21\u5f0f\u5b9e\u73b0\n\n![s](https://pic.yupi.icu/5563/202311191315201.png)\n\n\u6838\u5fc3\u5b9e\u73b0\u5bf9\u5e94\u6865\u63a5\u6a21\u5f0f\u7684UML\u7c7b\u56fe , \u6838\u5fc3\u7684\u4e09\u65b9\u767b\u5f55\u4ee3\u7801\u7167\u642c\u4e4b\u524d\u7ed9\u51fa\u7684\u5373\u53ef\u3002\n\n\u7b80\u5355\u7684\u5bf9\u6bd4\u9002\u914d\u5668\u6a21\u5f0f \uff0c \u53ef\u89c1\u6865\u63a5\u6a21\u5f0f\u76f4\u63a5\u591a\u51fa\u4e86\u516d\u4e2a\u7c7b\uff08\u52a0\u4e0a\u540e\u9762\u7684\u5de5\u5382\u6a21\u5f0f\u5c31\u662f\u4e03\u4e2a\uff09\uff0c\uff0c\uff0c\n\n\u597d\u5904\u5c31\u662f **\u6ee1\u8db3\u5355\u4e00\u804c\u8d23\u539f\u5219 , \u5404\u4e2a\u7c7b\u7684\u529f\u80fd\u66f4\u52a0\u72ec\u7acb, \u4e4b\u540e\u6269\u5c55\u548c\u4fee\u6539\u66f4\u52a0\u65b9\u4fbf**\n\n> \u5177\u4f53\u7684\u4ee3\u7801\u53c2\u8003 \u7f6e\u9876\u7684 Github\u4ed3\u5e93\u94fe\u63a5\u4e2d `feature/3rdlogin-bridge`\u5206\u652f\u5373\u53ef (\u4e2a\u4eba\u8fd8\u662f\u6bd4\u8f83\u503e\u5411\u4e8e\u9002\u914d\u5668\u6a21\u5f0f)\n\n### \u5982\u4f55\u4f7f\u7528\n\n\u5bf9\u4e8e\u767b\u5f55\u7684\u4e3b\u8981\u903b\u8f91 , \u90fd\u5199\u5728 implementor\u4e2d, \u8fd9\u91cc\u6211\u4eec\u628aimplementor\u6ce8\u5165\u5230Spring\u4e2d\n\n\u5bf9\u4e8e\u4e0d\u540c\u7684\u63a7\u5236\u5c42\u63a5\u53e3 , \u6267\u884c\u7684\u4e09\u65b9\u5e73\u53f0\u662f\u53ef\u4ee5\u786e\u5b9a\u7684 , \u6bd4\u5982\n\n```java\n@GetMapping(\"/gitee/callback\")\n```\n\n\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u5e94\u8be5\u8c03\u7528`Gitee`\u5bf9\u5e94\u7684 **implementor** , \u8fd9\u91cc\u901a\u8fc7\u9759\u6001\u7684\u5de5\u5382\u6765\u83b7\u53d6\u6307\u5b9a\u7684Bean\u5373\u53ef\n\n> Spring\u7684Bean\u5bb9\u5668\u4e2d\u53ea\u6709 implementor , `RegisterLoginComponent` \u9700\u8981\u6211\u4eec\u624b\u52a8\u53bb\u6ce8\u5165 , \u6ce8\u610f\u8fd9\u91cc\u5355\u4f8b\u6a21\u5f0f\u53cc\u68c0\u9501\u7684\u8bbe\u8ba1\u3002\n\n```java\npublic class RegisterLoginComponentFactory {\n    // \u7f13\u5b58 AbstractRegisterLoginComponent \u6839\u636e\u4e0d\u540c\u7684\u767b\u5f55\u65b9\u5f0f\u8fdb\u884c\u7f13\u5b58\n    public static Map<String, AbstractRegisterLoginComponent> componentMap = new ConcurrentHashMap<>();\n   \t// \u5728\u9879\u76ee\u521d\u59cb\u5316\u7684\u65f6\u5019\u5df2\u7ecf\u901a\u8fc7@PostConstruct\u6ce8\u5165\n    public static Map<String, RegisterLoginFuncInterface> funcMap = new ConcurrentHashMap<>();\n\n    // \u6839\u636e\u4e0d\u540c\u7684\u767b\u5f55\u7c7b\u578b\uff0c\u83b7\u53d6 AbstractRegisterLoginComponent\n    public static AbstractRegisterLoginComponent getComponent(String type) {\n        //\u5982\u679c\u5b58\u5728\uff0c\u76f4\u63a5\u8fd4\u56de\n        AbstractRegisterLoginComponent component = componentMap.get(type);\n        if(component == null) {\n            //\u5e76\u53d1\u60c5\u51b5\u4e0b\uff0c\u6c72\u53d6\u53cc\u91cd\u68c0\u67e5\u9501\u673a\u5236\u7684\u8bbe\u8ba1\uff0c\u5982\u679ccomponentMap\u4e2d\u6ca1\u6709\uff0c\u5219\u8fdb\u884c\u521b\u5efa\n            synchronized (componentMap) {\n                component = componentMap.get(type);\n                if(component == null) {\n                    //\u6839\u636e\u4e0d\u540c\u7c7b\u578b\u7684\u5b9e\u73b0\u7c7b\uff08\u53f3\u8def\uff09\uff0c\u521b\u5efaRegisterLoginComponent\u5bf9\u8c61\uff0c\n                    //\u5e76put\u5230map\u4e2d\u7f13\u5b58\u8d77\u6765\uff0c\u4ee5\u5907\u4e0b\u6b21\u4f7f\u7528\u3002\n                    component = new RegisterLoginComponent(funcMap.get(type));\n                    componentMap.put(type, component);\n                }\n            }\n        }\n        return component;\n    }\n}\n```\n\n\u5bf9\u4e8e\u63a7\u5236\u5c42\u63a5\u53e3 , \u7531\u4e8e\u4e0d\u540c\u7684\u4e09\u65b9\u767b\u5f55\u5e73\u53f0\u7684\u53c2\u6570\u662f\u4e0d\u4e00\u81f4\u7684 , \u56e0\u6b64\u9700\u8981\u66f4\u6539\u53c2\u6570\u4e3a`HttpServletRequest`\n\n```java\n@RestController\n@RequestMapping(value = \"/login3rd\")\n@Slf4j\npublic class LoginController {\n\n    @GetMapping(\"/gitee/callback\")\n    public BaseResponse loginByGitee(HttpServletRequest httpServletRequest) {\n        AbstractRegisterLoginComponent gitee = RegisterLoginComponentFactory.getComponent(\"GITEE\");\n        return gitee.login3rd(httpServletRequest);\n    }\n\n    @GetMapping(\"/github/callback\")\n    public BaseResponse loginByGithub(HttpServletRequest httpServletRequest) {\n        AbstractRegisterLoginComponent github = RegisterLoginComponentFactory.getComponent(\"GITHUB\");\n        return github.login3rd(httpServletRequest);\n    }\n}\n```\n\n## \u524d\u540e\u7aef\u8054\u8c03\n\n\u524d\u9762\u6211\u4eec\u8fdb\u884c\u7684\u6d4b\u8bd5\u4ee5\u53ca\u914d\u7f6e\u4ec5\u4ec5\u662f \u540e\u7aef\u5728\u64cd\u4f5c, \u70b9\u51fb\u7684\u8fc7\u7a0b\u8fd8\u9700\u8981\u6211\u4eec\u624b\u52a8\u53bb\u6a21\u62df\n\n\u4e0b\u9762\u4ee5 \u5b8c\u6574\u7684 \u524d\u540e\u7aef\u9879\u76ee\u8fdb\u884c\u8054\u8c03, \u5b9e\u73b0\u771f\u6b63\u7684 \u7b2c\u4e09\u65b9\u767b\u5f55\n\n> \u6700\u5f00\u59cb\u7684\u65f6\u5019\u6211\u4e5f\u6000\u6709\u7591\u95ee :\n>\n> Q : \u540e\u7aef\u7684\u4e3b\u8981\u4e09\u65b9\u767b\u5f55\u903b\u8f91\u662f\u901a\u8fc7\u56de\u8c03\u6d88\u606f\u6765\u8fdb\u884c\u8c03\u7528\u7684, \u6211\u9879\u76ee\u539f\u672c\u7684\u767b\u5f55\u65b9\u5f0f\u662f **\u524d\u7aef\u63a5\u6536\u540e\u7aef\u8fd4\u56de\u7684access_token\u8fdb\u884c\u767b\u5f55\u9274\u6743** , \u8fd9\u6837\u5982\u4f55\u4fdd\u8bc1\u524d\u7aef\u53ef\u4ee5\u83b7\u53d6\u5230\u7528\u6237\u767b\u5f55\u7684token\u5462?\n>\n> A :\n>\n> - \u6211\u4eec\u5728\u901a\u8fc7\u540e\u7aef\u6d4b\u8bd5\u7684\u65f6\u5019\u586b\u5199\u7684 `redirect_uri ` \u4e3a \u540e\u7aef\u63a5\u53e3\u56de\u8c03\u6d88\u606f\u7684\u5730\u5740 , \u540e\u7aef\u7684\u63a5\u53e3\u4f1a\u901a\u8fc7\u63a5\u6536\u53c2\u6570\u6267\u884c\u5bf9\u5e94\u7684\u903b\u8f91 , \u4ece\u800c\u5b8c\u6210\u7528\u6237\u767b\u5f55\u4ee5\u53ca\u9ed8\u8ba4\u7684\u6ce8\u518c \u3002\u6b63\u5e38\u7684\u7b2c\u4e09\u65b9\u767b\u5f55 \uff0c \u5728\u6211\u4eec\u5b8c\u6210\u6388\u6743\u4e4b\u540e\u5e94\u8be5\u662f\u91cd\u65b0\u8df3\u8f6c\u5230\u6211\u4eec\u524d\u7aef\u7684\u9875\u9762 \uff0c \u81ea\u52a8\u5b8c\u6210\u767b\u5f55\u7684\u903b\u8f91\u3002\n> - \u8fd9\u91cc\u540e\u7aef\u7684\u4ee3\u7801\u662f\u4e0d\u9700\u8981\u4fee\u6539\u7684 \uff0c \u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u5427`redirect_uri`\u6539\u6210\u524d\u7aef\u7684\u767b\u5f55\u5730\u5740 , \u7136\u540e\u901a\u8fc7\u91cd\u5b9a\u5411\u7684**\u8def\u5f84\u53c2\u6570**`/user/login?code=xxxxxxxxxxxxxxxxx` , \u8bbf\u95ee\u540e\u7aef\u7684\u63a5\u53e3 , \u6267\u884c\u767b\u5f55\u7684\u903b\u8f91 , \u4ece\u800c\u4f7f\u5f97\u524d\u7aef\u63a5\u6536\u5230 access_token\u3002\u8fd9\u6837\u505a\u76f8\u5f53\u4e8e \u5728\u4e0a\u9762\u6d4b\u8bd5\u7684\u57fa\u7840\u4e4b\u4e0a \uff0c \u591a\u4e86\u524d\u7aef\u4f5c\u4e3a\u4e2d\u8f6c\uff0c\u5e2e\u52a9\u7528\u6237\u6267\u884c\u64cd\u4f5c\n\n\u90a3\u4e48\u5b8c\u6574\u7684\u6267\u884c\u903b\u8f91\u5c31\u662f\n\n**\u7528\u6237\u70b9\u51fb \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae =>** **\u8df3\u8f6c\u5230 \u7b2c\u4e09\u65b9\u6388\u6743\u9875\u9762 (\u540c\u65f6\u5b58\u50a8state)=>** **\u7528\u6237\u6388\u6743\u6210\u529f =>** **\u91cd\u5b9a\u5411\u5230\u524d\u7aef\u9875\u9762 =>** **\u62ff\u5230\u8def\u5f84\u4e2d\u7684code =>** **\u901a\u8fc7code\u4ee5\u53castate \u8bbf\u95ee\u540e\u7aef\u7684\u63a5\u53e3(\u539f\u672c\u7684\u56de\u8c03\u4fe1\u606f\u7684\u63a5\u53e3) =>** **\u6267\u884c\u767b\u5f55\u903b\u8f91 => \u83b7\u53d6\u8fd4\u56de\u503c\u4e2d\u7684jwt token => \u767b\u5f55\u6210\u529f , \u8df3\u8f6c\u5230\u4e3b\u9875**\n\n### OauthGitee.tsx\n\n\u6211\u4eec\u4ecd\u7136\u662f\u4ee5Gitee\u4e3a\u4f8b , \u7ed9\u51fa\u76f8\u5173\u7684\u4ee3\u7801\u548c\u64cd\u4f5c\u3002\n\n> \u8fd9\u91cc\u6211\u901a\u8fc7OPENAPI \u63d2\u4ef6 , \u81ea\u52a8\u751f\u6210\u4e86 \u8bbf\u95ee\u540e\u7aef`loginByGitee(String code,String state)`\u63a5\u53e3\u7684\u65b9\u6cd5\n\n\u6838\u5fc3\u6709\u4e24\u4e2a\u65b9\u6cd5 :\n\n- getCode : \u7528\u6237\u70b9\u51fb \u7b2c\u4e09\u65b9\u767b\u5f55\u56fe\u6807\u7684\u4e8b\u4ef6 ,\n- getToken : \u5f02\u6b65\u8c03\u7528 , \u9700\u8981\u7b49\u5f85\u767b\u5f55\u903b\u8f91\u5b8c\u6210\n\n```tsx\nimport { loginByGiteeUsingGET } from '@/services/bi/loginController';\nimport { message } from 'antd';\n\nexport const OauthGitee = {\n    getCode() {\n        const authorize_uri = 'https://gitee.com/oauth/authorize';\n        const client_id = '7d0bcf67xxxxxxxxxxxxxxxxxxxxxxb49e54';\n        const redirect_uri = 'http://localhost:8000/user/login';\n        location.href = `${authorize_uri}?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=code`;\n        localStorage.setItem('login_state', 'GITEE');\n    },\n\n    async getToken(code: string) {\n        const state = localStorage.getItem('login_state') || '';\n        const params: API.loginByGiteeUsingGETParams = { code: code, state: state };\n        let msg = await loginByGiteeUsingGET(params);\n        // console.log('params', params);\n        if (msg.code === 200) {\n            console.log('result : ', msg);\n            // \u4fdd\u5b58token\u5230localStorage\n            let token:string = msg.data ?? '';\n            localStorage.setItem('accessToken', token);\n            // message.success(defaultLoginSuccessMessage);\n            message.success('\u767b\u5f55\u6210\u529f');\n            return token;\n        }\n    },\n};\n\nexport default OauthGitee;\n```\n\n### Login.tsx\n\n\u7531\u4e8e\u6211\u5e76\u4e0d\u719f\u6089\u524d\u7aef, \u56e0\u6b64\u524d\u7aef\u7684\u4ee3\u7801\u903b\u8f91\u8f83\u4e3a\u7b80\u5355(\u53ef\u80fd\u6027\u80fd\u6bd4\u8f83\u5dee)\n\n\u8fd9\u91cc\u505a\u6cd5\u662f \u5728getCode() \u65b9\u6cd5\u6267\u884c\u7684\u65f6\u5019\u5f80\u672c\u5730\u5b58\u50a8 `login_state` , **\u7528\u6765\u6807\u8bb0\u5f53\u524d\u662f\u5426\u6267\u884c\u8fc7\u7b2c\u4e09\u65b9\u767b\u5f55**\n\n\u5982\u679c\u6267\u884c\u8fc7, \u90a3\u4e48\u5c31 \u8bbf\u95ee\u540e\u7aef\u7684 **\u56de\u8c03\u63a5\u53e3** , \u6267\u884c\u7b2c\u4e09\u65b9\u767b\u5f55\n\n> \u8fd9\u91cc\u7684\u9875\u9762\u8df3\u8f6cdebug\u4e86\u5f88\u4e45\u3002\u3002\u3002\u6700\u540e\u53d1\u73b0\u662f \u5728\u767b\u5f55\u4e4b\u540e\u9700\u8981\u6267\u884c` fetchUserInfo()`\u628a\u7528\u6237\u7684\u4fe1\u606f\u5b58\u50a8\u5230\u5168\u5c40\u72b6\u6001\u4e2d , \u5426\u5219Antd \u4f1a\u5224\u65ad\u7528\u6237\u6ca1\u6709\u767b\u5f55 , \u5bfc\u81f4\u5728 \u767b\u5f55 \u548c \u4e3b\u9875 \u4e4b\u95f4\u53cd\u590d\u6a2a\u8df3\n>\n> - \u53e6\u5916\u9700\u8981\u6ce8\u610f ts \u4e2d await \u4ee5\u53ca async\u7684\u5173\u7cfb , \u5426\u5219\u4f1a\u5bfc\u81f4\u5f88\u6df7\u4e71(\u660e\u660e\u65b9\u6cd5\u6267\u884c\u4e86 , \u65e5\u5fd7\u6b63\u786e\u6253\u5370\u4e86, \u4f46\u662f\u6548\u679c\u5374\u4e0d\u5bf9)\n\n```tsx\nconst {initialState, setInitialState} = useModel('@@initialState');\nconst fetchUserInfo = async () => {\n    const userInfo = await initialState?.fetchUserInfo?.();\n    if (userInfo) {\n        flushSync(() => {\n            setInitialState((s) => ({\n                ...s,\n                currentUser: userInfo,\n            }));\n        });\n    }\n};\n\nconst checkLogin3rd = async ()=>{\n    const code = urlParams.get('code');\n    if (code) {\n        await OauthGitee.getToken(code)\n        const tmpToken = localStorage.getItem(\"accessToken\")\n        if (tmpToken) {\n            // \u9700\u8981\u5b58\u50a8\u5f53\u524d\u7528\u6237\u7684\u4fe1\u606f ,\u5426\u5219\u5728\u8fdb\u5165\u4e3b\u9875\u4e4b\u540e\u4f1a\u8df3\u8f6c\u56de\u6765,,,,\n            await fetchUserInfo();\n            history.push(urlParams.get('redirect') || '/my_chart');\n        }\n    }\n}\n// \u6267\u884c\u68c0\u6d4b\u65b9\u6cd5\ncheckLogin3rd()\n```\n\n### \u6d4b\u8bd5\n\n\u542f\u52a8\u524d\u7aef\u4ee5\u53ca\u540e\u7aef\u9879\u76ee , \u8bbf\u95ee `http://localhost:8000/user/login` , \u70b9\u51fb Github\u7684\u56fe\u6807\n\n> Antd \u5b98\u65b9Icon\u5e93\u4e2d\u6ca1\u6709\u7801\u4e91\u7684icon , \u6682\u65f6\u4f7f\u7528github\u7684\u6765\u4ee3\u66ff..\n\n![](https://pic.yupi.icu/5563/202311191315494.png)\n\n\u8df3\u8f6c\u5230\u4e86 Gitee\u6388\u6743\u9875\u9762\n\n![](https://pic.yupi.icu/5563/202311191315854.png)\n\n\u70b9\u51fb\u540c\u610f\u6388\u6743 , \u9875\u9762\u6b63\u786e\u8df3\u8f6c , \u540e\u7aef\u65e5\u5fd7\u4e5f\u6b63\u786e\u6253\u5370\n\n![](https://pic.yupi.icu/5563/202311191315191.png)\n\n------\n\n![](https://pic.yupi.icu/5563/202311191315250.png)\n\n\u5230\u8fd9\u91cc\u7b2c\u4e09\u65b9\u767b\u5f55\u5df2\u7ecf\u662f\u6b63\u786e\u5b8c\u6210\u4e86 , \u5b8c\u6210\u4e86 \u4ece0~1\u7684\u8de8\u8d8a, \u6269\u5c55\u5176\u4ed6\u5e73\u53f0\u7684Oauth \u60f3\u5fc5\u4e0d\u5b58\u5728\u592a\u5927\u7684\u95ee\u9898 \u3002"}