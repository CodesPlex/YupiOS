{"data": "# OJ \u7ade\u8d5b\u6392\u884c\u699c\u7edf\u8ba1\u903b\u8f91\u8bbe\u8ba1\u4e0e\u4ee3\u7801\u5b9e\u73b0\n\n> \u4f5c\u8005\uff1a[\u5357\u4fa0](https://gitee.com/crzzx)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 29240\n\n\u4ecb\u7ecd\u5b9e\u73b0\u7ade\u8d5b\u6392\u884c\u699c\u529f\u80fd\u7684\u8bbe\u8ba1\u601d\u8def\u548c\u4ee3\u7801\u5b9e\u73b0\uff0c\u5305\u62ec\u6570\u636e\u5e93\u8868\u8bbe\u8ba1\u548c\u4ee3\u7801\u903b\u8f91\u8bbe\u8ba1\uff08Java\uff09\n\n## \u5f15\u8a00\n\n\u6392\u884c\u699c\u529f\u80fd\u5728\u5404\u7c7b\u7ade\u8d5b\u4e2d\u90fd\u626e\u6f14\u7740\u81f3\u5173\u91cd\u8981\u7684\u89d2\u8272\uff0c\u7279\u522b\u662f\u5728\u5728\u7ebf\u8bc4\u6d4b\uff08OJ\uff09\u7ade\u8d5b\u4e2d\uff0c\u5176\u4e0d\u53ef\u6216\u7f3a\u7684\u5b58\u5728\u4f7f\u5f97\u7ade\u8d5b\u66f4\u5177\u6709\u6d3b\u529b\u548c\u7ade\u4e89\u6027\u3002\u6392\u884c\u699c\u4ee5\u76f4\u89c2\u7684\u65b9\u5f0f\u5448\u73b0\u4e86\u53c2\u8d5b\u8005\u7684\u8868\u73b0\uff0c\u4e3a\u7ade\u8d5b\u4e3e\u529e\u65b9\u63d0\u4f9b\u4e86\u5168\u9762\u800c\u6e05\u6670\u7684\u6570\u636e\uff0c\u6709\u52a9\u4e8e\u6df1\u5165\u4e86\u89e3\u53c2\u4e0e\u8005\u7684\u6c34\u5e73\u3001\u7b56\u7565\u548c\u8868\u73b0\u3002 \u901a\u8fc7\u6392\u884c\u699c\u529f\u80fd\uff0c\u7ade\u8d5b\u4e3b\u529e\u65b9\u80fd\u591f\u8fc5\u901f\u51c6\u786e\u5730\u4e86\u89e3\u6bcf\u4f4d\u53c2\u8d5b\u9009\u624b\u7684\u6700\u4f18\u7b54\u9898\u60c5\u51b5\u3002\u8fd9\u4e0d\u4ec5\u6709\u52a9\u4e8e\u8bc4\u4f30\u4e2a\u4f53\u7684\u5b9e\u529b\u548c\u6280\u80fd\u6c34\u5e73\uff0c\u8fd8\u4e3a\u7ec4\u7ec7\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5168\u666f\u89c6\u56fe\uff0c\u4f7f\u5176\u80fd\u591f\u6bd4\u8f83\u5404\u53c2\u8d5b\u8005\u4e4b\u95f4\u7684\u76f8\u5bf9\u8868\u73b0\u3002\u8fd9\u6837\u7684\u6bd4\u8f83\u4e0d\u4ec5\u6709\u52a9\u4e8e\u786e\u8ba4\u7ade\u8d5b\u7ed3\u679c\uff0c\u8fd8\u80fd\u4e3a\u9881\u5956\u548c\u5956\u52b1\u5236\u5ea6\u7684\u5236\u5b9a\u63d0\u4f9b\u6709\u529b\u7684\u53c2\u8003\u4f9d\u636e\u3002 \u6392\u884c\u699c\u529f\u80fd\u7684\u6269\u5c55\u8fdb\u4e00\u6b65\u589e\u5f3a\u4e86\u7ade\u8d5b\u7684\u53ef\u89c6\u5316\u548c\u5206\u6790\u6027\u8d28\u3002\u901a\u8fc7\u5f15\u5165\u66f4\u591a\u7684\u6570\u636e\u7ef4\u5ea6\uff0c\u5982\u89e3\u7b54\u901f\u5ea6\u3001\u6b63\u786e\u7387\u3001\u9898\u76ee\u96be\u5ea6\u7b49\uff0c\u6392\u884c\u699c\u4e0d\u4ec5\u5448\u73b0\u4e86\u53c2\u8d5b\u8005\u7684\u603b\u4f53\u6392\u540d\uff0c\u8fd8\u63d0\u4f9b\u4e86\u66f4\u4e3a\u8be6\u7ec6\u548c\u6df1\u5165\u7684\u5206\u6790\u3002\u8fd9\u6837\u7684\u6df1\u5ea6\u5206\u6790\u6709\u52a9\u4e8e\u8bc6\u522b\u4f18\u79c0\u9009\u624b\u5728\u7279\u5b9a\u65b9\u9762\u7684\u4f18\u52bf\uff0c\u4e3a\u5956\u52b1\u5236\u5ea6\u7684\u4e2a\u6027\u5316\u8bbe\u8ba1\u63d0\u4f9b\u4e86\u57fa\u7840\u3002 \u6b64\u5916\uff0c\u6392\u884c\u699c\u529f\u80fd\u4e5f\u4e3a\u53c2\u8d5b\u8005\u63d0\u4f9b\u4e86\u5b9e\u65f6\u7684\u7ade\u6280\u4f53\u9a8c\u3002\u4ed6\u4eec\u53ef\u4ee5\u968f\u65f6\u4e86\u89e3\u81ea\u5df1\u5728\u6bd4\u8d5b\u4e2d\u7684\u6392\u540d\uff0c\u5e76\u4e0e\u5176\u4ed6\u9009\u624b\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u79cd\u5b9e\u65f6\u6027\u7684\u53cd\u9988\u4e0d\u4ec5\u80fd\u591f\u6fc0\u53d1\u7ade\u4e89\u6fc0\u60c5\uff0c\u8fd8\u6709\u52a9\u4e8e\u53c2\u8d5b\u8005\u66f4\u597d\u5730\u8c03\u6574\u7b56\u7565\uff0c\u8fc5\u901f\u9002\u5e94\u7ade\u6280\u73af\u5883\uff0c\u63d0\u9ad8\u4e2a\u4eba\u8868\u73b0\u3002 \u603b\u4f53\u800c\u8a00\uff0c\u6392\u884c\u699c\u529f\u80fd\u7684\u6269\u5c55\u4e0d\u4ec5\u4e3a\u7ade\u8d5b\u4e3b\u529e\u65b9\u63d0\u4f9b\u4e86\u66f4\u5168\u9762\u7684\u53c2\u8d5b\u8005\u6570\u636e\uff0c\u4e5f\u4e3a\u53c2\u8d5b\u8005\u5e26\u6765\u4e86\u66f4\u52a0\u6fc0\u70c8\u548c\u6709\u8da3\u7684\u7ade\u6280\u4f53\u9a8c\u3002\u8fd9\u79cd\u529f\u80fd\u7684\u4e0d\u65ad\u5347\u7ea7\u548c\u4f18\u5316\u5c06\u8fdb\u4e00\u6b65\u63a8\u52a8\u7ade\u8d5b\u7684\u53d1\u5c55\uff0c\u4e3a\u5e7f\u5927\u53c2\u4e0e\u8005\u548c\u7ec4\u7ec7\u8005\u5e26\u6765\u66f4\u4e3a\u4e30\u5bcc\u548c\u6ee1\u8db3\u7684\u7ade\u6280\u4f53\u9a8c\u3002\n\n## \u5206\u6790\n\n\u6839\u636e\u5f15\u8a00\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u51fa\u6392\u884c\u699c\u529f\u80fd\u8bbe\u8ba1\u65f6\u8981\u6ce8\u610f\u7684\u5173\u952e\u70b9\uff1a\n\n1. **\u5c3d\u53ef\u80fd\u5b9e\u65f6**\uff1a**\u5c3d\u53ef\u80fd**\u5b9e\u65f6\u800c\u4e0d\u662f\u8bf4**\u5b8c\u5168**\u5b9e\u65f6\uff0c\u662f\u56e0\u4e3a\u7528\u6237\u7b54\u9898\u6570\u636e\u7684\u63d0\u4ea4\u3001\u66f4\u65b0\u7edf\u8ba1\u4e0d\u662f\u5b9e\u65f6\u7684\uff08\u7b54\u9898\u8005\u5f88\u591a\uff0c\u6211\u4eec\u8981\u5bf9\u63d0\u4ea4\u7684\u7b54\u6848\u505a\u5f02\u6b65\u5904\u7406\uff0c\u4ee5\u63d0\u5347\u7528\u6237\u4f53\u9a8c\uff0c\u800c\u5f02\u6b65\u5c31\u610f\u5473\u7740\u4e0d\u4e00\u5b9a\u5b9e\u65f6\uff09\n2. \u5c55\u793a\u53c2\u8d5b\u8005**\u6700\u4f18**\u7b54\u9898\u60c5\u51b5\uff1a\u8981\u7ef4\u62a4\u7ade\u8d5b\u4e0b\u5404\u7528\u6237\u6bcf\u4e2a\u9898\u76ee\u7684**\u6700\u4f18\u7b54\u9898\u60c5\u51b5**\uff0c\u4f5c\u4e3a\u9898\u76ee\u7684\u6700\u597d\u6210\u7ee9\n3. \u6392\u884c\u699c\u6392\u540d\u6807\u51c6\u4e00\u822c\u662f\uff1a\u603b\u5206->\u603b\u8017\u65f6->\u603b\u8017\u7528\u7a7a\u95f4\uff1a\u8fd9\u4e2a\u987a\u5e8f\u5e76\u4e0d\u7edd\u5bf9\uff0c\u4f46\u8981\u56fa\u5b9a\n4. \u6392\u884c\u699c\u6570\u636e\u4ec5\u5728\u7ade\u8d5b\u5f00\u59cb\u540e\u53ef\u89c1\uff1a\u5373\u7ade\u8d5b\u524d\uff1a\u4e0d\u53ef\u89c1\uff1b\u7ade\u8d5b\u4e2d\uff1a\u52a8\u6001\u53d8\u5316\uff1b\u7ade\u8d5b\u540e\uff1a\u53ef\u89c1\u4f46\u4e0d\u53d8\uff08\u53ef\u7531\u4e0d\u80fd\u63d0\u4ea4\u9898\u76ee\u63a7\u5236\uff09\n\n## \u8bbe\u8ba1\u601d\u8def\n\n\u5f71\u54cd\u6392\u884c\u699c\u6570\u636e\u7684\u4e3b\u8981\u5305\u542b\uff1a\u7b54\u9898\u6a21\u5757\u548c\u7edf\u8ba1\u6a21\u5757\uff0c\u7b54\u9898\u6a21\u5757\u91cd\u5728\u66f4\u65b0\uff0c\u7edf\u8ba1\u6a21\u5757\u91cd\u5728\u7edf\u8ba1\u548c\u8fd4\u56de\u5f62\u5f0f\u7684\u8f6c\u6362\u3002 ![](https://pic.yupi.icu/5563/202401161913578.png)\n\n## \u6570\u636e\u5e93\u8bbe\u8ba1\n\n### \u6982\u89c8\n\n\u7ade\u8d5b\u6a21\u5757\uff0c\u4e00\u5171\u53ef\u8bbe\u8ba1\u4e09\u5f20\u8868\uff1a\n\n1. game\uff1a\u7ade\u8d5b\u8868\uff0c\u5305\u542b\u7ade\u8d5b\u7684\u57fa\u672c\u4fe1\u606f\n2. user_game\uff1a\u7528\u6237-\u7ade\u8d5b\u5173\u8054\u8868\uff0c\u7ed1\u5b9a\u6bcf\u4e2a\u7ade\u8d5b\u4e0b\u7684\u7528\u6237\n3. game_question\uff1a\u7ade\u8d5b-\u9898\u76ee\u5173\u8054\u8868\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u7ade\u8d5b\u4e0b\u7684\u9898\u76ee\n4. game_rank\uff1a\u7ade\u8d5b-\u6392\u540d\u8868\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u7ade\u8d5b\u4e2d\u6bcf\u4e2a\u7528\u6237\u7684\u603b\u5206\u3001\u603b\u8017\u65f6\u3001\u603b\u7a7a\u95f4\u548c\u5404\u9898\u76ee\u7684\u6700\u4f18\u7b54\u9898\u60c5\u51b5\u96c6\u5408\uff08json\u5b57\u7b26\u4e32\u5b58\u50a8\uff09\n\n### game_rank\n\n#### \u7ed3\u6784\uff1a\n\n![](https://pic.yupi.icu/5563/202401161913283.png) \u867d\u7136\u603b\u5206\u3001\u603b\u8017\u65f6\u548c\u603b\u8017\u7528\u7a7a\u95f4\u53ef\u4ee5\u6839\u636e\u6700\u4f18\u7b54\u9898\u60c5\u51b5\uff08gameDetail\uff09\u52a8\u6001\u751f\u6210\uff0c\u4f46\u6bcf\u6b21\u90fd\u8981\u53d8\u52a8\uff0c\u5c24\u5176\u7adf\u8d5b\u7ed3\u675f\u540e\u8fd8\u8981\u52a8\u6001\u8ba1\u7b97\u65f6\u95f4\u662f\u6709\u70b9\u6d6a\u8d39\u4e86\u70b9\uff0c\u4e8e\u662f\u7528\u4e00\u70b9\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u51b5\u4e14\uff0c\u7ef4\u62a4\u4e5f\u4e0d\u9ebb\u70e6\u3002 \u53e6\u5916\uff0c\u7ade\u8d5b\u8be6\u60c5\uff08gameDetail\uff09\u7684\u5bf9\u8c61\u7ed3\u6784\u5982\u4e0b\uff1a ![](https://pic.yupi.icu/5563/202401161913561.png)\n\n1. gameId\u548cuserId\u4f5c\u4e3a\u7ade\u8d5b\u548c\u6392\u884c\u6a21\u5757\u91cd\u8981\u7684\u53c2\u6570\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6709\u5229\u4e8e\u540e\u7eed\u7684\u6392\u884c\u699c\u6570\u636e\u7edf\u8ba1\u548c\u672a\u6765\u53ef\u80fd\u7684\u529f\u80fd\u62d3\u5c55\u3002\n2. submitDetail\u7528map\u65b9\u5f0f\u5b58\u50a8\uff0c\u518d\u5408\u9002\u4e0d\u8fc7\n\n#### sql\u4ee3\u7801\uff1a\n\n```sql\n-- ----------------------------\n-- Table structure for game_rank\n-- ----------------------------\nDROP TABLE IF EXISTS `game_rank`;\nCREATE TABLE `game_rank`  (\n  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',\n  `gameId` bigint NULL DEFAULT NULL COMMENT '\u7ade\u8d5bid',\n  `userId` bigint NULL DEFAULT NULL COMMENT '\u7528\u6237id',\n  `userName` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '\u7528\u6237\u6635\u79f0',\n  `totalMemory` int NULL DEFAULT NULL COMMENT '\u603b\u7a7a\u95f4\uff08kb\uff09',\n  `totalTime` int NULL DEFAULT NULL COMMENT '\u603b\u7528\u65f6\uff08ms\uff09',\n  `totalScore` int NULL DEFAULT NULL COMMENT '\u603b\u5f97\u5206',\n  `gameDetail` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '\u7ade\u8d5b\u8be6\u60c5',\n  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '\u521b\u5efa\u65f6\u95f4',\n  `updateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '\u66f4\u65b0\u65f6\u95f4',\n  `isDelete` tinyint NOT NULL DEFAULT 0 COMMENT '\u662f\u5426\u5220\u9664',\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `idx_gameId`(`gameId` ASC) USING BTREE,\n  INDEX `idx_userId`(`userId` ASC) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 19 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;\n```\n\n## \u4ee3\u7801\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\n\n### \u5b9e\u4f53\u7c7b\u8bbe\u8ba1\n\n\u5728\u6392\u884c\u699c\u6a21\u5757\u4e2d\uff0c\u6d89\u53ca\u7684\u5b9e\u4f53\u7c7b\u53ca\u5176\u5173\u7cfb\u56fe\u5982\u4e0b\uff1a\n\n1. GameRank\n2. GameDetail\n3. GameDetailUnit\n4. GameRankDetail\n\n![](https://pic.yupi.icu/5563/202401161913873.png)\n\n\u5b9e\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n1. **GameRank**\n\n```java\npackage sspu.zzx.sspuoj.model.entity;\n\nimport com.baomidou.mybatisplus.annotation.*;\nimport lombok.Data;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\n/**\n * @author ZZX\n * @TableName game_rank\n */\n@TableName(value = \"game_rank\")\n@Data\npublic class GameRank implements Serializable\n{\n    /**\n     * id\n     */\n    @TableId(type = IdType.AUTO)\n    private Long id;\n\n    /**\n     * \u7ade\u8d5bid\n     */\n    private Long gameId;\n\n    /**\n     * \u7528\u6237id\n     */\n    private Long userId;\n\n    /**\n     * \u7528\u6237\u6635\u79f0\n     */\n    private String userName;\n\n    /**\n     * \u63d0\u4ea4\u603b\u7a7a\u95f4\u6d88\u8017\n     */\n    private Integer totalMemory;\n\n    /**\n     * \u63d0\u4ea4\u603b\u8017\u65f6\n     */\n    private Integer totalTime;\n\n    /**\n     * \u7ade\u8d5b\u603b\u5f97\u5206\n     */\n    private Integer totalScore;\n\n    /**\n     * \u7ade\u8d5b\u8be6\u60c5\n     */\n    private String gameDetail;\n\n    /**\n     * \u521b\u5efa\u65f6\u95f4\n     */\n    @TableField(fill = FieldFill.INSERT)\n    private Date createTime;\n\n    /**\n     * \u66f4\u65b0\u65f6\u95f4\n     */\n    @TableField(fill = FieldFill.INSERT_UPDATE)\n    private Date updateTime;\n\n    /**\n     * \u662f\u5426\u5220\u9664\n     */\n    private Integer isDelete;\n\n    @TableField(exist = false)\n    private static final long serialVersionUID = 1L;\n}\n```\n\n1. **GameDetail**\n\n```java\npackage sspu.zzx.sspuoj.model.dto.game;\n\nimport lombok.Data;\n\nimport java.io.Serializable;\nimport java.util.Map;\n\n/**\n * @version 1.0\n * @Author ZZX\n * @Date 2024/1/10 16:01\n */\n@Data\npublic class GameDetail implements Serializable\n{\n    /**\n     * \u7ade\u8d5bid\n     */\n    private Long gameId;\n\n    /**\n     * \u7528\u6237id\n     */\n    private Long userId;\n\n    /**\n     * \u9898\u76ee\u63d0\u4ea4\u8be6\u60c5\n     * key\uff1a\u9898\u76eeid\n     * val\uff1a\u6700\u4f18\u7b54\u9898\u60c5\u51b5\n     */\n    private Map<Long, GameDetailUnit> submitDetail;\n\n    private static final long serialVersionUID = 1L;\n}\n```\n\n1. **GameDetailUnit**\n\n```java\npackage sspu.zzx.sspuoj.model.dto.game;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.io.Serializable;\n\n/**\n * @version 1.0\n * @Author ZZX\n * @Date 2024/1/10 10:47\n */\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class GameDetailUnit implements Serializable\n{\n    /**\n     * \u5355\u9898id\n     */\n    private Long id;\n\n    /**\n     * \u5355\u9898\u540d\u79f0\n     */\n    private String name;\n\n    /**\n     * \u5355\u9898\u5f97\u5206\n     */\n    private Integer score;\n\n    /**\n     * \u5355\u9898\u8017\u65f6\n     */\n    private Integer timeCost;\n\n    /**\n     * \u5355\u9898\u8017\u5185\u5b58\n     */\n    private Integer memoryCost;\n\n    /**\n     * \u6bd4\u8f83\u662f\u5426\u6bd4\u53e6\u4e00\u4e2a\u597d\n     *\n     * @param other\n     * @return\n     */\n    public boolean isBetter(GameDetailUnit other)\n    {\n        // \u9996\u5148\u6bd4\u8f83\u5206\u6570\u662f\u5426\u66f4\u5927\n        if (this.score > other.getScore())\n        {\n            return true;\n        }\n        if (this.score < other.getScore())\n        {\n            return false;\n        }\n        // \u5176\u6b21\u6bd4\u8f83\u8017\u65f6\u662f\u5426\u66f4\u5c11\n        if (this.timeCost < other.getTimeCost())\n        {\n            return true;\n        }\n        if (this.timeCost > other.getTimeCost())\n        {\n            return false;\n        }\n        // \u6700\u540e\u6bd4\u8f83\u8017\u8d39\u7a7a\u95f4\u662f\u5426\u66f4\u5c11\n        if (this.memoryCost < other.getMemoryCost())\n        {\n            return true;\n        }\n        return false;\n    }\n\n    private static final long serialVersionUID = 1L;\n}\n```\n\n1. **GameRankDetail**\n\n```java\npackage sspu.zzx.sspuoj.model.vo.game;\n\nimport lombok.Data;\nimport sspu.zzx.sspuoj.model.dto.game.GameDetailUnit;\n\nimport java.io.Serializable;\nimport java.util.List;\n\n/**\n * @version 1.0\n * @Author ZZX\n * @Date 2024/1/10 16:06\n */\n@Data\npublic class GameRankDetail implements Serializable\n{\n    /**\n     * \u540d\u6b21\n     */\n    private Integer rankOrder;\n\n    /**\n     * \u7b54\u9898\u8005id\n     */\n    private Long userId;\n\n    /**\n     * \u7b54\u9898\u8005\u6635\u79f0\n     */\n    private String userName;\n\n    /**\n     * \u603b\u5206\n     */\n    private Integer totalScore;\n\n    /**\n     * \u603b\u8017\u65f6\n     */\n    private Integer totalTime;\n\n    /**\n     * \u603b\u8017\u7528\u5185\u5b58\n     */\n    private Integer totalMemory;\n\n    /**\n     * \u6700\u4f18\u7b54\u9898\u60c5\u51b5\u96c6\u5408\n     */\n    private List<GameDetailUnit> questionDetails;\n\n    private static final long serialVersionUID = 1L;\n}\n```\n\n### \u5224\u9898\u6a21\u5757\n\n\u8fd9\u5757\u5728\u7b54\u9898\u6a21\u5757\u6709\u7528\u5230\uff0c\u56e0\u4e3a\u8981\u7b49\u5f85\u5f02\u6b65\u7684\u5224\u9898\u7ed3\u679c\uff1a\n\n```java\n    /**\n     * \u63d0\u4ea4\u9898\u76ee\n     *\n     * @param questionSubmitAddRequest\n     * @param loginUser\n     * @return\n     */\n    @Override\n    public long doQuestionSubmit(QuestionSubmitAddRequest questionSubmitAddRequest, User loginUser)\n    {\n        // \u6821\u9a8c\u7f16\u7a0b\u8bed\u8a00\u662f\u5426\u5408\u6cd5\n        String language = questionSubmitAddRequest.getLanguage();\n        QuestionSubmitLanguageEnum languageEnum = QuestionSubmitLanguageEnum.getEnumByValue(language);\n        if (languageEnum == null)\n        {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR, \"\u7f16\u7a0b\u8bed\u8a00\u9519\u8bef\");\n        }\n        long questionId = questionSubmitAddRequest.getQuestionId();\n        // \u5224\u65ad\u5b9e\u4f53\u662f\u5426\u5b58\u5728\uff0c\u6839\u636e\u7c7b\u522b\u83b7\u53d6\u5b9e\u4f53\n        Question question = questionService.getById(questionId);\n        if (question == null)\n        {\n            throw new BusinessException(ErrorCode.NOT_FOUND_ERROR);\n        }\n        // \u662f\u5426\u5df2\u63d0\u4ea4\u9898\u76ee\n        long userId = loginUser.getId();\n        // \u68c0\u67e5\u662f\u5426\u5b58\u5728\u8be5\u7528\u6237\u63d0\u4ea4\u8be5\u9898\u76ee\u4f46\u6b63\u5728\u5224\u9898\u7684\u8bb0\u5f55\n        QueryWrapper<QuestionSubmit> wrapper = new QueryWrapper<>();\n        wrapper.eq(\"userId\", userId);\n        wrapper.eq(\"questionId\", questionId);\n        wrapper.eq(\"status\", QuestionSubmitStatusEnum.WAITING.getValue());\n        QuestionSubmit waitingQuestionSubmit = this.getOne(wrapper);\n        if (waitingQuestionSubmit != null)\n        {\n            throw new BusinessException(ErrorCode.API_REQUEST_ERROR, \"\u9898\u76ee\u6b63\u5728\u5224\u9898\u4e2d\uff0c\u8bf7\u52ff\u91cd\u590d\u63d0\u4ea4\uff01\");\n        }\n        // \u6bcf\u4e2a\u7528\u6237\u4e32\u884c\u63d0\u4ea4\u9898\u76ee\n        QuestionSubmit questionSubmit = new QuestionSubmit();\n        questionSubmit.setUserId(userId);\n        questionSubmit.setQuestionId(questionId);\n        questionSubmit.setCode(questionSubmitAddRequest.getCode());\n        questionSubmit.setLanguage(language);\n        // \u8bbe\u7f6e\u521d\u59cb\u72b6\u6001\n        questionSubmit.setStatus(QuestionSubmitStatusEnum.WAITING.getValue());\n        questionSubmit.setJudgeInfo(\"{}\");\n        boolean save = this.save(questionSubmit);\n        if (!save)\n        {\n            throw new BusinessException(ErrorCode.SYSTEM_ERROR, \"\u6570\u636e\u63d2\u5165\u5931\u8d25\");\n        }\n        Long questionSubmitId = questionSubmit.getId();\n        // \u5f02\u6b65\u6267\u884c\u5224\u9898\u670d\u52a1\n        CompletableFuture.runAsync(() ->\n        {\n            judgeService.doJudge(questionSubmitId);\n            // \u540c\u65f6\u66f4\u65b0\u9898\u76ee\u7684\u901a\u8fc7\u6570\u548c\u901a\u8fc7\u603b\u6570\n            question.setSubmitNum(question.getSubmitNum() + 1);\n            QuestionSubmit resQuestionSubmit = this.getById(questionSubmitId);\n            String judgeInfo = resQuestionSubmit.getJudgeInfo();\n            JSONObject jsonObject = JSON.parseObject(judgeInfo);\n            if (JudgeInfoMessageEnum.ACCEPTED.getValue().equals(jsonObject.getString(\"message\")))\n            {\n                question.setAcceptedNum(question.getAcceptedNum() + 1);\n            }\n            this.questionService.updateById(question);\n        });\n        return questionSubmitId;\n    }\npackage sspu.zzx.sspuoj.model.judge.model;\n\nimport lombok.Data;\n\n/**\n * \u5224\u9898\u4fe1\u606f\n */\n@Data\npublic class JudgeInfo {\n\n    /**\n     * \u7a0b\u5e8f\u6267\u884c\u4fe1\u606f\n     */\n    private String message;\n\n    /**\n     * \u6d88\u8017\u5185\u5b58\n     */\n    private Long memory;\n\n    /**\n     * \u6d88\u8017\u65f6\u95f4\uff08KB\uff09\n     */\n    private Long time;\n}\n```\n\n### \u7b54\u9898\u6a21\u5757\n\n![](https://pic.yupi.icu/5563/202401161913586.png) \u5904\u7406\u63d0\u4ea4\u9898\u76ee\u7684\u4ee3\u7801\u5982\u4e0b\uff08\u903b\u8f91\u770b\u6ce8\u91ca)\n\n```java\n @Override\n    public Long questionSubmit(GameQuestionSubmitRequest gameQuestionSubmitRequest)\n    {\n        QuestionSubmitAddRequest questionSubmitAddRequest = gameQuestionSubmitRequest.getQuestionSubmitAddRequest();\n        Long gameId = gameQuestionSubmitRequest.getGameId();\n        if (questionSubmitAddRequest == null || gameId == null)\n        {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR);\n        }\n        Game game = gameMapper.selectById(gameId);\n        if (game == null)\n        {\n            throw new BusinessException(ErrorCode.NOT_FOUND_ERROR, \"\u7ade\u8d5b\u4e0d\u5b58\u5728\");\n        }\n        Date startTime = game.getStartTime();\n        Date endTime = game.getEndTime();\n        // \u5224\u65ad\u7ade\u8d5b\u662f\u5426\u5df2\u7ecf\u5f00\u59cb\n        Date currentDate = new Date();\n        if (startTime.after(currentDate))\n        {\n            throw new BusinessException(ErrorCode.OPERATION_ERROR, \"\u7ade\u8d5b\u672a\u5f00\u59cb\");\n        }\n        // \u5224\u65ad\u7ade\u8d5b\u662f\u5426\u5df2\u7ecf\u7ed3\u675f\n        if (endTime.before(currentDate))\n        {\n            throw new BusinessException(ErrorCode.OPERATION_ERROR, \"\u7ade\u8d5b\u5df2\u7ed3\u675f\");\n        }\n        final User loginUser = userService.getLoginUser(null);\n        long submitId = questionSubmitService.doQuestionSubmit(questionSubmitAddRequest, loginUser);\n        // \u540c\u65f6\u5f02\u6b65\u66f4\u65b0\u6392\u884c\u699c\u4fe1\u606f\n        CompletableFuture.runAsync(() ->\n        {\n            // \u66f4\u65b0\u7528\u6237\u63d0\u4ea4\u6210\u7ee9\u4fe1\u606f\n            QuestionSubmit nowSubmit = questionSubmitService.getById(submitId);\n            // \u83b7\u5f97\u8be5\u7ade\u8d5b\u5404\u9898\u76ee\u7684\u6ee1\u5206\n            QueryWrapper<GameQuestion> gameQuestionQueryWrapper = new QueryWrapper<>();\n            gameQuestionQueryWrapper.eq(\"gameId\", gameId);\n            List<GameQuestion> gameQuestionList = gameQuestionMapper.selectList(gameQuestionQueryWrapper);\n            Map<Long, Integer> questionIdToFullScore = gameQuestionList.stream().collect(Collectors.toMap(GameQuestion::getQuestionId, GameQuestion::getFullScore));\n            // \u83b7\u5f97\u5f53\u524d\u7528\u6237\u5728\u5f53\u524d\u7ade\u8d5b\u4e2d\u7684\u63d0\u4ea4\u4fe1\u606f\n            QueryWrapper<GameRank> gameRankQueryWrapper = new QueryWrapper<>();\n            gameRankQueryWrapper.eq(\"userId\", loginUser.getId()).eq(\"gameId\", gameId);\n            GameRank gameRank = gameRankMapper.selectOne(gameRankQueryWrapper);\n            // \u4e3a\u7a7a\u65b0\u5efa\u4e00\u4e2agameRank\u8bb0\u5f55\u5e76\u5c06\u5f53\u524d\u7b54\u9898\u60c5\u51b5\u63d2\u5165\u66f4\u65b0\uff08\u56e0\u4e3a\u7b2c\u4e00\u6b21\u7edf\u8ba1\u65f6\uff0c\u8fd8\u6ca1\u65b0\u5efa\u8fd9\u4e2a\u8bb0\u5f55\uff09\n            if (gameRank == null)\n            {\n                gameRank = new GameRank();\n                gameRank.setUserId(loginUser.getId());\n                gameRank.setUserName(loginUser.getUserName());\n                gameRank.setGameId(gameId);\n                GameDetail gameDetail = new GameDetail();\n                gameDetail.setGameId(gameId);\n                gameDetail.setUserId(loginUser.getId());\n                Map<Long, GameDetailUnit> gameDetailUnitMap = new HashMap<>();\n                GameDetailUnit gameDetailUnit = getGameDetailUnit(nowSubmit, questionIdToFullScore);\n                gameDetailUnitMap.put(nowSubmit.getQuestionId(), gameDetailUnit);\n                gameDetail.setSubmitDetail(gameDetailUnitMap);\n                gameRank.setGameDetail(JSONUtil.toJsonStr(gameDetail));\n                gameRank.setTotalScore(gameDetailUnit.getScore());\n                gameRank.setTotalMemory(gameDetailUnit.getMemoryCost());\n                gameRank.setTotalTime(gameDetailUnit.getTimeCost());\n                gameRankMapper.insert(gameRank);\n            }\n            // gameDetail()\u4e3a\u7a7a\u65f6\uff0c\u5219\u5c06\u5f53\u524d\u7b54\u9898\u60c5\u51b5\u63d2\u5165\u66f4\u65b0\n            else if (StringUtils.isBlank(gameRank.getGameDetail()))\n            {\n                GameDetail gameDetail = new GameDetail();\n                gameDetail.setGameId(gameId);\n                gameDetail.setUserId(loginUser.getId());\n                Map<Long, GameDetailUnit> gameDetailUnitMap = new HashMap<>();\n                GameDetailUnit gameDetailUnit = getGameDetailUnit(nowSubmit, questionIdToFullScore);\n                gameDetailUnitMap.put(nowSubmit.getQuestionId(), gameDetailUnit);\n                gameDetail.setSubmitDetail(gameDetailUnitMap);\n                gameRank.setGameDetail(JSONUtil.toJsonStr(gameDetail));\n                gameRank.setTotalScore(gameDetailUnit.getScore());\n                gameRank.setTotalMemory(gameDetailUnit.getMemoryCost());\n                gameRank.setTotalTime(gameDetailUnit.getTimeCost());\n                gameRankMapper.updateById(gameRank);\n            } else\n            {\n                // \u5bf9\u6bd4\u4e24\u4e2a\u7248\u672c\u7684\u5f53\u524d\u9898\u76ee\u63d0\u4ea4\u4fe1\u606f\uff0c\u4fdd\u7559\u6700\u4f18\u7684\n                GameDetail dbGameDetail = JSONUtil.toBean(gameRank.getGameDetail(), GameDetail.class);\n                Map<Long, GameDetailUnit> dbSubmitDetail = dbGameDetail.getSubmitDetail();\n                // \u83b7\u5f97\u6570\u636e\u5e93\u5df2\u6709\u7684\u8be5\u9898\u76ee\u63d0\u4ea4\u4fe1\u606f\n                GameDetailUnit dbGameDetailUnit = dbSubmitDetail.get(nowSubmit.getQuestionId());\n                // \u7ec4\u88c5\u5f53\u524d\u7684\u8be5\u9898\u76ee\u63d0\u4ea4\u4fe1\u606f\n                GameDetailUnit gameDetailUnit = getGameDetailUnit(nowSubmit, questionIdToFullScore);\n                if (dbGameDetailUnit == null)\n                {\n                    dbSubmitDetail.put(nowSubmit.getQuestionId(), gameDetailUnit);\n                    dbGameDetail.setSubmitDetail(dbSubmitDetail);\n                    gameRank.setGameDetail(JSONUtil.toJsonStr(dbGameDetail));\n                    gameRank.setTotalScore(gameRank.getTotalScore() + gameDetailUnit.getScore());\n                    gameRank.setTotalMemory(gameRank.getTotalMemory() + gameDetailUnit.getMemoryCost());\n                    gameRank.setTotalTime(gameRank.getTotalTime() + gameDetailUnit.getTimeCost());\n                    gameRankMapper.updateById(gameRank);\n                } else\n                {\n                    // \u5982\u679c\u65b0\u7684\u4f18\u4e8e\u76ee\u524d\u7684\n                    if (gameDetailUnit.isBetter(dbGameDetailUnit))\n                    {\n                        dbSubmitDetail.put(nowSubmit.getQuestionId(), gameDetailUnit);\n                        dbGameDetail.setSubmitDetail(dbSubmitDetail);\n                        gameRank.setGameDetail(JSONUtil.toJsonStr(dbGameDetail));\n                        gameRank.setTotalScore(gameRank.getTotalScore() - dbGameDetailUnit.getScore() + gameDetailUnit.getScore());\n                        gameRank.setTotalMemory(gameRank.getTotalMemory() - dbGameDetailUnit.getMemoryCost() + gameDetailUnit.getMemoryCost());\n                        gameRank.setTotalTime(gameRank.getTotalTime() - dbGameDetailUnit.getTimeCost() + gameDetailUnit.getTimeCost());\n                        gameRankMapper.updateById(gameRank);\n                    }\n                }\n            }\n        });\n        return submitId;\n    }\n    public GameDetailUnit getGameDetailUnit(QuestionSubmit nowSubmit, Map<Long, Integer> questionIdToFullScore)\n    {\n        GameDetailUnit gameDetailUnit = new GameDetailUnit();\n        gameDetailUnit.setId(nowSubmit.getQuestionId());\n        Question question = questionService.getById(nowSubmit.getQuestionId());\n        gameDetailUnit.setName(question.getTitle());\n        if (StringUtils.isBlank(nowSubmit.getJudgeInfo()) || \"{}\".equals(nowSubmit.getJudgeInfo()))\n        {\n            try\n            {\n                // todo \u6709\u6b7b\u5faa\u73af\u9690\u60a3\uff0c\u56e0\u4e3a\u53ef\u80fd\u8fd9\u5757\u4f9d\u8d56\u4e8e\u7b54\u9898\u7ed3\u679c\u662f\u5426\u5728\u5f02\u6b65\u5904\u7406\u540e\u83b7\u5f97\u7b54\u9898\u60c5\u51b5\u503c\uff0c\u540e\u7eed\u518d\u4f18\u5316\n                while (StringUtils.isBlank(nowSubmit.getJudgeInfo()) || \"{}\".equals(nowSubmit.getJudgeInfo()))\n                {\n                    TimeUnit.SECONDS.sleep(5);\n                    nowSubmit = questionSubmitService.getById(nowSubmit.getId());\n                }\n            } catch (InterruptedException e)\n            {\n                e.printStackTrace();\n            }\n        }\n        JudgeInfo judgeInfo = JSONUtil.toBean(nowSubmit.getJudgeInfo(), JudgeInfo.class);\n        gameDetailUnit.setTimeCost(Math.toIntExact(judgeInfo.getTime()));\n        gameDetailUnit.setMemoryCost(Math.toIntExact(judgeInfo.getMemory()));\n        String judgeInfoMessage = judgeInfo.getMessage();\n        // todo \u6253\u5206\u903b\u8f91\u540e\u7eed\u53ef\u4ee5\u518d\u5b8c\u5584\uff0c\u7b49\u5224\u9898\u673a\u5199\u5b8c\u540e\n        if (JudgeInfoMessageEnum.ACCEPTED.getValue().equals(judgeInfoMessage))\n        {\n            // \u5982\u679cACCEPTED\u5219\u6253\u6ee1\u5206\n            gameDetailUnit.setScore(questionIdToFullScore.get(nowSubmit.getQuestionId()));\n        } else\n        {\n            gameDetailUnit.setScore(0);\n        }\n        return gameDetailUnit;\n    }\n```\n\n### \u7edf\u8ba1\u6a21\u5757\n\n![](https://pic.yupi.icu/5563/202401161913378.png) \u5904\u7406\u6392\u884c\u699c\u6570\u636e\u548c\u6392\u5e8f\u7684\u4ee3\u7801\u5982\u4e0b\uff08\u903b\u8f91\u770b\u6ce8\u91ca)\n\n```java\n    @Override\n    public List<GameRankDetail> getRankByGameId(long gameId)\n    {\n        // \u83b7\u5f97\u7ade\u8d5b\u7684\u9898\u76eeid\n        QueryWrapper<GameQuestion> gameQuestionQueryWrapper = new QueryWrapper<>();\n        gameQuestionQueryWrapper.eq(\"gameId\", gameId);\n        List<GameQuestion> gameQuestions = gameQuestionMapper.selectList(gameQuestionQueryWrapper);\n        List<Long> gameQuestionIds = gameQuestions.stream().map(GameQuestion::getQuestionId).collect(Collectors.toList());\n        // \u83b7\u5f97\u53c2\u52a0\u7ade\u8d5b\u7684\u6240\u6709\u7528\u6237\n        QueryWrapper<UserGame> userGameQueryWrapper = new QueryWrapper<>();\n        userGameQueryWrapper.eq(\"gameId\", gameId);\n        List<UserGame> userGames = userGameMapper.selectList(userGameQueryWrapper);\n        List<Long> userIds = userGames.stream().map(UserGame::getUserId).collect(Collectors.toList());\n        // \u8ba1\u7b97\u7528\u6237\u6700\u4f18\u7b54\u9898\u96c6\u5408\n        List<GameRankDetail> gameRankDetails = new ArrayList<>(userGames.size());\n        for (Long userId : userIds)\n        {\n            // \u83b7\u5f97\u6392\u540d\u8bb0\u5f55\n            QueryWrapper<GameRank> gameRankQueryWrapper = new QueryWrapper<>();\n            gameRankQueryWrapper.eq(\"userId\", userId).eq(\"gameId\", gameId);\n            GameRank gameRank = gameRankMapper.selectOne(gameRankQueryWrapper);\n            // \u65e0\u6392\u540d\u8bb0\u5f55\u5219\u65b0\u5efa\n            User user = userService.getById(userId);\n            GameRankDetail gameRankDetail = new GameRankDetail();\n            gameRankDetail.setUserId(userId);\n            gameRankDetail.setUserName(user.getUserName());\n            gameRankDetail.setTotalScore(0);\n            gameRankDetail.setTotalMemory(0);\n            gameRankDetail.setTotalTime(0);\n            // \u65e0\u6392\u540d\u8bb0\u5f55\u5219\u65b0\u5efa\n            if (gameRank == null)\n            {\n                gameRank = new GameRank();\n                gameRank.setGameId(gameId);\n                gameRank.setUserId(userId);\n                gameRank.setUserName(user.getUserName());\n                gameRank.setTotalScore(0);\n                gameRank.setTotalMemory(0);\n                gameRank.setTotalTime(0);\n                gameRankMapper.insert(gameRank);\n                gameRankDetail.setQuestionDetails(getQuestionDetails(gameQuestionIds, null));\n            } else\n            {\n                // \u6709\u6392\u540d\u8bb0\u5f55\u4f46\u65e0\u8fd9\u9053\u9898\u5219\u65b0\u5efa\n                if (StringUtils.isBlank(gameRank.getGameDetail()))\n                {\n                    gameRankDetail.setQuestionDetails(getQuestionDetails(gameQuestionIds, null));\n                } else\n                {\n                    GameDetail gameDetail = JSONUtil.toBean(gameRank.getGameDetail(), GameDetail.class);\n                    // \u7edf\u8ba1\u603b\u5206\u3001\u603b\u8017\u65f6\u548c\u603b\u597d\u7a7a\u95f4\n                    calcGameDetailConfig(gameDetail, gameRankDetail);\n                    // \u66f4\u65b0\u9898\u76ee\u8be6\u60c5\n                    gameRankDetail.setQuestionDetails(getQuestionDetails(gameQuestionIds, gameDetail));\n                }\n            }\n            gameRankDetails.add(gameRankDetail);\n        }\n        // \u6392\u5e8f\n        List<GameRankDetail> orderGameRankDetails = gameRankDetails.stream().sorted(Comparator.comparing(GameRankDetail::getTotalScore).reversed().thenComparing(GameRankDetail::getTotalTime).thenComparing(GameRankDetail::getTotalMemory)).collect(Collectors.toList());\n        // \u5b89\u6392\u540d\u6b21\n        for (int i = 0; i < orderGameRankDetails.size(); i++)\n        {\n            orderGameRankDetails.get(i).setRankOrder(i + 1);\n        }\n        // \u8fd4\u56de\n        return orderGameRankDetails;\n    }\n```\n\n## \u6548\u679c\u5c55\u793a\n\n\u6700\u7ec8\u5c55\u793a\u6548\u679c\u5982\u4e0b\uff0c\u53ef\u4ee5\u8fbe\u5230\u5c3d\u53ef\u80fd\u663e\u793a\u7684\u6548\u679c\uff1a \u7ade\u8d5b\u5f00\u59cb\u540e\uff0c\u672a\u7b54\u9898\u524d\u83b7\u53d6\u6392\u884c\u699c\u6570\u636e\u4f1a\u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u7c7b\u4f3c\u4e0b\u56fe\uff1a ![](https://pic.yupi.icu/5563/202401161913556.png) \u6709\u7528\u6237\u7b54\u9898\u540e\u4f1a\u66f4\u65b0\u6392\u884c\u699c\u6570\u636e\uff0c\u7c7b\u4f3c\u4e0b\u56fe\uff1a ![](https://pic.yupi.icu/5563/202401161913561.png)"}