{"data": "# EasyExcel \u5bfc\u51fa\u6587\u4ef6\n\n> \u4f5c\u8005\uff1a[\u7384\u5fb7\u044c](https://xuande-hk.gitee.io/)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 3107\n\n## EasyExcel\u5bfc\u51fa\u6587\u4ef6\uff0c\u5e76\u89e3\u51b3\u683c\u5f0f\u62a5\u9519\n\n\u9879\u76ee\u4e2d\u4f7f\u7528EasyExcel\u5bfc\u51fa\u6570\u636e\n\n## EasyExcel\u5bfc\u51fa\u6570\u636e\n\n### \u5f15\u5165pom\u6587\u4ef6\n\n```xml\n<!-- easy-excel -->\n<dependency>\n\t<groupId>com.alibaba</groupId>\n\t<artifactId>easyexcel</artifactId>\n\t<version>3.2.1</version>\n</dependency>\n```\n\n### \u5b9a\u4e49\u5bfc\u51fa\u5bf9\u8c61\n\n```java\n/**\n * Excel\u8ba2\u5355\u4fe1\u606f\u5bfc\u51fa\n *\n * @author \u7384\u5fb7\n */\n@Data\npublic class IndentExcelVO {\n\n    /**\n     * \u8ba2\u5355\u7f16\u53f7\n     */\n    @ColumnWidth(20)\n    @NumberFormat(\"#\")\n    @ExcelProperty(value = \"\u8ba2\u5355\u7f16\u53f7\", index = 0)\n    private String id;\n\n    /**\n     * \u7528\u6237\u59d3\u540d\n     */\n    @ExcelProperty(value = \"\u7528\u6237\u59d3\u540d\", index = 1)\n    private String realName;\n\n    /**\n     * \u624b\u673a\u53f7\n     */\n    @ColumnWidth(15)\n    @ExcelProperty(value = \"\u624b\u673a\u53f7\", index = 2)\n    private String information;\n\n    /**\n     * \u63a5\u4eb2\u65e5\u671f\n     */\n    @ColumnWidth(15)\n    @ExcelProperty(value = \"\u63a5\u4eb2\u65e5\u671f\", index = 3)\n    private String date_time;\n\n    /**\n     * \u5f00\u59cb\u65f6\u95f4\n     */\n    @ColumnWidth(15)\n    @ExcelProperty(value = \"\u5f00\u59cb\u65f6\u95f4\", index = 4)\n    private String start_time;\n\n    /**\n     * \u7ed3\u675f\u65f6\u95f4\n     */\n    @ColumnWidth(15)\n    @ExcelProperty(value = \"\u7ed3\u675f\u65f6\u95f4\", index = 5)\n    private String end_time;\n\n    /**\n     * \u63a5\u4eb2\u5730\u5740\n     */\n    @ColumnWidth(20)\n    @ExcelProperty(value = \"\u63a5\u4eb2\u5730\u5740\", index = 6)\n    private String address;\n\n    /**\n     * \u8ba2\u5355\u603b\u91d1\u989d\n     */\n    @NumberFormat(\"#\")\n    @ExcelProperty(value = \"\u8ba2\u5355\u603b\u91d1\u989d\", index = 7)\n    private Double amount;\n\n    /**\n     * \u8ba2\u5355\u72b6\u6001\n     */\n    @ExcelProperty(value = \"\u8ba2\u5355\u72b6\u6001\", index = 8)\n    private String indent_state;\n\n    /**\n     * \u652f\u4ed8\u72b6\u6001\n     */\n    @ExcelProperty(value = \"\u652f\u4ed8\u72b6\u6001\", index = 9)\n    private String payment_state;\n\n    /**\n     * \u8ba2\u5355\u521b\u5efa\u65f6\u95f4\n     */\n    @ColumnWidth(15)\n    @ExcelProperty(value = \"\u8ba2\u5355\u521b\u5efa\u65f6\u95f4\", index = 10)\n    private String createTime;\n\n}\n```\n\n### \u5b9a\u4e49\u5de5\u5177\u7c7b\n\n```java\n/**\n * Excel\u5de5\u5177\u7c7b\n *\n * @author \u7384\u5fb7\n */\npublic class ExcelUtils {\n\n    /**\n     * \u83b7\u53d6\u8def\u5f84\n     *\n     * @return \u5f53\u524d\u8def\u5f84\n     */\n    public static String getPath() {\n        return ExcelUtils.class.getResource(\"/\").getPath();\n    }\n\n    /**\n     * \u521b\u5efa\u65b0\u6587\u4ef6\n     *\n     * @param pathName \u6587\u4ef6\u540d\n     * @return \u6587\u4ef6\n     */\n    public static File createNewFile(String pathName) {\n        File file = new File(getPath() + pathName);\n        if (file.exists()) {\n            file.delete();\n        } else {\n            if (!file.getParentFile().exists()) {\n                file.getParentFile().mkdirs();\n            }\n        }\n        return file;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u54cd\u5e94\u7ed3\u679c\n     *\n     * @param response    \u54cd\u5e94\u7ed3\u679c\u5bf9\u8c61\n     * @param rawFileName \u6587\u4ef6\u540d\n     */\n    public static void setExcelResponseProp(HttpServletResponse response, String rawFileName) throws IOException {\n        //\u8bbe\u7f6e\u5185\u5bb9\u7c7b\u578b\n        response.setContentType(\"application/vnd.vnd.ms-excel\");\n        //\u8bbe\u7f6e\u7f16\u7801\u683c\u5f0f\n        response.setCharacterEncoding(\"utf-8\");\n        //\u8bbe\u7f6e\u5bfc\u51fa\u6587\u4ef6\u540d\u79f0\uff08\u907f\u514d\u4e71\u7801\uff09\n        String fileName = URLEncoder.encode(rawFileName.concat(\".xlsx\"), \"UTF-8\");\n        // \u8bbe\u7f6e\u54cd\u5e94\u5934\n        response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName);\n    }\n\n    /**\n     * Date\u8f6cString\n     *\n     * @param date \u65e5\u671f\n     * @return \u5b57\u7b26\u4e32\n     */\n    public static String dateToString(Date date) {\n        if (date == null) {\n            throw new BusinessException(ErrorCode.NOT_FOUND_ERROR);\n        }\n        // Date\u8f6c\u6362\u4e3aString\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        return sdf.format(date);\n    }\n\n}\n```\n\n### \u7f16\u5199\u63a5\u53e3\n\n```java\n/**\n * \u8ba2\u5355\u4fe1\u606f\u5bfc\u51fa\n */\n@GetMapping(\"/download\")\n@AuthCheck(mustRole = ADMIN_ROLE)\npublic void download(HttpServletResponse response) throws IOException {\n    // \u83b7\u53d6\u6570\u636e\uff0c\u6839\u636e\u81ea\u8eab\u4e1a\u52a1\u4fee\u6539\n    List<Indent> data = indentService.list();\n    List<IndentExcelVO> indentList = data.stream().map(item -> {\n        IndentExcelVO indentExcelVO = new IndentExcelVO();\n        BeanUtils.copyProperties(item, indentExcelVO);\n        // Date\u8f6c\u5b57\u7b26\u4e32\n        indentExcelVO.setDate_time(ExcelUtils.dateToString(item.getDate_time()));\n        indentExcelVO.setCreateTime(ExcelUtils.dateToString(item.getCreateTime()));\n        return indentExcelVO;\n    }).collect(Collectors.toList());\n    // \u8bbe\u7f6e\u5bfc\u51fa\u540d\u79f0\n    ExcelUtils.setExcelResponseProp(response, \"\u8ba2\u5355\u4fe1\u606f\");\n    // \u83b7\u53d6\u8f93\u51fa\u6d41\u540d\u79f0\n    OutputStream outputStream = response.getOutputStream();\n    // \u8fd9\u91cc \u9700\u8981\u6307\u5b9a\u5199\u7528\u54ea\u4e2aclass\u53bb\u5199\uff0c\u7136\u540e\u5199\u5230\u7b2c\u4e00\u4e2asheet\uff0c\u540d\u5b57\u4e3a\u6a21\u677f \u7136\u540e\u6587\u4ef6\u6d41\u4f1a\u81ea\u52a8\u5173\u95ed\n    EasyExcel.write(outputStream, IndentExcelVO.class)  // \u5bf9\u5e94\u5b9e\u4f53\u7c7b\n        .sheet(\"\u8ba2\u5355\u6570\u636e\")  // sheet\u9875\u540d\u79f0\n        .doWrite(indentList); // \u5bfc\u51fa\u7684\u6570\u636e\u96c6\u5408\n}\n```\n\n### \u9047\u5230\u7684\u95ee\u9898\n\n> \u5173\u4e8eDate\u5b57\u6bb5\u5bfc\u51fa\u95ee\u9898\n\n\u542f\u52a8\u670d\u52a1\uff0c\u8c03\u7528\u63a5\u53e3\uff0c\u6210\u529f\u5bfc\u51fa Excel\u6587\u4ef6\uff0c\u4f46\u662f\u6587\u4ef6\u6ca1\u6709\u6570\u636e\uff0c\u4e14\u62a5\u9519\uff1a`Can not find \u2018Converter\u2018 support class Date.`\n\n\u62a5\u9519\u539f\u56e0\uff1a\u5bfc\u51fa Excel \u8868\u683c\u65f6\u5019\uff0c\u9ed8\u8ba4\u4e0d\u652f\u6301 DateTime \u65e5\u671f\u683c\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u6307\u5b9a DateTime \u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u65e5\u671f\u683c\u5f0f\u3002\n\n\u89e3\u51b3\u65b9\u5f0f1\uff1a\u5c06Date\u8f6c\u6362\u4e3aString\n\n```java\nList<IndentExcelVO> indentList = data.stream().map(item -> {\n    IndentExcelVO indentExcelVO = new IndentExcelVO();\n    BeanUtils.copyProperties(item, indentExcelVO);\n    // Date\u8f6c\u5b57\u7b26\u4e32\n    indentExcelVO.setDate_time(ExcelUtils.dateToString(item.getDate_time()));\n    indentExcelVO.setCreateTime(ExcelUtils.dateToString(item.getCreateTime()));\n    return indentExcelVO;\n}).collect(Collectors.toList());\n```\n\n\u89e3\u51b3\u65b9\u5f0f2\uff1a\u5b9a\u4e49\u8f6c\u6362\u5668\n\n"}