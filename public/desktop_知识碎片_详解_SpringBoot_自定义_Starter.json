{"data": "# \u8be6\u89e3 SpringBoot \u81ea\u5b9a\u4e49 Starter\n\n> \u4f5c\u8005\uff1a[\u89c2\u6b62.](https://www.code-nav.cn/user/1619305100524748802)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 6872\n\n## \u4e00.\u6982\u8ff0\n\n\u5728\u4f7f\u7528SpringBoot\u8fdb\u884c\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53d1\u73b0\u4f7f\u7528\u5f88\u591a\u6280\u672f\u90fd\u662f\u76f4\u63a5\u5bfc\u5165\u5bf9\u5e94\u7684starter\uff0c\u7136\u540e\u5c31\u5b9e\u73b0\u4e86springboot\u6574\u5408\u5bf9\u5e94\u6280\u672f\uff0c\u518d\u52a0\u4e0a\u4e00\u4e9b\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e86\u3002\u90a3\u4ec0\u4e48\u662fStarter\u5462\uff1f\u4f7f\u7528Starter\u5bf9\u6211\u4eec\u5f00\u53d1\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u81ea\u5b9a\u4e49Starter\u80fd\u5bf9\u6211\u4eec\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462\uff1f\n\n### (1) \u4ec0\u4e48\u662fStarter\uff1f\n\n\u5b98\u65b9\u6587\u6863\u7ed9\u51fa\u4e86\u5982\u4e0b\u63cf\u8ff0:\n\n> Starters are a set of convenient dependency descriptors that you can include in your application. You get a one-stop shop for all the Spring and related technologies that you need without having to hunt through sample code and copy-paste loads of dependency descriptors. For example, if you want to get started using Spring and JPA for database access, include the `spring-boot-starter-data-jpa` dependency in your project.\n\n\u6982\u8ff0\u6765\u8bf4\u5c31\u662f\uff1a\u5f53\u6211\u4eec\u60f3\u4f7f\u7528\u67d0\u9879\u6280\u672f\u4e0eSpring\u7ed3\u5408\u8fdb\u884c\u4f7f\u7528\u65f6\uff0c\u5f88\u591a\u65f6\u5019\u53ef\u76f4\u63a5\u5bfc\u5165\u8be5\u6280\u672f\u7684starter\uff0c\u800c\u4e0d\u5fc5\u518d\u53bb\u627e\u8be5\u6280\u672f\u6240\u4f9d\u8d56\u7684n\u4e2a\u5750\u6807\u4e00\u8d77cv\u8fdb\u53bb\u3002\n\n\u4f8b\u5982\uff1a\u6211\u4eec\u60f3\u4f7f\u7528Spring\u5f00\u53d1web\u9879\u76ee,\u4e0d\u4f7f\u7528Starter\u53ef\u80fd\u9700\u8981\u5bfc\u5165\u8fd9\u4e9b\u5750\u6807:\n\n![](https://pic.yupi.icu/5563/202402112020579.png)\n\n\u6709\u6ca1\u6709\u4e00\u79cd\u60f3\u8dd1\u8def\u7684\u611f\u89c9\uff0c\u6b64\u5916\u5982\u679c\u4f60\u5bfc\u7684\u4e0d\u540cjar\u5305\u4e4b\u95f4\u5b58\u5728\u7248\u672c\u4e0d\u517c\u5bb9\u8fd8\u4f1a\u4ea7\u751f\u4e00\u7cfb\u5217\u7248\u672c\u51b2\u7a81\u95ee\u9898\u3002\u800c\u4f7f\u7528springboot\u63d0\u4f9b\u7684starter\u53ea\u9700\u8981\u5bfc\u5165\u4e00\u4e2a\u5750\u6807\u5373\u53ef\u5305\u542b\u4e0a\u9762\u6240\u6709\u7684jar\u5305\u4ee5\u53ca\u81ea\u52a8\u9002\u914d\u7248\u672c\u3002\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n```\n\n### (2) \u4e3a\u4ec0\u4e48\u8981\u81ea\u5b9a\u4e49Starter\uff1f\n\n**\u95ee\u9898\u4ea7\u751f\uff1a**\n\n\u5728\u6211\u4eec\u7684\u65e5\u5e38\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u6709\u4e00\u4e9b\u72ec\u7acb\u4e8e\u4e1a\u52a1\u4e4b\u5916\u7684\u901a\u7528\u6a21\u5757\uff0c\u5728\u8bb8\u591a\u573a\u666f\u4e0b\u90fd\u80fd\u591f\u7528\u5230\uff0c\u6211\u4eec\u7ecf\u5e38\u5c06\u5176\u5907\u4efd\u5230\u4e00\u4e2a\u5730\u65b9\u4e0b\uff0c\u7136\u540e\u5982\u679c\u5728\u67d0\u4e00\u4e2a\u5de5\u7a0b\u4e2d\u9700\u8981\u7528\u8fd9\u5757\u529f\u80fd\u7684\u65f6\u5019\uff0c\u9700\u8981\u5c06\u4ee3\u7801\u786c\u62f7\u8d1d\u5230\u5176\u4e2d\uff0c\u91cd\u65b0\u96c6\u6210\u4e00\u904d\uff0c\u9ebb\u70e6\u81f3\u6781\u3002\n\n**\u95ee\u9898\u89e3\u51b3\uff1a**\n\n\u6211\u4eec\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e3a\u4e86\u65b9\u4fbf\u5e38\u5e38\u4f1a\u5c01\u88c5\u5404\u79cd\u5de5\u5177\u7c7b\uff0c\u4f7f\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u80fd\u5f88\u65b9\u4fbf\u7684\u8fdb\u884c\u8c03\u7528\u3002\u540c\u6837\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u53ef\u72ec\u7acb\u4e8e\u4e1a\u52a1\u4ee3\u7801\u4e4b\u5916\u7684\u529f\u901a\u7528\u6a21\u5757\u5c01\u88c5\u6210\u4e00\u4e2a\u4e2astarter\uff0c\u590d\u7528\u7684\u65f6\u5019\u53ea\u9700\u8981\u5c06\u5176\u5728pom\u4e2d\u5f15\u7528\u4f9d\u8d56\u5373\u53ef\uff0cSpringBoot\u4e3a\u6211\u4eec\u5b8c\u6210\u81ea\u52a8\u88c5\u914d\uff0c\u7b80\u76f4\u4e0d\u8981\u592a\u723d\u3002\u901a\u8fc7\u6211\u4eec\u81ea\u5b9a\u4e49\u7684Starter\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5927\u7684\u5de5\u5177\u6a21\u5757\uff0c\u5bfc\u5165\u5176\u4ed6\u9879\u76ee\u80fd\u591f\u5feb\u901f\u7684\u5b9e\u73b0\u529f\u80fd\u7684\u5f15\u5165\u4e0e\u5254\u9664\u3002\n\n**\u5e38\u89c1\u573a\u666f\uff1a**\n\n\u4f8b\u5982\u77ed\u4fe1\u53d1\u9001\u6a21\u5757\uff0c\u81ea\u5b9a\u4e49\u4e00\u4e9bsdk\u4f7f\u5f97\u8c03\u7528\u8005\u66f4\u52a0\u65b9\u4fbf\u4f7f\u7528\u7b49\u7b49\u529f\u80fd\u3002\n\n## \u4e8c.\u4f7f\u7528\u793a\u4f8b\n\n### (1) \u5f15\u5165\n\n\u5728\u6211\u4eec\u7684web\u9879\u76ee\u4e2d\uff0c\u4f8b\u5982\u535a\u5ba2\u7b49\uff0c\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u8bb0\u5f55\u7cfb\u7edf\u8bbf\u5ba2IP\u53ca\u8bbf\u95ee\u6b21\u6570\u7684\u529f\u80fd\uff0c\u800c\u8fd9\u4e2a\u529f\u80fd\u6a21\u5757\u53ef\u4ee5\u5e94\u7528\u5230\u5f88\u591a\u7684\u5730\u65b9\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4e00\u8d77\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u6a21\u5757\u6765\u5b66\u4e60\u5982\u4f55\u81ea\u5b9a\u4e49Starter,\u6765\u770b\u770b\u5982\u4f55\u505a\u5230\u53ea\u9700\u8981\u4e00\u4e2aStarter\u5750\u6807\u4ee5\u53ca\u7b80\u5355\u7684yml\u914d\u7f6e\u5373\u53ef\u5728\u9879\u76ee\u4e2d\u65e0\u611f\u5f15\u5165\u6216\u6458\u9664\u8fd9\u4e2a\u529f\u80fd\u6a21\u5757\u3002\n\n![](https://pic.yupi.icu/5563/202402112021560.png)\n\n**\u529f\u80fd\u4ecb\u7ecd\uff1a**\n\n\u672c\u6848\u4f8b\u7684\u529f\u80fd\u662f\u7edf\u8ba1\u7f51\u7ad9\u72ec\u7acbIP\u8bbf\u95ee\u6b21\u6570\u7684\u529f\u80fd\uff0c\u5e76\u5c06\u8bbf\u95ee\u4fe1\u606f\u5728\u540e\u53f0\u6301\u7eed\u8f93\u51fa\u3002\u6574\u4f53\u529f\u80fd\u662f\u5728\u540e\u53f0\u6bcf10\u79d2\u8f93\u51fa\u4e00\u6b21\u76d1\u63a7\u4fe1\u606f\uff08\u683c\u5f0f\uff1aIP+\u8bbf\u95ee\u6b21\u6570\uff09 \uff0c\u5f53\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0c\u5bf9\u7528\u6237\u7684\u8bbf\u95ee\u884c\u4e3a\u8fdb\u884c\u7edf\u8ba1\u3002\n\n\u4f8b\u5982\uff1a\u5f20\u4e09\u8bbf\u95ee\u7f51\u7ad9\u529f\u80fd15\u6b21\uff0cIP\u5730\u5740\uff1a192.168.0.135\uff0c\u674e\u56db\u8bbf\u95ee\u7f51\u7ad9\u529f\u80fd20\u6b21\uff0cIP\u5730\u5740\uff1a61.129.65.248\u3002\u90a3\u4e48\u5728\u7f51\u7ad9\u540e\u53f0\u5c31\u8f93\u51fa\u5982\u4e0b\u76d1\u63a7\u4fe1\u606f\uff0c\u6b64\u4fe1\u606f\u6bcf10\u79d2\u5237\u65b0\u4e00\u6b21\u3002\n\n```tex\n         IP\u8bbf\u95ee\u76d1\u63a7\n+-----ip-address-----+--num--+\n|     192.168.0.135  |   15  |\n|     61.129.65.248  |   20  |\n+--------------------+-------+\n```\n\n**\u5b9e\u73b0\u5206\u6790\uff1a**\n\n1. \u5982\u4f55\u8bb0\u5f55\u8bbf\u95ee\u6570\u636e\n\n   \u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u8bb0\u5f55\u7684\u6570\u636e\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08IP\u5730\u5740\uff09\u5bf9\u5e94\u4e00\u4e2a\u6570\u5b57\uff08\u8bbf\u95ee\u6b21\u6570\uff09\u7684\u5f62\u5f0f\uff0c\u6b64\u5904\u5b58\u50a8\u6570\u636e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528java\u63d0\u4f9b\u7684map\u6a21\u578b\uff0c\u4e5f\u5c31\u662fkey-value\u7684\u952e\u503c\u5bf9\u6a21\u578b\uff0c\u6216\u8005\u5177\u6709key-value\u952e\u503c\u5bf9\u6a21\u578b\u7684\u5b58\u50a8\u6280\u672f\uff0c\u4f8b\u5982redis\u6280\u672f\u3002\u672c\u6848\u4f8b\u4f7f\u7528map\u4f5c\u4e3a\u5b9e\u73b0\u65b9\u6848\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4f7f\u7528redis\u4f5c\u4e3a\u89e3\u51b3\u65b9\u6848\u3002\n\n2. \u7edf\u8ba1\u529f\u80fd\u8fd0\u884c\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6bcf\u6b21web\u8bf7\u6c42\u90fd\u9700\u8981\u8fdb\u884c\u7edf\u8ba1\uff0c\u6211\u4eec\u6709\u82e5\u5e72\u4e2a\u63a5\u53e3\uff0c\u4e0d\u53ef\u80fd\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u90fd\u624b\u52a8\u8c03\u7528\u4e00\u904d\u5427\uff1f\u56e0\u6b64\u4f7f\u7528\u62e6\u622a\u5668\u4f1a\u662f\u6bd4\u8f83\u597d\u7684\u9009\u62e9\u3002\u4e0d\u8fc7\u5728\u5b9e\u73b0\u521d\u671f\uff0c\u5148\u4f7f\u7528\u8c03\u7528\u7684\u5f62\u5f0f\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7b49\u529f\u80fd\u5b8c\u6210\u4e86\uff0c\u518d\u6539\u6210\u62e6\u622a\u5668\u7684\u5b9e\u73b0\u65b9\u6848\u3002\n\n3. \u4e3a\u4e86\u63d0\u5347\u7edf\u8ba1\u6570\u636e\u5c55\u793a\u7684\u7075\u6d3b\u5ea6\uff0c\u4e3a\u7edf\u8ba1\u529f\u80fd\u6dfb\u52a0\u914d\u7f6e\u9879\u3002\u8f93\u51fa\u9891\u5ea6\uff0c\u8f93\u51fa\u7684\u6570\u636e\u683c\u5f0f\uff0c\u7edf\u8ba1\u6570\u636e\u7684\u663e\u793a\u6a21\u5f0f\u5747\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u5b9e\u73b0\u8c03\u6574\u3002\n\n- \u8f93\u51fa\u9891\u5ea6\uff0c\u9ed8\u8ba410\u79d2\n- \u6570\u636e\u7279\u5f81\uff1a\u7d2f\u8ba1\u6570\u636e / \u9636\u6bb5\u6570\u636e\uff0c\u9ed8\u8ba4\u7d2f\u8ba1\u6570\u636e\n- \u8f93\u51fa\u683c\u5f0f\uff1a\u8be6\u7ec6\u6a21\u5f0f / \u6781\u7b80\u6a21\u5f0f\n\n> A typical Spring Boot starter contains code to auto-configure and customize the infrastructure of a given technology, let\u2019s call that \"acme\". To make it easily extensible, a number of configuration keys in a dedicated namespace can be exposed to the environment. Finally, a single \"starter\" dependency is provided to help users get started as easily as possible.\n\n**\u6982\u8ff0\u6765\u8bf4\u5c31\u662f**\uff1a\u6211\u4eec\u5728\u5f15\u5165\u4e00\u4e2astarter\u540e\u53ef\u8f7b\u677e\u5f00\u59cb\u4f7f\u7528\u5e76\u4e14\u80fd\u591f\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u53c2\u6570\u5bf9\u5176\u5b9e\u73b0\u7075\u6d3b\u8c03\u6574\u3002\n\n\u5982\u6b64\u6211\u4eec\u4fbf\u6309\u7167\u5b98\u65b9\u6587\u6863\u6240\u63a8\u8350\u7528\u6cd5\u7b80\u5355\u7684\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7b80\u5355starter~\n\n**\u9879\u76ee\u6574\u4f53\u7ed3\u6784\u4e00\u89c8\uff1a**\n\n![](https://pic.yupi.icu/5563/202402112022436.png)\n\n### (2) \u529f\u80fd\u5f00\u53d1\n\n### (2.1) \u73af\u5883\u642d\u5efa\n\n\u521b\u5efa\u4e00\u4e2aSpringBoot\u5de5\u7a0b\uff0c\u5b9e\u73b0\u672c\u6848\u4f8b\u76f8\u5173\u529f\u80fd\u53ea\u9700\u8981\u5bfc\u5165\u5982\u4e0b\u5750\u6807\u5373\u53ef\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n```\n\n### (2.2) \u7edf\u8ba1\u8bbf\u95eeip&\u6b21\u6570\n\n\u529f\u80fd\u7c7b\u7684\u5236\u4f5c\u5e76\u4e0d\u590d\u6742\uff0c\u521b\u5efa\u4e00\u4e2a\u4e1a\u52a1\u7c7b\uff0c\u58f0\u660e\u4e00\u4e2aMap\u5bf9\u8c61\uff0c\u7528\u4e8e\u8bb0\u5f55ip\u8bbf\u95ee\u6b21\u6570\uff0ckey\u662fip\u5730\u5740\uff0cvalue\u662f\u8bbf\u95ee\u6b21\u6570\u3002\u5236\u4f5c\u7edf\u8ba1\u64cd\u4f5c\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21\u8bbf\u95ee\u540e\u5bf9\u5e94ip\u7684\u8bb0\u5f55\u6b21\u6570+1\u3002\u9700\u8981\u5206\u60c5\u51b5\u5904\u7406\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u5bf9\u5e94ip\u7684\u6570\u636e\uff0c\u65b0\u589e\u4e00\u6761\u6570\u636e\uff0c\u5426\u5219\u5c31\u4fee\u6539\u5bf9\u5e94key\u7684\u503c+1\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u5f53\u524d\u529f\u80fd\u6a21\u5757\u6700\u7ec8\u9700\u8981\u5bfc\u5165\u5230\u5176\u4ed6\u9879\u76ee\u4e2d\u8fdb\u884c\uff0c\u800c\u5bfc\u5165\u5f53\u524d\u529f\u80fd\u7684\u9879\u76ee\u662f\u4e00\u4e2aweb\u9879\u76ee\uff0c\u53ef\u4ee5\u4ece\u5bb9\u5668\u4e2d\u76f4\u63a5\u83b7\u53d6\u8bf7\u6c42\u5bf9\u8c61\uff0c\u56e0\u6b64\u83b7\u53d6IP\u5730\u5740\u7684\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u81ea\u52a8\u88c5\u914d\u5f97\u5230\u8bf7\u6c42\u5bf9\u8c61\uff0c\u7136\u540e\u83b7\u53d6\u5bf9\u5e94\u7684\u8bbf\u95eeIP\u5730\u5740\u3002\n\n```JAVA\npublic class IpCountService {\n    // 1.\u5f53\u524d\u7c7b\u52a0\u8f7d\u6210bean\u4ee5\u540e\u662f\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\uff0c\u4e0d\u5b58\u5728\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u6570\u636e\u7684\u95ee\u9898\n   //  \u56e0\u6b64\u4e0d\u7528\u8bbe\u7f6e\u4e3astatic\u9759\u6001\u53d8\u91cf\n    private Map<String, Integer> ipCountMap = new HashMap<>();\n\n    // 2. \u4ece\u5bb9\u5668\u4e2d\u76f4\u63a5\u83b7\u53d6\u8bf7\u6c42\u5bf9\u8c61\n    @Resource\n    private HttpServletRequest httpServletRequest;\n\n    // 3. \u7edf\u8ba1ip&\u6b21\u6570\n    public void count() {\n        System.out.println(\"----\u89e6\u53d1\u7edf\u8ba1ip&\u6b21\u6570\u65b9\u6cd5------\");\n        //\u6bcf\u6b21\u8c03\u7528\u5f53\u524d\u64cd\u4f5c\uff0c\u5c31\u8bb0\u5f55\u5f53\u524d\u8bbf\u95ee\u7684IP\uff0c\u7136\u540e\u7d2f\u52a0\u8bbf\u95ee\u6b21\u6570\n        //1.\u83b7\u53d6\u5f53\u524d\u64cd\u4f5c\u7684IP\u5730\u5740\n        String ip = httpServletRequest.getRemoteAddr();\n        //2.\u6839\u636eIP\u5730\u5740\u4eceMap\u53d6\u503c\uff0c\u5e76\u9012\u589e\u6b21\u6570\n        ipCountMap.put(ip, ipCountMap.getOrDefault(ip, 0) + 1);\n    }\n}\n```\n\n### (2.3) \u5b9a\u4e49\u81ea\u52a8\u914d\u7f6e\u7c7b\n\n**\u6b65\u9aa4\u4e00\uff1a\u5b9a\u4e49\u81ea\u52a8\u914d\u7f6e\u7c7b**\n\n\u6211\u4eec\u9700\u8981\u505a\u5230\u7684\u6548\u679c\u662f\u5bfc\u5165\u5f53\u524d\u6a21\u5757\u5373\u53ef\u542f\u52a8\u6a21\u5757\u63d0\u4f9b\u529f\u80fd\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u81ea\u52a8\u914d\u7f6e\u5b9e\u73b0\u529f\u80fd\u7684\u81ea\u52a8\u88c5\u8f7d\uff0c\u9700\u8981\u6211\u4eec\u521b\u5efa\u81ea\u52a8\u914d\u7f6e\u7c7b\u5728\u542f\u52a8\u9879\u76ee\u65f6\u52a0\u8f7d\u5f53\u524d\u529f\u80fd\u3002\n\n```JAVA\npublic class IpAutoConfiguration {\n    @Bean\n    public IpCountService ipCountService(){\n        return new IpCountService();\n    }\n}\n```\n\n**\u6b65\u9aa4\u4e8c\uff1a\u52a0\u8f7d\u81ea\u52a8\u914d\u7f6e\u7c7b**\n\n\u5728\u521b\u5efa\u7684`spring.factories`\u6587\u4ef6\u5bf9\u5176\u8fdb\u884c\u914d\u7f6e\u4f7f\u5f97\u5176\u53d8\u6210\u81ea\u52a8\u914d\u7f6e\u7c7b\u52a0\u8f7d\u3002\n\n```properties\n# Auto Configure\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=cn.guanzhi.autoconfig.IpAutoConfiguration\n```\n\n**\u9879\u76ee\u52a0\u8f7d\u6d41\u7a0b**\uff1a\u52a0\u8f7d\u6a21\u5757 -> \u52a0\u8f7d`spring.factories`\u6587\u4ef6 -> \u52a0\u8f7d`IpAutoConfiguration`\u7c7b -> \u52a0\u8f7d`IpCountService`\u7c7b\n\n**\u6211\u4eec\u5df2\u7ecf\u81ea\u5b9a\u4e49\u597d\u4e86\u4e00\u4e2astarter**\uff01\u9707\u60ca\u4e0d\uff1f\u5df2\u7ecf\u53ef\u4ee5\u5bfc\u5165\u5176\u4ed6\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\uff0c\u53ea\u80fd\u529f\u80fd\u6ca1\u5f00\u59cb\u63cf\u8ff0\u7684\u90a3\u4e48\u9f50\u5168\u3002\n\n### (2.4) \u5728\u65b0\u9879\u76ee\u6d4b\u8bd5\u529f\u80fd(\u7ec8)\n\n**\u6b65\u9aa4\u4e00\uff1a\u5b89\u88c5\u5230\u672c\u5730**\n\n\u5148\u5728\u81ea\u5b9a\u4e49Starter\u9879\u76ee\u4e2d\u7528Maven:install\u4e00\u4e0b\uff0c\u4f7f\u5f97\u5176\u80fd\u91cd\u65b0\u7f16\u8bd1\u5e76\u5b89\u88c5\u5230\u672c\u5730\u4ed3\u5e93\uff0c\u4ee5\u4fbf\u6211\u4eec\u5728\u5176\u4ed6\u9879\u76ee\u4e2d\u5bfc\u5165\u5750\u6807\u80fd\u591f\u83b7\u53d6\u5230\u8be5\u5750\u6807\u3002\n\n![](https://pic.yupi.icu/5563/202402112022453.png)\n\n**\u6b65\u9aa4\u4e8c\uff1a\u521b\u5efa\u6d4b\u8bd5\u9879\u76ee**\n\n\u4e3a\u4e86\u6d4b\u8bd5\u529f\u80fd\u9700\u8981\uff08\u4e5f\u53ef\u4ee5\u5728\u5df2\u6709\u7684web\u9879\u76ee\u4e2d\u8fdb\u884c\u6d4b\u8bd5\uff09\uff0c\u6211\u4eec\u518d\u521b\u5efa\u4e00\u4e2aspringboot\u7684web\u5de5\u7a0b\u3002\n\n**\u5bfc\u5165\u5750\u6807\uff1a**\n\n```xml\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n```\n\n**\u521b\u5efa\u6d4b\u8bd5\u63a5\u53e3\uff1a**\n\n```java\n@RestController\npublic class DemoController {\n\n    @GetMapping(\"/guanzhi\")\n    public void ipDemo() {\n    \tSystem.out.println(\"\u65b9\u6cd5\u89e6\u53d1\u6210\u529f\")\n    }\n\n}\n```\n\n**\u6b65\u9aa4\u4e09\uff1a\u5bfc\u5165\u9879\u76ee**\n\n\u5728\u8c03\u7528\u9879\u76ee\u4e2d\u5bfc\u5165\u6211\u4eec\u81ea\u5df1\u5f00\u53d1\u7684starter\u8fdb\u884c\u4f7f\u7528\n\n```XML\n<dependency>\n    <groupId>cn.guanzhi</groupId>\n    <artifactId>ip-spring-boot-starter</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n</dependency>\n```\n\n**\u6b65\u9aa4\u56db\uff1a\u8fdb\u884c\u8c03\u7528**\n\n\u7531\u4e8e\u6211\u4eec\u5f00\u53d1\u7684\u529f\u80fd\u8fd8\u4e0d\u5b8c\u5584\uff0c\u6682\u65f6\u9700\u8981\u81ea\u5df1\u6ce8\u5165`ipCountService`\u5bf9\u8c61\u5e76\u8c03\u7528`count`\u65b9\u6cd5\u8fdb\u884c\u4f7f\u7528\u3002\n\n```JAVA\n@RestController\npublic class DemoController {\n    @Resource\n    private IpCountService ipCountService;\n    \n    @GetMapping(\"/guanzhi\")\n    public void ipDemo() {\n        ipCountService.count();\n    \tSystem.out.println(\"\u65b9\u6cd5\u89e6\u53d1\u6210\u529f\");\n    }\n}\n```\n\n**\u6b65\u9aa4\u4e94\uff1a\u6548\u679c\u68c0\u9a8c**\n\n\u5f53\u6211\u4eec\u53d1\u9001\u8bf7\u6c42\u8c03\u7528\u8be5\u65b9\u6cd5\u540e\uff0c\u80fd\u591f\u89e6\u53d1\u6211\u4eec\u5728starter\u4e2d\u5b9a\u4e49count\u65b9\u6cd5\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u5f53\u524d\u8bbf\u95ee\u7684IP\u5730\u5740\uff0c\u6b64\u529f\u80fd\u53ef\u4ee5\u5728count\u64cd\u4f5c\u4e2d\u6dfb\u52a0\u65e5\u5fd7\u6216\u8005\u8f93\u51fa\u8bed\u53e5\u8fdb\u884c\u6d4b\u8bd5\u3002\n\n![](https://pic.yupi.icu/5563/202402112022019.png)\n\n**\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u4f7f\u7528\u4e86\u6211\u4eec\u81ea\u5b9a\u4e49Starter\u4e2d\u7684\u65b9\u6cd5**\uff0c\u5c31\u662f\u529f\u80fd\u6709\u70b9\u7b80\u964b\uff0c\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u4e00\u8d77\u9010\u6b65\u5b8c\u5584\u529f\u80fd\u7ec6\u8282\u5427\u3002\n\n### (2.5) \u5b9a\u65f6\u6253\u5370\u65e5\u5fd7\n\n\u5f53\u524d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5728\u4e1a\u52a1\u529f\u80fd\u7c7b\u4e2d\u8bb0\u5f55\u8bbf\u95ee\u6570\u636e\uff0c\u4f46\u662f\u5177\u4f53\u8fd8\u6ca1\u6709\u8f93\u51fa\u76d1\u63a7\u7684\u4fe1\u606f\u5230\u63a7\u5236\u53f0\u3002\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u76d1\u63a7\u4fe1\u606f\u6bcf5\u79d2\u6253\u53701\u6b21\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u5b9a\u65f6\u5668\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9Spring\u5185\u7f6e\u7684task\u6765\u5b8c\u6210\u6b64\u529f\u80fd\u3002\n\n**\u6b65\u9aa4\u4e00\uff1a\u5f00\u542f\u914d\u7f6e**\n\n\u4f7f\u7528\u5b9a\u65f6\u4efb\u52a1\u529f\u80fd\u9700\u8981\u5728\u5f53\u524d\u9879\u76ee\u7684\u603b\u914d\u7f6e\u4e2d\u8fdb\u884c\u5f00\u542f\uff0c\u4f8b\u5982\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e0a\u52a0\u4e0a\u5982\u4e0b\u6ce8\u89e3\u5f00\u542f\u3002\u52a0\u8f7d\u81ea\u52a8\u914d\u7f6e\u7c7b\u65f6\u5373\u542f\u7528\u5b9a\u65f6\u4efb\u52a1\u529f\u80fd\u3002\n\n```JAVA\n@EnableScheduling\npublic class IpAutoConfiguration {\n    @Bean\n    public IpCountService ipCountService(){\n        return new IpCountService();\n    }\n}\n```\n\n**\u6b65\u9aa4\u4e8c\uff1a\u8bbe\u7f6e\u9891\u7387**\n\n\u5b9a\u4e49\u4e00\u4e2a\u6253\u5370\u7edf\u8ba1\u8bbf\u95eeIp&\u8bbf\u95ee\u6b21\u6570\u7684print()\u65b9\u6cd5\uff0c\u5e76\u8bbe\u7f6e\u5b9a\u65f6\u4efb\u52a1\uff0c\u4f7f\u5f97\u5176\u6bcf5\u79d2\u8fd0\u884c\u4e00\u6b21\u7edf\u8ba1\u6570\u636e\uff08\u4e5f\u53ef\u6839\u636e\u9700\u8981\u4fee\u6539cron\u6570\u503c\uff09\u3002\n\n```JAVA\npublic class IpCountService {\n    private Map<String,Integer> ipCountMap = new HashMap<String,Integer>();\n    \n    // \u5b9a\u65f6\u4efb\u52a1\u6267\u884c\u9891\u7387\n    @Scheduled(cron = \"0/5 * * * * ?\")\n    public void print(){\n        System.out.println(\"         IP\u8bbf\u95ee\u76d1\u63a7\");\n        System.out.println(\"+-----ip-address-----+--num--+\");\n        for (Map.Entry<String, Integer> entry : ipCountMap.entrySet()) {\n            String key = entry.getKey();\n            Integer value = entry.getValue();\n            System.out.println(String.format(\"|%18s  |%5d  |\",key,value));\n        }\n        System.out.println(\"+--------------------+-------+\");\n      }\n}\n```\n\n\u5176\u4e2d\u5173\u4e8e\u7edf\u8ba1\u62a5\u8868\u7684\u663e\u793a\u4fe1\u606f\u62fc\u63a5\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u5f62\u5f0f\u8fdb\u884c\uff0c\u6b64\u5904\u4f7f\u7528String\u7c7b\u4e2d\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u64cd\u4f5c\u8fdb\u884c\u3002\n\n**\u6b65\u9aa4\u4e09\uff1a\u68c0\u9a8c\u6548\u679c**\n\n\u91cd\u65b0clean\u7136\u540einstall\u4e00\u4e0b\u81ea\u5b9a\u4e49starter\u9879\u76ee\uff0c\u7136\u540e\u6211\u4eec\u91cd\u65b0\u542f\u52a8\u6211\u4eec\u7684\u6d4b\u8bd5\u9879\u76ee\uff0c\u518d\u6b21\u8bbf\u95ee\u63a5\u53e3\u3002\n\n![](https://pic.yupi.icu/5563/202402112022016.png)\n\n\u901a\u8fc7\u5faa\u73af\u6253\u5370\u7684\u65e5\u5fd7\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u7684\u5b8c\u6210\u4e86\u5b9a\u65f6\u6253\u5370\u65e5\u5fd7\u529f\u80fd\u3002\n\n### (2.6) \u901a\u8fc7yml\u8bbe\u7f6e\u529f\u80fd\u53c2\u6570\n\n> To make it easily extensible, a number of configuration keys in a dedicated namespace can be exposed to the environment\n\n\u7531\u4e8e\u6211\u4eec\u5f53\u524d\u6253\u5370\u65e5\u5fd7\u663e\u793a\u7684\u4fe1\u606f\u683c\u5f0f\u662f\u56fa\u5b9a\uff0c\u4e3a\u63d0\u9ad8\u62a5\u8868\u4fe1\u606f\u663e\u793a\u7684\u7075\u6d3b\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7yml\u6587\u4ef6\u63d0\u4f9b\u4e00\u4e9b\u53c2\u6570\u7ed9\u5916\u754c\u4f7f\u7528\u8005\u8fdb\u884c\u7075\u6d3b\u7684\u66f4\u6539\u4ee5\u8fbe\u5230\u60f3\u8981\u5b9e\u73b0\u7684\u6548\u679c\u3002\n\n**\u6b65\u9aa4\u4e00\uff1a\u9884\u8bbe\u53c2\u6570**\n\n\u5047\u8bbe\u6211\u4eec\u9884\u8bbe\u7f6e3\u4e2a\u5c5e\u6027\uff0c\u5206\u522b\u7528\u6765\u63a7\u5236\u65e5\u5fd7\u663e\u793a\u5468\u671f\uff08cycle\uff09\uff0c\u5468\u671f\u6570\u636e\u662f\u5426\u6e05\u7a7a\uff08cycleReset\uff09\uff0c\u6570\u636e\u663e\u793a\u683c\u5f0f\uff08model\uff09\n\n```YAML\ntools:\n  ip:\n    cycle: 10\n    cycleReset: false\n    model: \"detail\"\n```\n\n**\u6b65\u9aa4\u4e8c\uff1a\u5b9a\u4e49\u5c01\u88c5\u53c2\u6570\u7684\u5c5e\u6027\u7c7b\uff0c\u8bfb\u53d6\u914d\u7f6e\u53c2\u6570**\n\n**\u4e3a\u9632\u6b62\u9879\u76ee\u7ec4\u5b9a\u4e49\u7684\u53c2\u6570\u79cd\u7c7b\u8fc7\u591a\uff0c\u4ea7\u751f\u51b2\u7a81**\uff0c\u901a\u5e38\u8bbe\u7f6e\u5c5e\u6027\u524d\u7f00\u4f1a**\u81f3\u5c11\u4f7f\u7528\u4e24\u7ea7\u5c5e\u6027\u4f5c\u4e3a\u524d\u7f00\u8fdb\u884c\u533a\u5206**\u3002\u65e5\u5fd7\u8f93\u51fa\u6a21\u5f0f\u662f\u5728\u82e5\u5e72\u4e2a\u7c7b\u522b\u9009\u9879\u4e2d\u9009\u62e9\u67d0\u4e00\u9879\uff0c\u5bf9\u4e8e\u6b64\u79cd\u5206\u7c7b\u6027\u6570\u636e\u5efa\u8bae\u5236\u4f5c\u679a\u4e3e\u5b9a\u4e49\u5206\u7c7b\u6570\u636e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u3002**\u6ce8\u610f\u5199\u6587\u6863\u6ce8\u91ca\uff0c\u540e\u9762\u6709\u4f5c\u7528**\uff01\uff01\uff01\n\n```JAVA\n// \u6307\u5b9a\u52a0\u8f7d\u7684\u5c5e\u6027\n@ConfigurationProperties(prefix = \"tools.ip\")\npublic class IpProperties {\n    /**\n     * \u65e5\u5fd7\u663e\u793a\u5468\u671f\n     */\n    private Long cycle = 5L;\n    \n    /**\n     * \u662f\u5426\u5468\u671f\u5185\u91cd\u7f6e\u6570\u636e\n     */\n    private Boolean cycleReset = false;\n    \n    /**\n     * \u65e5\u5fd7\u8f93\u51fa\u6a21\u5f0f  detail\uff1a\u8be6\u7ec6\u6a21\u5f0f  simple\uff1a\u6781\u7b80\u6a21\u5f0f\n     */\n    private String model = LogModel.DETAIL.value;\n    \n    /**\n    * \u679a\u4e3e\u6a21\u5f0f\n    */\n    public enum LogModel{\n        DETAIL(\"detail\"),\n        SIMPLE(\"simple\");\n        private String value;\n        LogModel(String value) {\n            this.value = value;\n        }\n        public String getValue() {\n            return value;\n        }\n    }\n}\n```\n\n**\u6b65\u9aa4\u4e09\uff1a\u52a0\u8f7d\u5c5e\u6027\u7c7b**\n\n\u5728\u914d\u7f6e\u7c7b\u6307\u5b9a\u52a0\u8f7d\u4e0a\u8ff0`Bean`\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u5c5e\u6027\u7c7b\u4e2d\u52a0`@Component`\u6ce8\u89e3\n\n```JAVA\n@EnableScheduling\n@EnableConfigurationProperties(IpProperties.class)\npublic class IpAutoConfiguration {\n    @Bean\n    public IpCountService ipCountService(){\n        return new IpCountService();\n    }\n}\n```\n\n**\u6b65\u9aa4\u56db\uff1a\u4e1a\u52a1\u529f\u80fd\u8c03\u6574**\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u914d\u7f6e\u7684\u4e0d\u540c\u5c5e\u6027\u53c2\u6570\uff0c\u5728\u529f\u80fd\u7c7b\u4e2d\u8fdb\u884c\u4e0d\u540c\u7684\u903b\u8f91\u5904\u7406\uff0c\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\u6548\u679c\u3002\u6ce8\u610f\uff1a\u6e05\u9664\u6570\u636e\u7684\u529f\u80fd\u4e00\u5b9a\u8981\u5728\u8f93\u51fa\u540e\u8fd0\u884c\uff0c\u5426\u5219\u6bcf\u6b21\u67e5\u9605\u7684\u6570\u636e\u5747\u4e3a\u7a7a\u767d\u6570\u636e\u3002\n\n```JAVA\npublic class IpCountService {\n    private Map<String,Integer> ipCountMap = new HashMap<String,Integer>();\n    \n    // \u4f7f\u7528\u81ea\u52a8\u88c5\u914d\u52a0\u8f7d\u5bf9\u5e94\u7684\u914d\u7f6ebean\n    @Resource\n    private IpProperties ipProperties;\n    \n    @Scheduled(cron = \"0/5 * * * * ?\")\n    public void print(){\n        // \u8be6\u7ec6\u6a21\u5f0f\u65e5\u5fd7\u5c55\u793a\u683c\u5f0f\n        if(ipProperties.getModel().equals(IpProperties.LogModel.DETAIL.getValue())){\n            System.out.println(\"         IP\u8bbf\u95ee\u76d1\u63a7\");\n            System.out.println(\"+-----ip-address-----+--num--+\");\n            for (Map.Entry<String, Integer> entry : ipCountMap.entrySet()) {\n                String key = entry.getKey();\n                Integer value = entry.getValue();\n                System.out.println(String.format(\"|%18s  |%5d  |\",key,value));\n            }\n            System.out.println(\"+--------------------+-------+\");\n            \n        // \u7b80\u6d01\u6a21\u5f0f\u65e5\u5fd7\u5c55\u793a\u683c\u5f0f\n        }else if(ipProperties.getModel().equals(IpProperties.LogModel.SIMPLE.getValue())){\n            System.out.println(\"     IP\u8bbf\u95ee\u76d1\u63a7\");\n            System.out.println(\"+-----ip-address-----+\");\n            for (String key: ipCountMap.keySet()) {\n                System.out.println(String.format(\"|%18s  |\",key));\n            }\n            System.out.println(\"+--------------------+\");\n        }\n        \n        // \u9636\u6bb5\u5185\u7edf\u8ba1\u6570\u636e\u662f\u5426\u6e05\u9664\n        if(ipProperties.getCycleReset()){\n            ipCountMap.clear();\n        }\n    }\n}\n```\n\n**\u6b65\u9aa4\u4e94\uff1a\u6548\u679c\u5c55\u793a**\n\n\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e24\u4e2a\u5c5e\u6027\u7684\u52a8\u6001\u63a7\u5236\uff0c\u65e5\u5fd7\u6253\u5370\u5468\u671f\u914d\u7f6e\u7a0d\u7a0d\u6709\u4e9b\u4e0d\u540c\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u4e0a\u8ff0\u914d\u7f6e\u597d\u7684\u4e24\u4e2a\u5c5e\u6027\u662f\u5426\u751f\u6548\u3002\u540c\u6837\u662f**\u5148clean\u518dinstall\u4e00\u4e0b**\uff0c\u7136\u540e\u5728\u6211\u4eecweb\u6d4b\u8bd5\u7a0b\u5e8f\u7aef\u901a\u8fc7\u63a7\u5236yml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u53c2\u6570\u5bf9\u7edf\u8ba1\u4fe1\u606f\u8fdb\u884c\u683c\u5f0f\u63a7\u5236\u3002\n\n![](https://pic.yupi.icu/5563/202402112022147.png)\n\n### (2.7) \u8bbe\u7f6e\u5b9a\u65f6\u5668\u6ce8\u89e3\u53c2\u6570\n\n\u6211\u4eec\u5728\u4f7f\u7528yml\u914d\u7f6e\u5c5e\u6027\u914d\u7f6e\u4e2d\u7684\u663e\u793a\u5468\u671f\u6570\u636e\u65f6\uff0c\u7531\u4e8e**\u65e0\u6cd5\u5728@Scheduled\u6ce8\u89e3\u4e0a\u76f4\u63a5\u4f7f\u7528\u5c5e\u6027\u914d\u7f6e\u7c7b\u6570\u636e**\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u653e\u5f03\u4f7f\u7528**@EnableConfigurationProperties**\u6ce8\u89e3\u5bf9\u5e94\u7684\u529f\u80fd\uff0c\u6539\u6210\u6700\u539f\u59cb\u7684bean\u5b9a\u4e49\u683c\u5f0f\u3002\n\n![](https://pic.yupi.icu/5563/202402112022289.png)\n\n**\u6b65\u9aa4\u4e00\uff1a\u8bfb\u53d6\u6570\u503c**\n\n\u6211\u4eec\u8fd8\u662f\u5728`@Scheduled`\u6ce8\u89e3\u4e2d\u4f7f\u7528`#{}`\u8bfb\u53d6bean\u5c5e\u6027\u503c\uff0c\u6b64\u5904\u8bfb\u53d6\u540d\u79f0\u4e3aipProperties\u7684bean\u7684cycle\u5c5e\u6027\u503c\n\n```JAVA\n@Scheduled(cron = \"0/#{ipProperties.cycle} * * * * ?\")\npublic void print(){\n}\n```\n\n**\u6b65\u9aa4\u4e8c\uff1a\u5c5e\u6027\u7c7b\u5b9a\u4e49bean\u5e76\u6307\u5b9abean\u7684\u8bbf\u95ee\u540d\u79f0**\n\n\u6ce8\u610f\uff1a**\u5982\u679c\u6b64\u5904\u4e0d\u8bbe\u7f6ebean\u7684\u8bbf\u95ee\u540d\u79f0\uff0cspring\u4f1a\u4f7f\u7528\u81ea\u5df1\u7684\u547d\u540d\u751f\u6210\u5668\u751f\u6210bean\u7684\u957f\u540d\u79f0\uff0c\u65e0\u6cd5\u5b9e\u73b0\u5c5e\u6027\u7684\u8bfb\u53d6**\n\n```JAVA\n// \u8bbe\u7f6e\u4e3aBean,\u5e76\u81ea\u5b9a\u4e49\u540d\u79f0\u4fbf\u4e8e\u4f7f\u7528\n@Component(\"ipProperties\")\n@ConfigurationProperties(prefix = \"tools.ip\")\npublic class IpProperties {\n}\n```\n\n**\u6b65\u9aa4\u4e09\uff1a\u91cd\u65b0\u8bfb\u53d6Bean**\n\n\u4e3a\u4e86\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684Bean\u540d\u79f0,\u8fd8\u9700\u8981\u5f03\u7528\u539f\u6765\u5199\u7684`@EnableConfigurationProperties`\u6ce8\u89e3\u5bf9\u5e94\u7684\u529f\u80fd\uff0c\u6539\u4e3a`@Import`\u5bfc\u5165bean\u7684\u5f62\u5f0f\u52a0\u8f7d\u914d\u7f6e\u5c5e\u6027\u7c7b.\n\n```JAVA\n@EnableScheduling\n// @EnableConfigurationProperties(IpProperties.class)\n@Import(IpProperties.class)\npublic class IpAutoConfiguration {\n    @Bean\n    public IpCountService ipCountService(){\n        return new IpCountService();\n    }\n}\n```\n\n**\u6b65\u9aa4\u56db\uff1a\u6d4b\u8bd5**\n\n\u518d\u6b21clean\u7136\u540einstall\uff0c\u6211\u4eec\u91cd\u65b0\u5728web\u7a0b\u5e8f\u6d4b\u8bd5\u7aef\u901a\u8fc7\u63a7\u5236yml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u53c2\u6570\u5bf9\u7edf\u8ba1\u4fe1\u606f\u7684\u663e\u793a\u5468\u671f\u8fdb\u884c\u63a7\u5236\u67e5\u770b\u5c55\u793a\u6548\u679c\n\n![](https://pic.yupi.icu/5563/202402112022752.png)\n\n### (2.8) \u62e6\u622a\u5668\u5f00\u53d1\n\n\u5728\u4e4b\u524d\u7684\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u5bfc\u5165\u6a21\u5757\u540e\uff0c\u5982\u679c\u60f3\u4f7f\u7528\u8fd9\u4e2a\u529f\u80fd\u8fd8\u5f97\u81ea\u5df1\u521b\u5efa\u5e76\u6ce8\u5165`IpProperties`\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u4e2d\u8c03\u7528\u5176count\u65b9\u6cd5\uff0c\u5982\u679c\u6709\u5f88\u591a\u4e2a\u65b9\u6cd5\u9700\u8981\u4f7f\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981cv\u5f88\u591a\u6b21\uff0c\u5047\u5982\u6709\u4e00\u5929\u8981\u79fb\u9664\u8fd9\u4e2a\u529f\u80fd\uff0c\u90a3\u4e48\u53c8\u8981\u4e00\u5904\u5904\u5bfb\u627e\u5220\u9664\uff0c\u9057\u6f0f\u4e86\u5c06\u4ea7\u751f\u62a5\u9519\uff0c\u663e\u7136\u5341\u5206\u4e0d\u65b9\u4fbf\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5f00\u53d1\u4e00\u4e2a\u62e6\u622a\u5668\u7edf\u4e00\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5b9e\u73b0\uff0c\u53ea\u9700\u5bfc\u5165\u5750\u6807\uff0c\u8fdb\u884c\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u8f7b\u677e\u5f15\u5165\u6216\u6458\u53bb\u529f\u80fd\u6a21\u5757\u3002\n\n**\u6b65\u9aa4\u4e00\uff1a\u5f00\u53d1\u62e6\u622a\u5668**\n\n\u4f7f\u7528\u81ea\u52a8\u88c5\u914d\u52a0\u8f7d\u7edf\u8ba1\u529f\u80fd\u7684\u4e1a\u52a1\u7c7b\uff0c\u5e76\u5728\u62e6\u622a\u5668\u4e2d\u8c03\u7528\u5bf9\u5e94\u529f\u80fd\n\n```JAVA\npublic class IpCountInterceptor implements HandlerInterceptor {\n    @Autowired\n    private IpCountService ipCountService;\n    @Override\n    public boolean preHandle(HttpServletRequest request, \n                             HttpServletResponse response, Object handler) throws Exception {\n        ipCountService.count();\n        return true;\n    }\n}\n```\n\n**\u6b65\u9aa4\u4e8c\uff1a\u914d\u7f6e\u62e6\u622a\u5668**\n\n\u914d\u7f6emvc\u62e6\u622a\u5668\uff0c\u8bbe\u7f6e\u62e6\u622a\u5bf9\u5e94\u7684\u8bf7\u6c42\u8def\u5f84\u3002\u6b64\u5904\u62e6\u622a\u6240\u6709\u8bf7\u6c42\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u4f7f\u7528\u9700\u8981\u8bbe\u7f6e\u8981\u62e6\u622a\u7684\u8bf7\u6c42\u3002\u751a\u81f3\u53ef\u4ee5\u5728\u6b64\u5904\u52a0\u8f7dIpCountProperties\u4e2d\u7684\u5c5e\u6027\uff0c\u901a\u8fc7\u914d\u7f6e\u8bbe\u7f6e\u62e6\u622a\u5668\u62e6\u622a\u7684\u8bf7\u6c42\u3002\n\n```JAVA\n@Configuration\npublic class SpringMvcConfig implements WebMvcConfigurer {\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(ipCountInterceptor()).addPathPatterns(\"/**\");\n    }\n    \n    // \u52a0\u8f7d\u62e6\u622a\u5668\n    @Bean\n    public IpCountInterceptor ipCountInterceptor(){\n        return new IpCountInterceptor();\n    }\n}\n```\n\n**\u6b65\u9aa4\u4e09\uff1a\u5bfc\u5165\u62e6\u622a\u5668**\n\n\u5728\u914d\u7f6e\u7c7b\u4e2d\u5bfc\u5165\u6211\u4eec\u914d\u7f6e\u7684\u62e6\u622a\u5668\n\n```java\n@EnableScheduling\n//@EnableConfigurationProperties(IpProperties.class)\n@Import({IpProperties.class,SpringMvcConfig.class})\npublic class IpAutoConfiguration {\n\n    @Bean\n    public IpCountService ipCountService() {\n        return new IpCountService();\n    }\n}\n```\n\n**\u6b65\u9aa4\u56db\uff1a\u6d4b\u8bd5**\n\n\u6211\u4eec\u518d\u6b21\u542f\u52a8\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6ce8\u91ca\u6389\u4e86\u624b\u52a8\u6ce8\u5165\u8c03\u7528\u7684\u4ee3\u7801\uff0c\u529f\u80fd\u4f9d\u65e7\u6b63\u5e38\u6267\u884c~\n\n![](https://pic.yupi.icu/5563/202402112022518.png)\n\n### (2.9) \u5f00\u542fyml\u63d0\u793a\u529f\u80fd\n\n\u6211\u4eec\u5728\u4f7f\u7528springboot\u7684\u914d\u7f6e\u5c5e\u6027\u65f6\uff0c\u90fd\u53ef\u4ee5\u770b\u5230\u63d0\u793a\uff0c\u5c24\u5176\u662f\u5bfc\u5165\u4e86\u5bf9\u5e94\u7684starter\u540e\uff0c\u4e5f\u4f1a\u6709\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\u51fa\u73b0\u3002\u4f46\u662f\u73b0\u5728\u6211\u4eec\u81ea\u5df1\u5f00\u53d1\u7684starter\u5e76\u6ca1\u6709\u5bf9\u5e94\u7684\u63d0\u793a\u529f\u80fd\uff0c\u8fd9\u5c31\u975e\u5e38\u7684\u4e0d\u53cb\u597d\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e00\u8d77\u5c1d\u8bd5\u89e3\u51b3\u81ea\u5b9a\u4e49starter\u529f\u80fd\u5f00\u542f\u914d\u7f6e\u63d0\u793a\u7684\u95ee\u9898\u3002\n\n![](https://pic.yupi.icu/5563/202402112022314.png)\n\n**\u6b65\u9aa4\u4e00\uff1a\u5bfc\u5165\u5750\u6807**\n\nspringboot\u63d0\u4f9b\u6709\u4e13\u7528\u7684\u5de5\u5177\u5b9e\u73b0\u6b64\u529f\u80fd\uff0c\u4ec5\u9700\u8981\u5bfc\u5165\u4e0b\u5217\u5750\u6807\u3002\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-configuration-processor</artifactId>\n    <optional>true</optional>\n</dependency>\n```\n\n**\u6b65\u9aa4\u4e8c\uff1a\u91cd\u542finstall**\n\n\u7a0b\u5e8f\u91cd\u65b0\u7f16\u8bd1\u540e\uff0c\u5728META-INF\u76ee\u5f55\u4e2d\u4f1a\u751f\u6210\u5bf9\u5e94\u7684\u63d0\u793a\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u62f7\u8d1d\u751f\u6210\u51fa\u7684\u6587\u4ef6\u5230\u81ea\u5df1\u5f00\u53d1\u7684META-INF\u76ee\u5f55\u4e2d\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u7f16\u8f91\u3002\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u91cd\u590d\u7684\u63d0\u793a\u6548\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u6ce8\u91ca\u6389\u4e0a\u8ff0\u5750\u6807\u4e86\u3002\n\n![](https://pic.yupi.icu/5563/202402112022779.png)\n\n**\u6b65\u9aa4\u4e09\uff1a\u8fdb\u884c\u4e9b\u8bb8\u914d\u7f6e**\n\n\u6253\u5f00\u751f\u6210\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u4fe1\u606f\u3002\u5176\u4e2d`groups`\u5c5e\u6027\u5b9a\u4e49\u4e86\u5f53\u524d\u914d\u7f6e\u7684\u63d0\u793a\u4fe1\u606f\u603b\u4f53\u63cf\u8ff0\uff0c\u5f53\u524d\u914d\u7f6e\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5c5e\u6027\u5c01\u88c5\u7c7b\u3002`properties`\u5c5e\u6027\u63cf\u8ff0\u4e86\u5f53\u524d\u914d\u7f6e\u4e2d\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u5177\u4f53\u8bbe\u7f6e\uff0c\u5305 \u542b\u540d\u79f0\u3001\u7c7b\u578b\u3001\u63cf\u8ff0\u3001\u9ed8\u8ba4\u503c\u7b49\u4fe1\u606f\u3002`hints`\u5c5e\u6027**\u9ed8\u8ba4\u662f\u7a7a\u767d\u7684\uff0c\u6ca1\u6709\u8fdb\u884c\u8bbe\u7f6e**\u3002\n\n**\u6ce8\u610f**\uff1a\u6587\u6863\u4e2d\u7684description\u90fd\u662f\u6839\u636e\u6211\u4eec\u4e4b\u524d\u5728\u914d\u7f6e\u7c7b\u4e2d\u7684doc\u6587\u6863\u6ce8\u91ca\u6240\u81ea\u52a8\u751f\u6210\u7684\u3002\n\n![](https://pic.yupi.icu/5563/202402112023184.png)\n\n\u4e3a\u4e86\u66f4\u53cb\u597d\u7684\u63d0\u4f9b\u6548\u679c\uff0chints\u5c5e\u6027\u53ef\u4ee5\u53c2\u8003springboot\u6e90\u7801\u4e2d\u7684\u5236\u4f5c\uff0c**\u8bbe\u7f6e\u5f53\u524d\u5c5e\u6027\u5c01\u88c5\u7c7b\u4e13\u7528\u7684\u63d0\u793a\u4fe1\u606f**\uff0c\u4e0b\u4f8b\u4e2d\u4e3a\u65e5\u5fd7\u8f93\u51fa\u6a21\u5f0f\u5c5e\u6027model\u8bbe\u7f6e\u4e86\u4e24\u79cd\u53ef\u9009\u63d0\u793a\u4fe1\u606f\u3002\n\n```JAVA\n{\n    \n\t......\n    \n  \"hints\": [\n    {\n      \"name\": \"tools.ip.model\",\n      \"values\": [\n        {\n          \"value\": \"detail\",\n          \"description\": \"\u8be6\u7ec6\u6a21\u5f0f.\"\n        },\n        {\n          \"value\": \"simple\",\n          \"description\": \"\u6781\u7b80\u6a21\u5f0f.\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n**\u6b65\u9aa4\u56db\uff1a\u6d4b\u8bd5**\n\n\u540c\u6837\u7684\uff0c\u6211\u4eec\u5728\u6d4b\u8bd5\u9879\u76ee\u7684yml\u6587\u4ef6\u4e2d\u67e5\u770b\u6548\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u4e0e\u5b98\u65b9\u57fa\u672c\u4e00\u81f4\u5566\u3002\n\n![](https://pic.yupi.icu/5563/202402112023608.png)\n\n### (3) \u6574\u4f53\u6d41\u7a0b\u603b\u7ed3\n\n\u522b\u770b\u6211\u4eec\u5728\u4e0a\u8ff0\u8fdb\u884c\u4e86\u5f88\u591a\u6b65\u7684\u5f00\u53d1\uff0c\u5176\u5b9e\uff0c\u81ea\u5b9a\u4e49stater\u7684\u5f00\u53d1\u5728\uff082.4\uff09\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u5c31\u662f\u521b\u5efa\u72ec\u7acb\u6a21\u5757\uff0c\u7136\u540einstall\u5230\u81ea\u5df1\u7684\u672c\u5730\u4ed3\u5e93\u4e2d\uff0c\u5982\u679c\u9700\u8981\u7ed9\u522b\u4eba\u4f7f\u7528\u7684\u8bdd\uff0c\u8fd8\u8981deploy\u5230\u79c1\u670d\u4e0a\u3002\u6700\u540e\u5728\u9700\u8981\u4f7f\u7528\u7684\u9879\u76ee\u4e2d\u5bfc\u5165\u5bf9\u5e94\u7684starter\u5750\u6807\u5373\u53ef\u3002\n\n**\u603b\u4f53\u6d41\u7a0b\u6982\u62ec\u6765\u8bf4\u5c31\u662f\uff1a**\n\n1. \u521b\u5efa\u4e00\u4e2a\u529f\u80fd\u6a21\u5757\uff0c\u6309\u7167\u9700\u6c42\u5bfc\u5165\u5750\u6807\u5e76\u5b9e\u73b0\u529f\u80fd\u3002\u221a\uff08**\u5fc5\u987b**\uff09\n2. \u521b\u5efa\u4e00\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u52a0\u8f7d\u529f\u80fd\u7c7b(Service)\uff0c\u7136\u540e\u518d`spring.factories`\u4e2d\u914d\u7f6e\u81ea\u52a8\u914d\u7f6e\u7c7b\u3002**\u221a\uff08\u5fc5\u987b\uff09**\n3. \u5b8c\u6210\u4e0a\u8ff0\u4e24\u6b65\u6211\u4eec\u7684\u81ea\u5b9a\u4e49Starter\u5de5\u4f5c\u5c31\u7b97\u5b8c\u6210\u4e86\uff0cinstall\u5230\u672c\u5730\u4ed3\u5e93\u540e\u5c31\u80fd\u901a\u8fc7\u5bfc\u5165\u5750\u6807\u5728\u5176\u4ed6\u9879\u76ee\u4f7f\u7528\u4e86\uff0c\u53ea\u662f\u529f\u80fd\u5341\u5206\u7b80\u964b\uff0c\u540e\u7eed\u6211\u4eec\u4fbf\u662f\u5728\u4e0d\u65ad\u7684\u5b8c\u5584\u5b83\u3002\n4. \u4e3a\u4e86\u80fd\u8ba9\u6211\u4eec\u7075\u6d3b\u7684\u63a7\u5236\u529f\u80fd\u6a21\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6yml\u914d\u7f6e\u5c5e\u6027\u5bf9\u5916\u66b4\u9732\u4e00\u4e9b\u53c2\u6570\u8bbe\u7f6e\uff0c\u4ee5\u4f9b\u5916\u754c\u8fdb\u884c\u8c03\u6574\u3002**\u221a\uff08\u975e\u5fc5\u987b\uff09**\n5. \u6211\u4eec\u90fd\u4e0d\u53ef\u80fd\u4e00\u76f4\u8bb0\u4f4f\u914d\u7f6e\u7684\u6bcf\u4e2a\u5c5e\u6027\u4f5c\u7528\uff0c\u66f4\u4f55\u51b5\u522b\u4eba\uff0c\u51b5\u4e14\u6ca1\u6709\u63d0\u793a\u6781\u6613\u5199\u9519\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u8fc7\u8bbe\u7f6e\u5f00\u542f\u4e86yml\u914d\u7f6e\u63d0\u793a\u529f\u80fd\u3002**\u221a\uff08\u975e\u5fc5\u987b\uff09**\n\n\u5982\u6b64\u6211\u4eec\u4fbf\u7b97\u662f\u7b80\u5355\u7684\u5b8c\u6210\u4e86\u4e00\u4e2aStarter\u7684\u5f00\u53d1\uff0c\u662f\u4e0d\u662f\u6ca1\u6709\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u56f0\u96be\uff1f\n\n## \u4e09.\u76f8\u5173\u8bf4\u660e\n\n### (1) starter\u547d\u540d\u89c4\u8303\n\n> \ud83d\udea9All **official starters** follow a similar naming pattern; `spring-boot-starter-*`, where `*` is a particular type of application. This naming structure is intended to help when you need to find a starter. The Maven integration in many IDEs lets you search dependencies by name. For example, with the appropriate Eclipse or Spring Tools plugin installed, you can press `ctrl-space` in the POM editor and type \u201cspring-boot-starter\u201d for a complete list. \ud83d\udea9 **third party starters** should **not start** with `spring-boot`, as it is reserved for official Spring Boot artifacts. Rather, a third-party starter typically starts with the name of the project. For example, a third-party starter project called `thirdpartyproject` would typically be named `thirdpartyproject-spring-boot-starter`.\n\n**\u6982\u8ff0\u6765\u8bf4\u5c31\u662f\uff1a**\n\n\u4e3a\u4e86\u67e5\u627e\u65b9\u4fbf\uff0c\u5b98\u65b9\u63d0\u4f9b\u7684`starter`\u547d\u540d\u683c\u5f0f\u57fa\u672c\u90fd\u662f`spring-boot-starter-xxx`\uff0c\u56e0\u6b64**\u4e0d\u5efa\u8bae**\u6211\u4eec\u4e5f\u4f7f\u7528\u8fd9\u79cd\u547d\u540d\u683c\u5f0f\u3002\u5b83\u63a8\u8350\u6211\u4eec\u4f7f\u7528\u5f62\u5982**xxx-spring-boot-starter**\u7684\u683c\u5f0f\u8fdb\u884c\u547d\u540d\u3002\n\n![](https://pic.yupi.icu/5563/202402112023770.png)\n\n\u4f8b\u5982\u6211\u4eec\u5728\u4e0a\u8ff0\u6848\u4f8b\u4e2d\u81ea\u5b9a\u4e49\u7684Starter\n\n```xml\n    <groupId>cn.guanzhi</groupId>\n    <artifactId>ip-spring-boot-starter</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n```\n\n### (2) \u53c2\u6570\u524d\u7f00\u547d\u540d\n\n> If your starter provides configuration keys, **use a unique namespace for them**. In particular, do not include your keys in the namespaces that Spring Boot uses (such as `server`, `management`, `spring`, and so on). If you use the same namespace, we may modify these namespaces in the future in ways that break your modules. As a rule of thumb, prefix all your keys with a namespace that you own (for example `acme`).\n\n**\u6982\u8ff0\u6765\u8bf4\u5c31\u662f\uff1a**\n\n\u5728\u4e3a\u6211\u4eec\u66b4\u9732\u7ed9\u5916\u754c\u8bfb\u53d6\u8bbe\u7f6e\u7684\u53c2\u6570\u524d\u7f00\u8fdb\u884c\u547d\u540d\u65f6\uff0c\u5fc5\u987b\u786e\u4fdd\u5176\u552f\u4e00\u6027\uff0c\u5426\u5219SpringBoot\u5728\u542f\u52a8\u65f6\u53ef\u80fd\u4f1a\u4fee\u6539\u8fd9\u4e9b\u540d\u79f0\uff0c\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u53ef\u9884\u77e5\u7684\u9519\u8bef\u3002\n\n\u4f8b\u5982\u5728\u4e0a\u8ff0\u6848\u4f8b\u4e2d\uff0c\u4e3a\u4e86\u9632\u6b62\u610f\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u7ea7\u524d\u7f00\u548c\u81ea\u5df1\u9879\u76ee\u540d\u4ee5\u793a\u533a\u522b\uff1a\n\n```java\n// \u53c2\u6570\u8bbe\u7f6e\ntools:\n  ip:\n    cycle: 10\n    cycleReset: false\n    model: \"detail\"\n\n\n// \u6307\u5b9a\u52a0\u8f7d\u7684\u5c5e\u6027\u524d\u7f6e\n@ConfigurationProperties(prefix = \"tools.ip\")\n```\n\n### (3) yml\u63d0\u793a\u76f8\u5173\n\n> Make sure that configuration keys are documented by adding field javadoc for each property\u3002\n\n**\u6982\u8ff0\u6765\u8bf4\u5c31\u662f\uff1a**\n\n\u6211\u4eec\u5728\u4e0a\u8ff0\u5f00\u542fyml\u63d0\u793a\u529f\u80fd\u4e4b\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u5165\u90e8\u5206\u6570\u503c\u540e\uff0c\u4e0d\u4f46\u4f1a\u8054\u60f3\u914d\u7f6e\u53c2\u6570\uff0c\u53c2\u6570\u540e\u9762\u8fd8\u6709\u4e00\u4e9b\u76f8\u5173\u8bf4\u660e\uff0c\u8fd9\u4e9b\u5176\u5b9e\u90fd\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u914d\u7f6e\u53c2\u6570\u7c7b\u4e2d\u4f7f\u7528\u4e86doc\u6587\u6863\u6ce8\u91ca\u6240\u751f\u6210\u7684\u63cf\u8ff0\u3002\u4f8b\u5982\uff1a\n\n```java\n// \u6307\u5b9a\u52a0\u8f7d\u7684\u5c5e\u6027\n@ConfigurationProperties(prefix = \"tools.ip\")\npublic class IpProperties {\n    /**\n     * \u65e5\u5fd7\u663e\u793a\u5468\u671f\n     */\n    private Long cycle = 5L;\n    \n    /**\n     * \u662f\u5426\u5468\u671f\u5185\u91cd\u7f6e\u6570\u636e\n     */\n    private Boolean cycleReset = false;\n    \n}\n```\n\n\u8f93\u5165/**+\u518d\u6309\u56de\u8f66\u5373\u53ef\u5feb\u6377\u751f\u6210\u76f8\u5e94\u6ce8\u91ca\u683c\u5f0f\u3002\n\n\u6b64\u5916\u5b98\u65b9\u7ed9\u51fa\u7684\u4e00\u4e9b\u547d\u540d\u6216\u63cf\u8ff0\u76f8\u5173\u5efa\u8bae\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u9075\u5b88\u3002\n\n![](https://pic.yupi.icu/5563/202402112023398.png)\n\n"}