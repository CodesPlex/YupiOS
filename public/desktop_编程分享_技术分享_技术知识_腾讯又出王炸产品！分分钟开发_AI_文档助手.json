{"data": "# \u817e\u8baf\u53c8\u51fa\u738b\u70b8\u4ea7\u54c1\uff01\u5206\u5206\u949f\u5f00\u53d1 AI \u6587\u6863\u52a9\u624b\n\n> \u672c\u6587\u4f5c\u8005\uff1a[\u7a0b\u5e8f\u5458\u9c7c\u76ae](https://yuyuanweb.feishu.cn/wiki/Abldw5WkjidySxkKxU2cQdAtnah)\n>\n> \u672c\u7ad9\u5730\u5740\uff1a[https://codefather.cn](https://codefather.cn)\n\n> \u5176\u4ed6\u5e73\u53f0\u6807\u9898\uff1a5 \u5206\u949f\uff0c\u5f00\u53d1\u81ea\u5df1\u7684 AI \u6587\u6863\u52a9\u624b\uff01\u624b\u628a\u624b\u6559\u7a0b\n\n\n\n\u5927\u5bb6\u597d\uff0c\u6211\u662f\u9c7c\u76ae\u3002\n\n\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u81ea\u5df1\u5f00\u53d1\u8fc7\u4e00\u4e2a AI \u6587\u6863\u603b\u7ed3\u52a9\u624b\u5e94\u7528\u3002\u7ed9\u5927\u5bb6\u7b80\u5355\u6f14\u793a\u4e00\u4e0b\uff0c\u9996\u5148\u6211\u4e0a\u4f20\u4e86\u4e00\u4e2a\u6587\u6863\uff0c\u5b9a\u4e49 `1 + 1 \u7b49\u4e8e 3`\uff1a\n\n![](https://pic.yupi.icu/1/1700474839512-90bc1a7f-604c-4867-8b27-e7b164d5b903.png)\n\n\u7136\u540e\u628a\u6587\u6863\u5582\u7ed9 AI \u6587\u6863\u603b\u7ed3\u52a9\u624b\uff0c\u518d\u5411\u5b83\u63d0\u95ee\uff0c\u7136\u540e AI \u5c31\u56de\u7b54\u51fa\u4e86\u6211\u4eec\u6587\u6863\u4e2d\u7684\u5185\u5bb9\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://pic.yupi.icu/1/1700474826938-48e41d22-6fb3-49d1-9878-360538bac5d5.png)\n\n\u662f\u4e0d\u662f\u5f88\u6709\u8da3\u54c8\u54c8~ \u6240\u4ee5 AI \u5e76\u4e0d\u662f\u5b8c\u5168\u53ef\u4fe1\u7684\u54e6\uff0c\u8981\u770b\u539f\u59cb\u6570\u636e\u662f\u5426\u53ef\u4fe1\uff01\n\n\u5f53\u65f6\u53c2\u8003\u7f51\u4e0a\u7684\u6559\u7a0b\uff0c\u505a\u8fd9\u4e2a\u82b1\u4e86\u633a\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u6210\u5c31\u611f\u6ee1\u6ee1\u3002\n\n\u4f46\u6ca1\u60f3\u5230\uff0c\u8fd9\u6bb5\u65f6\u95f4\uff0cAI \u4ee5\u4e00\u65e5\u5343\u91cc\u7684\u901f\u5ea6\u53d1\u5c55\uff0c\u73b0\u5728\u5f00\u53d1\u4e00\u4e2a\u540c\u6837\u7684 AI \u6587\u6863\u603b\u7ed3\u52a9\u624b\uff0c\u5927\u5bb6\u731c\u731c\u8981\u591a\u4e45\uff1f\n\n![](https://pic.yupi.icu/1/1700474357094-8d442c47-f6aa-468a-bd35-52ff0c63c838.png)\n\n\u7b54\u6848\u662f\uff1a\u53ea\u8981 5 \u5206\u949f\uff01\uff01\uff01\n\n![](https://pic.yupi.icu/1/1700474532928-8eab29cd-ec54-435d-8251-24c6d191c35c.png)\n\n\n\n\u6ca1\u9519\uff0c\u4f7f\u7528\u817e\u8baf\u4e91\u65b0\u51fa\u7684\u5411\u91cf\u6570\u636e\u5e93\u4ea7\u54c1\u80fd\u529b\uff0c\u54ea\u6015\u6ca1\u6709 AI \u77e5\u8bc6\uff0c\u4e5f\u80fd\u591f\u8f7b\u8f7b\u677e\u677e\u5f00\u53d1\u51fa AI \u5e94\u7528\u3002\n\n\u4e0b\u9762\u5c31\u7ed9\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b AI \u603b\u7ed3\u52a9\u624b\u5f00\u53d1\u6559\u7a0b\u3002\n\n\n\n## AI \u603b\u7ed3\u52a9\u624b\u5f00\u53d1\u6559\u7a0b\n\n### \u5b9e\u73b0\u539f\u7406\n\n\u52a8\u624b\u5199\u4ee3\u7801\u524d\uff0c\u6211\u4eec\u8981\u5148\u4e86\u89e3\u6574\u4e2a AI \u603b\u7ed3\u52a9\u624b\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u4e3a\u4ec0\u4e48 AI \u80fd\u591f\u56de\u7b54\u51fa\u6211\u4eec\u6307\u5b9a\u7684\u6587\u6863\u5185\u5bb9\u5462\uff1f\n\n\u90a3\u80af\u5b9a\u8981\u628a\u6587\u6863\u6570\u636e\u5148 \u201c\u5582\u201d \u7ed9 AI \u5440\uff0c\u53ef\u662f\u600e\u4e48 \u201c\u5582\u201d \u5462\uff1f\n\n\u56e0\u4e3a AI \u7684 \u201c\u8111\u5bb9\u91cf\u201d \u5f88\u5c0f\uff0c\u63a5\u53d7\u7684\u8f93\u5165\u6709\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u6587\u6863\u8fdb\u884c\u62c6\u5206\uff0c\u6bd4\u5982\u5c06\u4e00\u7bc7\u4e07\u5b57\u957f\u6587\u62c6\u4e3a 20 \u4e2a 500 \u5b57\u7684\u5c0f\u6bb5\u843d\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u8981\u5c06\u8fd9\u4e9b\u5c0f\u6bb5\u843d\u5b58\u50a8\u5230 **\u6570\u636e\u5e93** \u4e2d\uff0c\u5f53\u7528\u6237\u5411 AI \u63d0\u95ee\u65f6\uff0cAI \u8981\u5148\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u51fa\u548c\u7528\u6237\u95ee\u9898\u76f8\u4f3c\u5ea6\u6700\u9ad8\u7684\u5c0f\u6bb5\u843d\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u5c0f\u6bb5\u8def\u8fdb\u884c\u603b\u7ed3\uff0c\u518d\u7ed9\u7528\u6237\u56de\u7b54\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u7ed9 AI \u63d0\u4f9b\u4e00\u4e2a\u6570\u636e\u5e93\u5462\uff1f\u6211\u4e3e\u4e2a\u901a\u4fd7\u6613\u61c2\u7684\u6bd4\u55bb\uff1a\u6211\u4eec\u8003\u8bd5\u65f6\u5982\u679c\u8111\u888b\u8bb0\u4e0d\u4f4f\u6240\u6709\u8003\u70b9\uff0c\u662f\u4e0d\u662f\u5e26\u672c\u4e66\u8fdb\u8003\u573a\uff0c\u7136\u540e\u6839\u636e\u8003\u9898\u4ece\u4e66\u4e2d\u67e5\u51fa\u7b54\u6848\uff0c\u518d\u6574\u7406\u4e00\u4e0b\u5199\u5230\u8003\u5377\u4e0a\u5c31\u884c\u4e86\u5462\uff1f\n\n![](https://pic.yupi.icu/1/1700475731148-6940fe62-0e63-4ac5-846f-90e3afbeaa0e.png)\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u600e\u4e48\u6839\u636e\u7528\u6237\u7684\u95ee\u9898\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u51fa\u6700\u76f8\u4f3c\u7684\u6bb5\u843d\u5462\uff1f\u6587\u672c\u6bb5\u843d\u5e94\u8be5\u4ee5\u4ec0\u4e48\u683c\u5f0f\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\u5462\uff1f\n\n\u8fd9\u5c31\u9700\u8981\u7528\u5230\u4e00\u79cd\u7279\u6b8a\u7684\u6570\u636e\u5e93\u6280\u672f \u2014\u2014 \u5411\u91cf\u6570\u636e\u5e93\u3002\n\n\n\n### \u4ec0\u4e48\u662f\u5411\u91cf\u6570\u636e\u5e93\uff1f\n\n\u5411\u91cf\u6570\u636e\u5e93\u5c31\u662f\u4e00\u4e2a\u4e13\u95e8\u5b58\u50a8\u548c\u5904\u7406 **\u5411\u91cf\u6570\u636e** \u7684\u6570\u636e\u5e93\uff0c\u5b83\u5185\u7f6e\u4e86\u76f8\u4f3c\u5185\u5bb9\u68c0\u7d22\u529f\u80fd\uff0c\u53ef\u4ee5\u627e\u5230\u548c\u67d0\u4e2a\u5411\u91cf\u6700\u76f8\u4f3c\u7684\u6570\u636e\u3002\n\n\u76f8\u6bd4\u4e8e\u4f20\u7edf\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08\u6bd4\u5982 MySQL\uff09\u7684\u6a21\u7cca\u67e5\u8be2\uff08like\uff09\u800c\u8a00\uff0c\u5411\u91cf\u68c0\u7d22\u4f1a\u66f4\u7075\u6d3b\u3002\u5982\u4eca\uff0c\u5f97\u76ca\u4e8e AI \u7684\u53d1\u5c55\uff0c\u5411\u91cf\u6570\u636e\u5e93\u4f5c\u4e3a AI \u7684 \u201c\u5c0f\u6284\u201d\uff0c\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\n\n\u90a3\u4ec0\u4e48\u662f\u5411\u91cf\u6570\u636e\u5462\uff1f\n\n\u5176\u5b9e\u5c31\u662f\u7528\u4e00\u4e9b\u7b97\u6cd5\u5c06\u6587\u672c\u3001\u56fe\u7247\u3001\u97f3\u89c6\u9891\u7b49\u5185\u5bb9\u7edf\u4e00\u8f6c\u6362\u6210\u6570\u503c\u5411\u91cf\u3002\n\n\u6bd4\u5982\uff1a\u201c\u4e2d\u5348\u5403\u997a\u5b50\u201d\uff0c\u7ecf\u8fc7\u8f6c\u6362\u540e\u5f97\u5230\u7684\u5411\u91cf\u6570\u636e\u53ef\u80fd\u662f\uff1a[0.8, 0.6, 0.9, 0.4, ...]\uff1b\u800c \u201c\u665a\u4e0a\u5199\u4ee3\u7801\u201d\uff0c\u7ecf\u8fc7\u8f6c\u6362\u540e\u5f97\u5230\u7684\u5411\u91cf\u6570\u636e\u53ef\u80fd\u662f\uff1a[0.1, 0.2, 0.3, 0.4, ...]\n\n\u5982\u679c\u7528\u6237\u8981\u4ece\u5411\u91cf\u6570\u636e\u5e93\u641c\u7d22\u5185\u5bb9\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u628a\u641c\u7d22\u5173\u952e\u5b57\u8f6c\u6362\u4e3a\u7c7b\u4f3c\u7684\u5411\u91cf\u6570\u636e\uff0c\u7136\u540e\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u6765\u5224\u65ad\u76f8\u4f3c\u5ea6\u5373\u53ef\u3002\n\n\u6bd4\u5982\u7528\u6237\u95ee\uff1a\u201c\u4e2d\u5348\u5403\u4ec0\u4e48\uff1f\u201d\uff0c\u7ecf\u8fc7\u8f6c\u6362\u540e\u5f97\u5230\u7684\u5411\u91cf\u6570\u636e\u53ef\u80fd\u662f\uff1a[0.8, 0.6, 0.7, 0.3, ...]\u3002\n\n\u663e\u7136\uff0c\u8fd9\u4e2a\u5411\u91cf\u6570\u636e\u4f1a\u548c \u201c\u4e2d\u5348\u5403\u997a\u5b50\u201d \u7684\u5411\u91cf\u6570\u636e\u66f4\u63a5\u8fd1\uff0c\u6240\u4ee5\u4f1a\u4f18\u5148\u641c\u51fa \u201c\u4e2d\u5348\u5403\u997a\u5b50\u201d\u3002\n\n\u91c7\u7528\u4e0d\u540c\u7684\u5411\u91cf\u8f6c\u6362\u7b97\u6cd5\u3001\u6216\u8005\u4e0d\u540c\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5f97\u5230\u7684\u5411\u91cf\u503c\u548c\u8ba1\u7b97\u7ed3\u679c\u53ef\u80fd\u4e5f\u662f\u4e0d\u540c\u7684\u3002\n\n\n\n### \u5177\u4f53\u5b9e\u73b0\u6d41\u7a0b\n\n\u4e86\u89e3\u5411\u91cf\u6570\u636e\u5e93\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6574\u7406\u51fa AI \u5e94\u7528\u7684\u5177\u4f53\u5b9e\u73b0\u6d41\u7a0b\uff1a\n\n1\uff09\u5c06\u81ea\u5df1\u5df2\u6709\u7684\u77e5\u8bc6\u5e93\u6587\u6863\u8fdb\u884c\u6bb5\u843d\u62c6\u5206\uff1b\n\n2\uff09\u5229\u7528\u7b97\u6cd5\uff08Embedding\uff09\u5c06\u6587\u6863\u6570\u636e\u8f6c\u6362\u4e3a\u5411\u91cf\n\n3\uff09\u5c06\u5411\u91cf\u5b58\u50a8\u5230\u5411\u91cf\u6570\u636e\u5e93\u4e2d\n\n4\uff09\u5c06\u7528\u6237\u53d1\u9001\u7684\u95ee\u9898\u901a\u8fc7\u7b97\u6cd5\uff08Embedding\uff09\u8f6c\u6362\u4e3a\u5411\u91cf\n\n5\uff09\u6839\u636e\u7528\u6237\u95ee\u9898\u5411\u91cf\uff0c\u5728\u5411\u91cf\u6570\u636e\u5e93\u8fdb\u884c\u76f8\u4f3c\u6027\u67e5\u8be2\n\n6\uff09\u5c06\u68c0\u7d22\u5230\u7684\u6700\u76f8\u4f3c\u7ed3\u679c\u4f5c\u4e3a\u80cc\u666f\u77e5\u8bc6\uff08\u4e0a\u4e0b\u6587\uff09\uff0c\u8f6c\u6362\u4e3a prompt \u5e76\u53d1\u9001\u7ed9 AI \u5927\u6a21\u578b\uff0c\u4ece\u800c\u83b7\u5f97\u54cd\u5e94\u7ed3\u679c\n\n\n\n\u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a\n\n![](https://pic.yupi.icu/1/459fb2ca6f7127a4e88f23db46dc676b.svg)\n\n\n\n\u6b64\u524d\uff0c\u9c7c\u76ae\u5c31\u662f\u6309\u7167\u8fd9\u4e2a\u6d41\u7a0b\u81ea\u5df1\u5f00\u53d1\u5b9e\u73b0\u7684 AI \u603b\u7ed3\u52a9\u624b\u3002\u4f46\u662f\u8981\u81ea\u5df1\u5bf9\u6587\u6863\u8fdb\u884c\u62c6\u5206\u3001\u8fd8\u8981\u901a\u8fc7\u67d0\u79cd\u7b97\u6cd5\u8f6c\u6362\u6210\u5411\u91cf\u6570\u636e\uff0c\u60f3\u60f3\u90fd\u9ebb\u70e6\uff01\n\n![](https://pic.yupi.icu/1/1700192512076-5385287e-de41-41a1-b358-ee9d7fe53245.png)\n\n\n\n\u6709\u6ca1\u6709\u66f4\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u5462\uff1f\n\n\n\n### \u6d41\u7a0b\u7b80\u5316\n\n\u8fd8\u771f\u6709\uff01\n\n\u6700\u8fd1\u817e\u8baf\u4e91\u53d1\u5e03\u4e86\u6700\u65b0\u7248\u672c\u7684\u5411\u91cf\u6570\u636e\u5e93\uff0c\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u6570\u636e\u5199\u5165\u548c\u68c0\u7d22\u7684\u81ea\u52a8\u5411\u91cf\u5316\u529f\u80fd\uff08embedding\uff09\uff0c\u8fd8\u652f\u6301\u6587\u672c\u81ea\u52a8\u62c6\u5206\u548c\u4e00\u952e\u4e0a\u4f20\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u6587\u7ae0\u8f6c\u4e3a\u62c6\u5206\u597d\u7684\u5411\u91cf\u5199\u5165\u5230\u5411\u91cf\u6570\u636e\u5e93\uff0c\u5927\u5927\u7b80\u5316\u4e86\u5f00\u53d1\u6d41\u7a0b\u3002\u800c\u4e14\u7b80\u5355\u6613\u7528\uff0c\u65b0\u4eba\u4e5f\u80fd\u5feb\u901f\u4e0a\u624b\u3002\n\n![](https://pic.yupi.icu/1/1700477063212-2b8e76b6-7faf-45ab-a73a-2acb43470545.png)\n\n\n\n\u5982\u679c\u7528\u817e\u8baf\u4e91\u7684\u5411\u91cf\u6570\u636e\u5e93\uff0c\u4e0a\u9762\u7684\u5b9e\u73b0\u6d41\u7a0b\u5c31\u7b80\u5316\u4e3a 3 \u4e2a\u6838\u5fc3\u6b65\u9aa4\uff1a\n\n1\uff09\u5c06\u6587\u6863\u4e0a\u4f20\u5230\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\uff08\u81ea\u52a8\u62c6\u5206\u5e76\u8f6c\u4e3a\u5411\u91cf\u5b58\u50a8\uff09\n\n2\uff09\u5c06\u7528\u6237\u53d1\u9001\u7684\u95ee\u9898\u4f20\u5165\u5230\u5411\u91cf\u6570\u636e\u5e93\u8fdb\u884c\u76f8\u4f3c\u6027\u67e5\u8be2\n\n3\uff09\u5c06\u68c0\u7d22\u5230\u7684\u6700\u76f8\u4f3c\u7ed3\u679c\u4f5c\u4e3a\u80cc\u666f\u77e5\u8bc6\uff08\u4e0a\u4e0b\u6587\uff09\uff0c\u8f6c\u6362\u4e3a prompt \u5e76\u53d1\u9001\u7ed9 AI \u5927\u6a21\u578b\uff0c\u4ece\u800c\u83b7\u5f97\u54cd\u5e94\u7ed3\u679c\n\n\n\n\u90a3\u4e48\u6d41\u7a0b\u56fe\u5c31\u7b80\u5316\u4e3a\u4e0b\u9762\u8fd9\u6837\u4e86\uff1a\n\n![](https://pic.yupi.icu/1/a7f2b77ac9f61200ae49f18a99bf0f34.svg)\n\n\n\n\u6d41\u7a0b\u786e\u5b9a\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u4ee3\u7801\u4e86\u3002\n\n![](https://pic.yupi.icu/1/1700200586269-67de0eaf-f0ad-46dd-b9ab-b0fb9531d855.png)\n\n\n\n### AI \u603b\u7ed3\u52a9\u624b\u5f00\u53d1\n\n\u4ece\u4e0a\u8ff0\u6d41\u7a0b\u4e2d\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u60f3\u8981\u5b9e\u73b0 AI \u603b\u7ed3\u52a9\u624b\uff0c\u5411\u91cf\u6570\u636e\u5e93\u548c AI \u5927\u6a21\u578b\u662f\u4e24\u5927\u4e0d\u53ef\u6216\u7f3a\u7684\u89d2\u8272\u3002\n\n\u6b64\u5904\uff0c\u6211\u4eec\u9009\u7528\u4e0a\u9762\u4ecb\u7ecd\u7684\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\uff0c\u5e76\u4e14\u642d\u914d\u4e0e\u817e\u8baf\u4e91\u8054\u5408\u7684\u767e\u5ddd AI \u5927\u6a21\u578b\uff0c\u80fd\u6700\u5927\u7a0b\u5ea6\u5730\u8282\u7ea6\u5f00\u53d1\u6210\u672c\u3002\n\n\n\n#### 1\u3001\u514d\u8d39\u9886\u53d6\u8d44\u6e90\n\n\u9996\u5148\u8981\u514d\u8d39\u9886\u53d6\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93 + \u767e\u5ddd AI \u5927\u6a21\u578b\u7684\u4f7f\u7528\u6743\u3002\n\n\u8fdb\u5165\u5411\u91cf\u6570\u636e\u5e93\u4ea7\u54c1\u4e3b\u9875\uff0c\u70b9\u51fb\u514d\u8d39\u9886\u53d6\uff1a\n\n> \u5730\u5740\uff1ahttps://cloud.tencent.com/act/pro/agi\n\n![](https://pic.yupi.icu/1/1700116919192-e292c58f-3131-47ed-ac09-444ed25a8878.png)\n\n\n\n2\uff09\u5728\u5f39\u6846\u4e2d\u586b\u5165\u81ea\u5df1\u7684\u624b\u673a\u53f7\u5373\u53ef\u9886\u53d6\u6210\u529f\uff0c\u7b49\u5f85\u521d\u59cb\u5316\u5c31\u597d\u4e86\n\n![](https://pic.yupi.icu/1/1700116978960-9c685a37-52b7-4a08-a1d3-660030bb5754.png)\n\n\n\n3\uff09\u7b49\u521d\u59cb\u5316\u6210\u529f\u540e\uff0c\u8fdb\u5165\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\u7684\u5b9e\u4f8b\u5217\u8868\uff0c\u5f53\u72b6\u6001\u663e\u793a\u4e3a\u8fd0\u884c\u4e2d\u65f6\uff0c\u5f00\u542f\u5916\u7f51\u8bbf\u95ee\uff1a\n\n![](https://pic.yupi.icu/1/1700205765688-b11fd675-ab3f-4921-b916-664eb1204d5e.png)\n\n\n\n4\uff09\u5f00\u542f\u5916\u7f51\u65f6\uff0c\u9700\u8981\u586b\u5199\u5141\u8bb8\u8bbf\u95ee\u7684\u767d\u540d\u5355\uff0c\u90a3\u7531\u4e8e\u6b64\u5904\u4ec5\u4e3a\u6d4b\u8bd5\uff0c\u6211\u5c31\u76f4\u63a5\u8bbe\u7f6e\u4e3a\u5168\u7f51\u53ef\u8bbf\u95ee\u4e86\uff1a\n\n![](https://pic.yupi.icu/1/1700104737234-32c3cd43-c5bf-48d7-8044-5377c0602608.png)\n\n\n\n5\uff09\u8bbf\u95ee\u767e\u5ddd AI \u5927\u6a21\u578b\uff0c\u70b9\u51fb\u9886\u53d6\u767e\u5ddd\u7684\u514d\u8d39\u8c03\u7528\u6b21\u6570\uff08\u51e0\u767e\u4e07 tokens \u5462\uff09\n\n> \u5730\u5740\uff1ahttps://platform.baichuan-ai.com/console/recharge\n\n![](https://pic.yupi.icu/1/1700117098417-3d4be5d2-19c4-4312-ab28-0862b140dc0e.png)\n\n6\uff09\u8fdb\u5165 API Key \u7ba1\u7406\u9875\u9762\uff0c\u65b0\u5efa\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684 API Key\uff0c\u540e\u9762\u5c31\u53ef\u4ee5\u8c03\u7528\u767e\u5ddd\u5927\u6a21\u578b\u7684 AI \u80fd\u529b\u4e86\u3002\n\n![](https://pic.yupi.icu/1/1700117274810-b95c5d28-6a6a-49b1-b14e-8b15f98ec2e1.png)\n\n\n\n\u8d44\u6e90\u9886\u53d6\u597d\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u4f7f\u7528\u8d44\u6e90\u5566\u3002\n\n\u6b63\u5f0f\u5f00\u53d1\u524d\uff0c\u6211\u4eec\u8981\u5148\u9605\u8bfb\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\u5b98\u65b9\u7684 API \u5f00\u53d1\u6587\u6863\uff0c\u4ee5\u6700\u65b0\u7684\u6587\u6863\u4e3a\u51c6\u53bb\u5199\u4ee3\u7801\u3002\n\n> \u5730\u5740\uff1ahttps://cloud.tencent.com/document/product/1709/97768\n\n\n\n#### 2\u3001\u5f15\u5165\u4f9d\u8d56\n\n\u6211\u4eec\u4ee5 Java Maven \u9879\u76ee\u5f00\u53d1\u4e3a\u4f8b\uff0c\u5148\u5f15\u5165\u7a0b\u5e8f\u6240\u9700\u7684\u4f9d\u8d56\uff0c\u6bd4\u5982\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\u3001HTTP \u8c03\u7528\u5ba2\u6237\u7aef\u7b49\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>com.tencent.tcvectordb</groupId>\n        <artifactId>vectordatabase-sdk-java</artifactId>\n        <version>1.0.4-SNAPSHOT</version>\n        <scope>system</scope>\n        <systemPath>${project.basedir}/src/main/libs/vectordatabase-sdk-java-1.0.4.jar</systemPath>\n    </dependency>\n\n    <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-lang3</artifactId>\n        <version>3.12.0</version>\n    </dependency>\n\n    <dependency>\n        <groupId>com.fasterxml.jackson.core</groupId>\n        <artifactId>jackson-core</artifactId>\n        <version>2.12.3</version>\n    </dependency>\n\n    <dependency>\n        <groupId>com.qcloud</groupId>\n        <artifactId>cos_api</artifactId>\n        <version>5.6.8</version>\n    </dependency>\n\n    <dependency>\n        <groupId>com.squareup.okhttp3</groupId>\n        <artifactId>okhttp</artifactId>\n        <version>4.9.1</version>\n    </dependency>\n</dependencies>\n```\n\n\n\n#### 3\u3001\u8fde\u63a5\u5411\u91cf\u6570\u636e\u5e93\n\n\u53c2\u8003\u817e\u8baf\u4e91\u5b98\u65b9\u63d0\u4f9b\u7684 Java SDK Demo \u4ee3\u7801\uff0c\u9996\u5148\u548c\u5411\u91cf\u6570\u636e\u5e93\u5efa\u7acb\u8fde\u63a5\uff1a\n\n```java\nimport com.tencent.tcvectordb.client.VectorDBClient;\nimport com.tencent.tcvectordb.model.param.database.ConnectParam;\nimport com.tencent.tcvectordb.model.param.enums.ReadConsistencyEnum;\n\npublic class VDBClientFactory {\n\n    public static VectorDBClient createClient() {\n        ConnectParam param = getConnectParam();\n        return new VectorDBClient(param, ReadConsistencyEnum.EVENTUAL_CONSISTENCY);\n    }\n\n    private static ConnectParam getConnectParam() {\n        return ConnectParam.newBuilder()\n                .withUrl(\"url\")\n                .withUsername(\"username\")\n                .withKey(\"key\")\n                .withTimeout(30)\n                .build();\n    }\n}\n```\n\n\n\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684 url \u53ef\u4ee5\u76f4\u63a5\u5728\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\u7684\u5b9e\u4f8b\u5217\u8868\u4e2d\u770b\u5230\uff0c\u76f4\u63a5\u9009\u4e2d\u590d\u5236\u5373\u53ef\uff1a\n\n![](https://pic.yupi.icu/1/1700187643817-6d2d8bcf-b77d-4c28-a39f-8bc4fbe2248d.png)\n\n\n\n\u5bf9\u4e8e username \u548c key \u53c2\u6570\uff0c\u5219\u9700\u8981\u70b9\u8fdb\u5b9e\u4f8b\uff0c\u9009\u62e9\u5bc6\u94a5\u7ba1\u7406\u6765\u83b7\u53d6\uff1a\n\n![](https://pic.yupi.icu/1/1700187710892-fd17ef4e-95e9-494b-a313-d9a3b035bfe5.png)\n\n\n\n#### 4\u3001\u4e0a\u4f20\u6587\u6863\u5230\u5411\u91cf\u6570\u636e\u5e93\n\n\u4e0a\u4f20\u6587\u6863\u5230\u6570\u636e\u5e93\u524d\uff0c\u80af\u5b9a\u8981\u5148\u521d\u59cb\u5316\u6570\u636e\u5e93\u8868\u3002\n\n\u8ba9\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a `AISearchExample` \u7c7b\uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u7f16\u5199\u8c03\u7528\u5411\u91cf\u6570\u636e\u5e93\u7684\u65b9\u6cd5\uff0c\u521b\u5efa\u6570\u636e\u5e93\u548c\u6570\u636e\u8868\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npublic class AISearchExample {\n    private static final String DB_NAME = \"ai_test_db\";\n    private static final String COLLECTION_NAME = \"ai_test_collection\";\n    \n    private static void initDatabase(VectorDBClient client) {\n        System.out.println(\"init database..\");\n        try {\n            client.dropAIDatabase(DB_NAME);\n        } catch (VectorDBException e) {\n            // ignore\n        }\n        client.createAIDatabase(DB_NAME);\n    }\n    \n    private static void initCollection(VectorDBClient client) {\n        System.out.println(\"init collection..\");\n        Database database = client.database(DB_NAME);\n        CreateAICollectionParam param = CreateAICollectionParam.newBuilder().withName(COLLECTION_NAME).build();\n        database.createAICollection(param);\n    }\n}\n```\n\n\n\n\u7136\u540e\u7f16\u5199\u4e00\u4e2a `writeKnowledgeByFile` \u65b9\u6cd5\uff0c\u628a\u672c\u5730\u7684\u6587\u6863\u4e0a\u4f20\u5230\u5411\u91cf\u6570\u636e\u5e93\u91cc\uff1a\n\n> \u53ef\u4ee5\u76f4\u63a5\u4e0a\u4f20\u6587\u6863\uff0c\u4e0d\u9700\u8981\u518d\u64cd\u5fc3\u6587\u6863\u6bb5\u843d\u7684\u62c6\u5206\u3001\u5982\u4f55\u8f6c\u6362\u4e3a\u6570\u503c\u5411\u91cf\u7b49\u590d\u6742\u7684\u95ee\u9898\uff0c\u5927\u5e45\u8282\u7ea6\u65f6\u95f4\n\n```java\npublic class AISearchExample {\n    ...\n    \n    private static void writeKnowledgeByFile(VectorDBClient client) throws Exception {\n        AICollection collection = client.database(DB_NAME).describeAICollection(COLLECTION_NAME);\n    \n        for (String f : Objects.requireNonNull(new File(\"doc\").list())) {\n            String filePath = \"doc/\" + f;\n            System.out.println(\"upload file \" + filePath);\n            collection.upload(filePath, Collections.emptyMap());\n        }\n    \n        System.out.println(\"all file uploaded.\");\n        System.out.println(\"\u6587\u4ef6\u4e0a\u4f20\u540e\uff0c\u5411\u91cf\u6570\u636e\u5e93\u4f1a\u8fdb\u884c\u89e3\u6790\u548cEmbedding\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f8510-20\u79d2\u540e\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u77e5\u8bc6\u68c0\u7d22\u3002\");\n\t}\n}\n```\n\n\n\n\u8fd9\u91cc\u6211\u628a\u81ea\u5df1\u5199\u7684\u5b66\u4e60\u8def\u7ebf\u6587\u7ae0\u90fd\u4e0a\u4f20\u5230\u5411\u91cf\u6570\u636e\u5e93\uff1a\n\n![](https://pic.yupi.icu/1/1700207225007-e8206921-44d2-40e7-a6ce-a7185ef9873c.png)\n\n\n\n\u7f16\u5199\u597d\u4e0a\u8ff0\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u540e\uff0c\u4f9d\u6b21\u8c03\u7528\u5373\u53ef\uff1a\n\n```java\npublic class AISearchExample {\n    ...\n    private static void initKnowledge(VectorDBClient client) throws Exception {\n        initDatabase(client);\n        initCollection(client);\n        writeKnowledgeByFile(client);\n    }\n}\n```\n\n\n\n#### 5\u3001\u641c\u7d22\u6587\u6863\n\n\u5c06\u6587\u6863\u90fd\u4e0a\u4f20\u5230\u5411\u91cf\u6570\u636e\u5e93\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u68c0\u7d22\u4e86\u3002\n\n\u5728 `AISearchExample` \u7c7b\u4e2d\uff0c\u518d\u6dfb\u52a0\u4e00\u4e2a\u641c\u7d22\u65b9\u6cd5 `searchKnowledge`\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npublic class AISearchExample {\n    ...\n\n    private static String searchKnowledge(String question, VectorDBClient client) {\n        // \u8bbf\u95ee\u6307\u5b9a\u7684\u8868\n        AICollection collection = client.database(DB_NAME).describeAICollection(COLLECTION_NAME);\n        // \u6784\u9020\u641c\u7d22\u6761\u4ef6\n        SearchByContentsParam param = SearchByContentsParam.newBuilder().withContent(question).build();\n\n        StringBuilder allKnowledge = new StringBuilder();\n        List<Document> results = collection.search(param);\n        int index = 1;\n\n        // \u83b7\u53d6\u641c\u7d22\u7ed3\u679c\n        for (Document document : results) {\n            ChunkInfo chunk = (ChunkInfo)document.getObject(\"chunk\");\n            allKnowledge.append(chunk.getText()).append(\" \");\n        }\n\n        return allKnowledge.toString();\n    }\n}\n```\n\n\n\n\u8fd0\u884c\u4ee3\u7801\uff0c\u6d4b\u8bd5\u4e0b\u6548\u679c\uff0c\u6210\u529f\u68c0\u7d22\u51fa\u4e86\u6307\u5b9a\u56de\u7b54\uff1a\n\n![](https://pic.yupi.icu/1/1700207460059-c4296724-ffd9-4366-9b43-1def5640b147.png)\n\n\n\n\u6548\u679c\u4e0d\u9519\uff0c\u6211\u518d\u8bd5\u8bd5\uff0c\u95ee\u95ee \u201c\u4e2d\u5348\u5403\u4ec0\u4e48\u201d\uff1a\n\n![](https://pic.yupi.icu/1/1700207513144-05dfa2d6-ad4b-4889-93dd-c90282739948.png)\n\n\n\nWhat\uff1f\u8fd9\u4ec0\u4e48\u554a\uff0c\u4f60\u4e0d\u8981\u7741\u7740\u773c\u775b\u4e71\u8bf4\u597d\u4e0d\u597d\uff01\n\n![](https://pic.yupi.icu/1/1700188842794-f891cbe8-a284-4b58-887a-563b1fca2285.jpeg)\n\n\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5173\u952e\u95ee\u9898\uff1a\u5f53\u6211\u641c\u7d22\u4e00\u4e2a\u5b8c\u5168\u4e0d\u5b58\u5728\u7684\u95ee\u9898\u65f6\uff0c\u5411\u91cf\u6570\u636e\u5e93\u4ecd\u7136\u4f1a\u7ed9\u51fa\u7ed3\u679c\uff0c\u7136\u800c\u8fd9\u5e76\u4e0d\u662f\u6211\u60f3\u8981\u7684\u3002\u5982\u679c\u6ca1\u6709\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u76f4\u63a5\u4e0d\u8fd4\u56de\u7ed3\u679c\u597d\u50cf\u66f4\u7b26\u5408\u9884\u671f\u3002\n\n\u597d\u5728\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\u8fd4\u56de\u4e86\u68c0\u7d22\u76f8\u4f3c\u5ea6\uff0c\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u503c\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff0c\u4ece\u800c\u8fdb\u884c\u8fc7\u6ee4\u3002\n\n\u4fee\u6539\u4e00\u4e0b\u4ee3\u7801\uff0c\u8fc7\u6ee4\u76f8\u4f3c\u5ea6\u4f4e\u4e8e 0.8 \u7684\u6587\u6863\uff1a\n\n```java\npublic class AISearchExample {\n    ...\n\n    /**\n     * \u6587\u6863\u76f8\u5173\u6027\u7684\u9608\u503c\n     */\n    private static final Double THRESHOLD = 0.8;\n\n\n\tprivate static String searchKnowledge(String question, VectorDBClient client) {\n        AICollection collection = client.database(DB_NAME).describeAICollection(COLLECTION_NAME);\n        SearchByContentsParam param = SearchByContentsParam.newBuilder().withContent(question).build();\n\n        StringBuilder allKnowledge = new StringBuilder();\n        List<Document> results = collection.search(param);\n        int index = 1;\n        for (Document document : results) {\n            Double score = document.getScore();\n            if (ObjectUtils.isEmpty(score) || score < THRESHOLD) {\n                continue;\n            }\n            ChunkInfo chunk = (ChunkInfo)document.getObject(\"chunk\");\n            allKnowledge.append(chunk.getText()).append(\" \");\n        }\n\n        return allKnowledge.toString();\n    }\n}\n```\n\n\n\n\u518d\u6d4b\u8bd5\u4e0b\u6548\u679c\uff0c\u8fd9\u6b21\u6b63\u5e38\u4e86\uff1a\n\n![](https://pic.yupi.icu/1/1700207560761-a28dd1fc-e902-462b-9ff0-b644757884cc.png)\n\n\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u5411\u91cf\u6570\u636e\u5e93\u5b9e\u73b0\u4e86\u6587\u6863\u6570\u636e\u7684\u5b58\u50a8\u548c\u67e5\u8be2\u3002\u201c\u5c0f\u6284\u201d \u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u63a5\u4e0b\u6765\u5c31\u628a\u5b83\u7ed9 AI \u5427\uff01\n\n\n\n#### 6\u3001\u4f7f\u7528\u767e\u5ddd\u5927\u6a21\u578b\n\n\u53ef\u4ee5\u901a\u8fc7 OKHttp \u5e93\u5411\u767e\u5ddd\u5927\u6a21\u578b\u53d1\u9001\u8bf7\u6c42\uff0c\u5b9e\u73b0 AI \u7684\u95ee\u7b54\u80fd\u529b\u3002\n\n\u4ee3\u7801\u770b\u8d77\u6765\u6bd4\u8f83\u957f\uff0c\u4f46\u5176\u5b9e\u53ea\u9700\u8981\u6309\u7167\u767e\u5ddd\u8981\u6c42\u7684\u53c2\u6570\u683c\u5f0f\u6765\u8bbe\u7f6e\u8bf7\u6c42\u5934\u3001\u5c01\u88c5 prompt\uff0c\u6700\u540e\u53d1\u8d77\u8c03\u7528\u5e76\u83b7\u53d6\u8fd4\u56de\u7ed3\u679c\u5c31\u597d\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npublic class BaiChuanLLM {\n\n    private static final String URL = \"https://api.baichuan-ai.com/v1/chat\";\n\n    /**\n     * \u8fd9\u91cc\u7684ak\u548csk\u53ef\u4ee5\u4ece\u767e\u5ddd\u5b98\u7f51\u83b7\u53d6\uff0c\u6587\u7ae0\u4e2d\u5df2\u7ecf\u6f14\u793a\u8fc7\u4e86\uff0c\u76f4\u63a5\u66ff\u6362\u6389\u5373\u53ef\n     */\n    private static final String API_KEY = \"ak\";\n    private static final String SECRET_KEY = \"sk\";\n\n    private static final ObjectMapper MAPPER = new ObjectMapper();\n\n    private static volatile OkHttpClient HTTP_CLIENT;\n\n    public static String ask(String question, String knowledge) {\n        try {\n            String prompt = getPrompt(question, knowledge);\n            return llmRequest(prompt);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    private static String llmRequest(String prompt) throws IOException {\n        String requestData = getBaiChuanRequest(prompt);\n        String timestamp = String.valueOf(System.currentTimeMillis() / 1000);\n        String signature = calculateMd5(SECRET_KEY + requestData + timestamp);\n\n        Headers headers = getHeaders(timestamp, signature);\n\n        RequestBody body = RequestBody.create(requestData, MediaType.parse(\"application/json; charset=utf-8\"));\n        Request request = (new Request.Builder()).url(URL).headers(headers).post(body).build();\n\n        try (Response response = getHttpClient().newCall(request).execute()) {\n            JsonNode node = null;\n            if (response.body() != null) {\n                node = MAPPER.readTree(response.body().string());\n            }\n            if (node != null) {\n                return node.get(\"data\").get(\"messages\").get(0).get(\"content\").asText();\n            }\n            return null;\n        }\n    }\n\n    private static Headers getHeaders(String timestamp, String signature) {\n        return (new Headers.Builder())\n                .add(\"Content-Type\", \"application/json\")\n                .add(\"Authorization\", \"Bearer \" + API_KEY)\n                .add(\"X-BC-Request-Id\", \"RequestId-1001\")\n                .add(\"X-BC-Timestamp\", timestamp)\n                .add(\"X-BC-Signature\", signature)\n                .add(\"X-BC-Sign-Algo\", \"MD5\")\n                .build();\n    }\n\n    public static String calculateMd5(String inputString) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            md.update(inputString.getBytes());\n            byte[] digest = md.digest();\n            StringBuilder buffer = new StringBuilder();\n            for (byte b : digest) {\n                buffer.append(String.format(\"%02x\", b & 0xff));\n            }\n            return buffer.toString();\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    private static String getBaiChuanRequest(String prompt) throws JsonProcessingException {\n        ObjectNode data = JsonNodeFactory.instance.objectNode();\n        data.put(\"model\", \"Baichuan2-53B\");\n\n        ObjectNode node = JsonNodeFactory.instance.objectNode();\n        node.put(\"role\", \"user\");\n        node.put(\"content\", prompt);\n\n        data.put(\"messages\", JsonNodeFactory.instance.arrayNode().add(node));\n        return new ObjectMapper().writeValueAsString(data);\n    }\n\n    private static String getPrompt(String question, String knowledge) throws JsonProcessingException {\n        JsonNodeFactory factory = JsonNodeFactory.instance;\n        ObjectNode obj = factory.objectNode();\n        obj.put(\"\u8bf7\u56de\u7b54\u95ee\u9898\", question);\n        obj.put(\"\u80cc\u666f\u77e5\u8bc6\u5982\u4e0b\", knowledge);\n        return new ObjectMapper().writeValueAsString(obj);\n    }\n\n    synchronized private static OkHttpClient getHttpClient() {\n        if (HTTP_CLIENT == null) {\n            HTTP_CLIENT = (new OkHttpClient.Builder())\n                    .connectTimeout(2L, TimeUnit.SECONDS)\n                    .readTimeout(60, TimeUnit.SECONDS)\n                    .connectionPool(new ConnectionPool(10, 5L, TimeUnit.MINUTES))\n                    .build();\n        }\n        return HTTP_CLIENT;\n    }\n}\n```\n\n\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u5927\u5bb6\u4e5f\u4e0d\u7528\u8bb0\uff0c\u76f4\u63a5\u590d\u5236\u5230\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e2d\u5c31\u884c\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u5728\u521a\u521a\u521b\u5efa\u7684 `AISearchExample` \u7c7b\u4e2d\u7f16\u5199\u4e00\u4e2a main \u65b9\u6cd5\uff0c\u4ee5\u5b9e\u73b0\u8c03\u7528\u3002\n\n\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\npublic static void main(String[] args) throws Exception {\n    VectorDBClient client = createClient();\n    initKnowledge(client);\n\n    Scanner scanner = new Scanner(System.in);\n    System.out.print(\"\u8bf7\u8f93\u5165\u60a8\u7684\u95ee\u9898\uff08exit\u9000\u51fa\uff09\uff1a\");\n    String inputString = scanner.nextLine();\n    while (!\"exit\".equalsIgnoreCase(inputString)) {\n        if (!inputString.trim().isEmpty()) {\n            String result = searchKnowledge(inputString, client);\n            if (StringUtils.isBlank(result)) {\n                System.out.println(\"\u672a\u627e\u5230\u76f8\u5173\u5185\u5bb9\");\n            }else {\n                System.out.println(result);\n            }\n            String llmResult = BaiChuanLLM.ask(inputString, result);\n            System.out.println(\"---->LLM\u56de\u7b54\u7ed3\u679c\uff1a\");\n            System.out.println(llmResult);\n        }\n\n        System.out.println(\"\\n\\n\");\n        System.out.print(\"\u8bf7\u8f93\u5165\u60a8\u7684\u95ee\u9898\uff08exit\u9000\u51fa\uff09\uff1a\");\n        inputString = scanner.nextLine();\n    }\n}\n```\n\n\n\n\u6ce8\u610f:\n\n1\uff09\u7531\u4e8e\u7248\u672c\u6301\u7eed\u66f4\u65b0\u8fed\u4ee3\uff0c\u8bf7\u4ee5\u5b98\u65b9\u6700\u65b0\u7684 SDK Demo \u4e3a\u51c6\n\n> \u5730\u5740\uff1ahttps://cloud.tencent.com/document/product/1709/97768\n\n2\uff09\u76f8\u6bd4\u4e8e Java\uff0cPython \u8c03\u7528\u4f1a\u66f4\u52a0\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e0d\u5230 100 \u884c\u4ee3\u7801\u5c31\u80fd\u641e\u5b9a\n\n\n\n### \u6700\u7ec8\u6548\u679c\n\n\u67e5\u8be2\u5411\u91cf\u6570\u636e\u5e93\u4e2d\u5df2\u6709\u7684\u4fe1\u606f\u65f6\uff0c\u5411\u91cf\u6570\u636e\u5e93\u6210\u529f\u67e5\u8be2\u5230\u4e86\u6587\u6863\u6bb5\u843d\uff1a\n\n![](https://pic.yupi.icu/1/1700207701043-9d5efcfa-eeb2-4618-ae17-35082fd19c0b.png)\n\n\u767e\u5ddd AI \u5927\u6a21\u578b\u57fa\u4e8e\u4e0a\u9762\u7684\u6587\u6863\u6bb5\u843d\uff0c\u7ed9\u51fa\u4e86\u66f4\u6e05\u6670\u7684\u56de\u7b54\uff1a\n\n![](https://pic.yupi.icu/1/1700207826067-204511db-540a-4745-8d8b-3b3dd294c569.png)\n\n\n\n\u5f88\u597d\uff0c\u4e00\u4e2a AI \u603b\u7ed3\u52a9\u624b\u5c31\u5f00\u53d1\u5b8c\u6210\u5566\uff01\n\n\n\n### \u603b\u7ed3\n\n\u901a\u8fc7\u5f00\u53d1\u4e0a\u8ff0\u5e94\u7528\uff0c\u5927\u5bb6\u5e94\u8be5\u4e5f\u80fd\u53d1\u73b0\uff0c\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\u786e\u5b9e\u662f\u7acb\u4e86\u5927\u529f\uff0c\u5b83\u4e0d\u4ec5\u5e2e\u6211\u5b8c\u6210\u4e86\u6587\u4ef6\u5206\u7247\u4e0a\u4f20\uff0c\u8fd8\u901a\u8fc7\u5185\u7f6e\u7684 Embedding \u529f\u80fd\u5e2e\u6211\u5b8c\u6210\u4e86\u6587\u6863\u5230\u6570\u503c\u5411\u91cf\u7684\u8f6c\u6362\uff0c\u5e76\u5185\u7f6e\u4e86\u641c\u7d22\u529f\u80fd\uff0c\u5927\u5e45\u964d\u4f4e\u4e86\u5f00\u53d1\u6210\u672c\uff01\n\n![](https://pic.yupi.icu/1/1700480396822-a0e42c92-33aa-42db-bfe7-4e99a13863a1.png)\n\n\n\n\u4e0d\u8fc7\u5bf9\u4e8e\u6211\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u5b83\u9001\u4e86 400 \u4e07 token \u7684\u767e\u5ddd\u5927\u6a21\u578b\u4ee5\u53ca\u514d\u8d39\u4e00\u4e2a\u6708\u7684\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93\u3002\n\n![](https://pic.yupi.icu/1/1700191770693-6a512661-6e90-4cec-8453-4f10a636428d.png)\n\n\n\n\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\uff0c\u6216\u8005\u6587\u7ae0\u4e0b\u65b9\u7684\u9605\u8bfb\u539f\u6587\uff0c\u5373\u53ef\u514d\u8d39\u9886\u53d6\u817e\u8baf\u4e91\u5411\u91cf\u6570\u636e\u5e93 + \u767e\u5ddd\u5927\u6a21\u578b 400 \u4e07 tokens \u8c03\u7528\u989d\u5ea6\u3002\u63a8\u8350\u5927\u5bb6\u7528\u5b83\u6765\u5feb\u901f\u5236\u4f5c\u81ea\u5df1\u7684\u5b66\u4e60\u7b14\u8bb0\u52a9\u624b\u3001\u516b\u80a1\u6587\u80cc\u8bf5\u52a9\u624b\u7b49\uff0c\u63d0\u9ad8\u5b66\u4e60\u5de5\u4f5c\u6548\u7387~\n\n> \u9886\u53d6\u5730\u5740\uff1ahttps://cloud.tencent.com/act/pro/agi"}