{"data": "# WebSokcet \u524d\u540e\u7aef\u8054\u8c03\u4f7f\u7528\n\n> \u4f5c\u8005\uff1a[\u4e3a](https://blog.csdn.net/Go_ahead_forever)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 14255\n\nWebSocket \u5728 JS \u4ee5\u53ca SpringBoot \u4e2d\u7684\u4f7f\u7528\n\nWebSocket \u662f\u4e00\u79cd\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\uff0c\u7528\u4e8e\u5b9e\u73b0\u53cc\u5411\u901a\u4fe1\u3002\u5728\u524d\u7aef\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 JavaScript \u4e2d\u7684 `WebSocket` \u5bf9\u8c61\u6765\u521b\u5efa WebSocket \u8fde\u63a5\uff0c\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u3002\n\n## \u524d\u7aef\n\n### \u8fde\u63a5\u7684\u5efa\u7acb\n\n\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a WebSocket \u5bf9\u8c61\u5efa\u7acb\u4e00\u4e2a WebSocket \u8fde\u63a5\n\n\u4f8b\u5982\uff1a\n\n```js\nconst ws = new WebSocket('ws://localhost:8080/channel/echo');\n```\n\n\u4f20\u7ed9\u5bf9\u8c61\u7684\u53c2\u6570\u662f\u901a\u8fc7 WebSocket \u534f\u8bae\u901a\u8baf\u7684\u7f51\u7edc\u5730\u5740\u3002\n\n### \u63a5\u6536\u6d88\u606f\n\n\u63a5\u6536\u6d88\u606f\u8fd9\u91cc\u6307\u7684\u662f\u63a5\u6536\u670d\u52a1\u7aef\u7684\u6d88\u606f\u3002\n\n\u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\u3002\n\n1. **\u4f7f\u7528 `addEventListener`**\uff1a \u4f60\u53ef\u4ee5\u4f7f\u7528 `addEventListener` \u6765\u76d1\u542c `message` \u4e8b\u4ef6\uff0c\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u65b9\u5f0f\uff0c\u4e5f\u662f\u63a8\u8350\u7684\u505a\u6cd5\u3002\n\n   ```javascript\n   ws.addEventListener('message', (event) => {\n       const receivedMessage = event.data;\n       console.log('Received message from server:', receivedMessage);\n       // \u5728\u8fd9\u91cc\u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f\n   });\n   ```\n\n2. **\u4f7f\u7528 `onmessage` \u5c5e\u6027**\uff1a \u9664\u4e86\u4f7f\u7528 `addEventListener`\uff0c\u4f60\u8fd8\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e `onmessage` \u5c5e\u6027\u6765\u6307\u5b9a\u6d88\u606f\u5904\u7406\u51fd\u6570\u3002\u8fd9\u4e0e\u4e4b\u524d\u7684\u793a\u4f8b\u76f8\u4f3c\uff0c\u4f46\u66f4\u7b80\u6d01\uff1a\n\n   ```javascript\n   ws.onmessage = function (event) {\n       const receivedMessage = event.data;\n       console.log('Received message from server:', receivedMessage);\n       // \u5728\u8fd9\u91cc\u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f\n   };\n   ```\n\n### \u53d1\u9001\u6d88\u606f\n\n**\u53d1\u9001\u6d88\u606f\u5230\u670d\u52a1\u5668**\uff1a \u4f7f\u7528 `send()` \u65b9\u6cd5\u5c06\u6d88\u606f\u53d1\u9001\u5230\u670d\u52a1\u5668\uff1a\n\n```javascript\nws.send('Hello, server!'); // \u53d1\u9001\u6d88\u606f\u7ed9\u670d\u52a1\u5668\n```\n\n### \u5173\u95ed\u8fde\u63a5\n\n**\u5173\u95ed WebSocket \u8fde\u63a5**\uff1a \u8981\u5173\u95ed WebSocket \u8fde\u63a5\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 `WebSocket.close()` \u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a\n\n```javascript\nws.close();\n```\n\n\u5982\u679c WebSocket \u8fde\u63a5\u7684 `readyState` \u5df2\u7ecf\u5904\u4e8e `CLOSE` \u72b6\u6001\uff0c\u90a3\u4e48\u8be5\u65b9\u6cd5\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\n\n\u68c0\u67e5 WebSocket \u662f\u5426\u6253\u5f00\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 `WebSocket` \u7684 `readyState` \u5c5e\u6027\u6765\u5224\u65ad WebSocket \u662f\u5426\u6253\u5f00\u3002\u5982\u679c `readyState` \u7684\u503c\u4e3a `WebSocket.OPEN`\uff0c\u5219\u8868\u793a\u8fde\u63a5\u5df2\u6253\u5f00\uff1a\n\n```javascript\nif (ws.readyState === WebSocket.OPEN) {\n    // WebSocket \u8fde\u63a5\u5df2\u6253\u5f00\n}\n```\n\n\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u5224\u65ad WebSocket \u662f\u5426\u5904\u4e8e\u6253\u5f00\u72b6\u6001\u4e86\n\n### \u5904\u7406\n\n**\u5904\u7406\u8fde\u63a5\u72b6\u6001**\uff1a \u4f60\u53ef\u4ee5\u76d1\u542c\u5176\u4ed6\u4e8b\u4ef6\uff0c\u4f8b\u5982 `open`\u3001`close` \u548c `error`\uff0c\u4ee5\u5904\u7406\u8fde\u63a5\u7684\u4e0d\u540c\u72b6\u6001\uff1a\n\n```javascript\nws.addEventListener('open', (event) => {\n    console.log('WebSocket \u5df2\u8fde\u63a5');\n});\n\nws.addEventListener('close', (event) => {\n    console.log('WebSocket \u8fde\u63a5\u5df2\u5173\u95ed');\n});\n\nws.addEventListener('error', (event) => {\n    console.error('WebSocket \u8fde\u63a5\u51fa\u73b0\u5f02\u5e38:', event.error);\n});\n```\n\n\u540c\u6837\u53ef\u4ee5\u4f7f\u7528onclose \u3001 onerror \u3001 onopen \u5c5e\u6027\u5b9a\u4e49\u65f6\u95f4\u76d1\u542c\u51fd\u6570\u3002\n\nWebSocket \u662f\u4e00\u79cd\u57fa\u4e8e TCP \u534f\u8bae\u7684\u5168\u53cc\u5de5\u901a\u4fe1\u534f\u8bae\uff0c\u5b83\u5141\u8bb8\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5efa\u7acb\u6301\u4e45\u7684\u3001\u53cc\u5411\u7684\u901a\u4fe1\u8fde\u63a5\u3002\u76f8\u6bd4\u4f20\u7edf\u7684 HTTP \u8bf7\u6c42 - \u54cd\u5e94\u6a21\u5f0f\uff0cWebSocket \u63d0\u4f9b\u4e86\u5b9e\u65f6\u3001\u4f4e\u5ef6\u8fdf\u7684\u6570\u636e\u4f20\u8f93\u80fd\u529b\u3002\u901a\u8fc7 WebSocket\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u95f4\u70b9\u4e92\u76f8\u53d1\u9001\u6d88\u606f\uff0c\u5b9e\u73b0\u5b9e\u65f6\u66f4\u65b0\u548c\u5373\u65f6\u901a\u4fe1\u7684\u529f\u80fd\u3002WebSocket \u534f\u8bae\u7ecf\u8fc7\u4e86\u591a\u4e2a\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u7684\u652f\u6301\uff0c\u6210\u4e3a\u4e86\u73b0\u4ee3 Web \u5e94\u7528\u4e2d\u5e38\u7528\u7684\u901a\u4fe1\u534f\u8bae\u4e4b\u4e00\u3002\u5b83\u5e7f\u6cdb\u5e94\u7528\u4e8e\u804a\u5929\u5e94\u7528\u3001\u5b9e\u65f6\u6570\u636e\u66f4\u65b0\u3001\u591a\u4eba\u6e38\u620f\u7b49\u573a\u666f\uff0c\u4e3a Web \u5e94\u7528\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u548c\u66f4\u9ad8\u6548\u7684\u6570\u636e\u4f20\u8f93\u65b9\u5f0f\u3002\n\n\u672c\u6587\u5c06\u4f1a\u6307\u5bfc\u4f60\u5982\u4f55\u5728 Spring Boot \u4e2d\u6574\u5408\u3001\u4f7f\u7528 WebSocket\uff0c\u4ee5\u53ca\u5982\u4f55\u5728 `@ServerEndpoint` \u7c7b\u4e2d\u6ce8\u5165\u5176\u4ed6 Bean \u4f9d\u8d56 \u3002\n\n\u5728 Spring Boot \u4e2d\u4f7f\u7528 WebSocket \u6709 2 \u79cd\u65b9\u5f0f\u3002\u7b2c 1 \u79cd\u662f\u4f7f\u7528\u7531 Jakarta EE \u89c4\u8303\u63d0\u4f9b\u7684 Api\uff0c\u4e5f\u5c31\u662f `jakarta.websocket` \u5305\u4e0b\u7684\u63a5\u53e3\u3002\u7b2c 2 \u79cd\u662f\u4f7f\u7528 spring \u63d0\u4f9b\u7684\u652f\u6301\uff0c\u4e5f\u5c31\u662f [`spring-websocket`](https://github.com/spring-projects/spring-framework/tree/main/spring-websocket) \u6a21\u5757\u3002\u524d\u8005\u662f\u4e00\u79cd\u72ec\u7acb\u4e8e\u6846\u67b6\u7684\u6280\u672f\u89c4\u8303\uff0c\u800c\u540e\u8005\u662f Spring \u751f\u6001\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6 Spring \u6a21\u5757\uff08\u5982 Spring MVC\u3001Spring Security\uff09\u65e0\u7f1d\u96c6\u6210\uff0c\u5171\u4eab\u5176\u914d\u7f6e\u548c\u529f\u80fd\u3002\n\n2 \u79cd\u65b9\u5f0f\u5404\u6709\u4f18\u52a3\uff0c\u4f60\u53ef\u4ee5\u6309\u9700\u9009\u62e9\u3002\u672c\u6587\u5c06\u4f7f\u7528\u7b2c 1 \u79cd\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528 `jakarta.websocket` \u6765\u5f00\u53d1 WebSocket \u5e94\u7528\u3002\n\n\u8f6f\u4ef6\u7248\u672c\uff1a\n\n- Spring Boot\uff1a`3.1.3`\n\n## \u5728 Spring Boot \u4e2d\u6574\u5408 WebSocket\n\n### \u6dfb\u52a0\u4f9d\u8d56\n\n\u5728 `pom.xml` \u4e2d\u6dfb\u52a0 `spring-boot-starter-websocket` \u4f9d\u8d56\u3002\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-websocket</artifactId>\n</dependency>\n```\n\n### \u5f00\u53d1 ServerEndpoint \u7aef\u70b9\n\n\u670d\u52a1\u7aef WebSocket \u7aef\u70b9\u7684\u5f00\u53d1\u4e5f\u6709 2 \u79cd\u65b9\u5f0f\u3002\u7b2c 1 \u79cd\u662f\u5b9e\u73b0\u89c4\u8303\u6240\u63d0\u4f9b\u7684\u5404\u79cd\u63a5\u53e3\uff0c\u901a\u8fc7\u63a5\u53e3\u5b9a\u4e49\u7684\u56de\u8c03\u65b9\u6cd5\u6765\u5904\u7406\u65b0\u7684\u8fde\u63a5\u3001\u5ba2\u6237\u7aef\u6d88\u606f\u3001\u8fde\u63a5\u65ad\u5f00\u7b49\u7b49\u4e8b\u4ef6\u3002\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u6ce8\u89e3\uff0c\u7c7b\u4f3c\u4e8e Spring \u4e2d\u7684 Controller\uff0c\u901a\u8fc7\u5728\u65b9\u6cd5\u4e0a\u4f7f\u7528\u4e0d\u540c\u7684\u6ce8\u89e3\u6765\u76d1\u542c\u4e0d\u540c\u7684 WebSocket \u4e8b\u4ef6\uff0c\u7075\u6d3b\u6027\u6bd4\u8f83\u9ad8\uff0c\u63a8\u8350\u4f7f\u7528\u3002\n\n\u6211\u4eec\u6253\u7b97\u521b\u5efa\u4e00\u4e2a `echo` \u7aef\u70b9\uff0c\u8be5\u7aef\u70b9\u4f1a\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u3001\u65ad\u5f00\u3001\u6d88\u606f\u4e8b\u4ef6\u3002\u5728\u6536\u5230\u6d88\u606f\u540e\uff0c\u6211\u4eec\u4f1a\u5728\u6d88\u606f\u524d\u9762\u52a0\u4e0a\u670d\u52a1\u5668\u65f6\u95f4\u6233\u548c `Hello` \u524d\u7f00\uff0c\u539f\u6837\u5199\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u5982\u679c\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6d88\u606f\u4e3a `bye`\uff0c\u5219\u670d\u52a1\u5668\u4f1a\u4e3b\u52a8\u65ad\u5f00\u4e0e\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u3002\n\n```java\npackage cn.springdoc.demo.channel;\n\nimport java.io.IOException;\nimport java.time.Instant;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport jakarta.websocket.CloseReason;\nimport jakarta.websocket.EndpointConfig;\nimport jakarta.websocket.OnClose;\nimport jakarta.websocket.OnError;\nimport jakarta.websocket.OnMessage;\nimport jakarta.websocket.OnOpen;\nimport jakarta.websocket.Session;\nimport jakarta.websocket.server.ServerEndpoint;\n\n// \u4f7f\u7528 @ServerEndpoint \u6ce8\u89e3\u8868\u793a\u6b64\u7c7b\u662f\u4e00\u4e2a WebSocket \u7aef\u70b9\n// \u901a\u8fc7 value \u6ce8\u89e3\uff0c\u6307\u5b9a websocket \u7684\u8def\u5f84\n@ServerEndpoint(value = \"/channel/echo\")\npublic class EchoChannel {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(EchoChannel.class);\n\n    private Session session;\n\n    // \u6536\u5230\u6d88\u606f\n    @OnMessage\n    public void onMessage(String message) throws IOException{\n        \n        LOGGER.info(\"[websocket] \u6536\u5230\u6d88\u606f\uff1aid={}\uff0cmessage={}\", this.session.getId(), message);\n        \n        if (message.equalsIgnoreCase(\"bye\")) {\n            // \u7531\u670d\u52a1\u5668\u4e3b\u52a8\u5173\u95ed\u8fde\u63a5\u3002\u72b6\u6001\u7801\u4e3a NORMAL_CLOSURE\uff08\u6b63\u5e38\u5173\u95ed\uff09\u3002\n            this.session.close(new CloseReason(CloseReason.CloseCodes.NORMAL_CLOSURE, \"Bye\"));;\n            return;\n        }\n        \n        \n        this.session.getAsyncRemote().sendText(\"[\"+ Instant.now().toEpochMilli() +\"] Hello \" + message);\n    }\n\n    // \u8fde\u63a5\u6253\u5f00\n    @OnOpen\n    public void onOpen(Session session, EndpointConfig endpointConfig){\n        // \u4fdd\u5b58 session \u5230\u5bf9\u8c61\n        this.session = session;\n        LOGGER.info(\"[websocket] \u65b0\u7684\u8fde\u63a5\uff1aid={}\", this.session.getId());\n    }\n\n    // \u8fde\u63a5\u5173\u95ed\n    @OnClose\n    public void onClose(CloseReason closeReason){\n        LOGGER.info(\"[websocket] \u8fde\u63a5\u65ad\u5f00\uff1aid={}\uff0creason={}\", this.session.getId(),closeReason);\n    }\n\n    // \u8fde\u63a5\u5f02\u5e38\n    @OnError\n    public void onError(Throwable throwable) throws IOException {\n        \n        LOGGER.info(\"[websocket] \u8fde\u63a5\u5f02\u5e38\uff1aid={}\uff0cthrowable={}\", this.session.getId(), throwable.getMessage());\n        \n        // \u5173\u95ed\u8fde\u63a5\u3002\u72b6\u6001\u7801\u4e3a UNEXPECTED_CONDITION\uff08\u610f\u6599\u4e4b\u5916\u7684\u5f02\u5e38\uff09\n        this.session.close(new CloseReason(CloseReason.CloseCodes.UNEXPECTED_CONDITION, throwable.getMessage()));\n    }\n}\n```\n\n\u9996\u5148\uff0c\u4f7f\u7528 `@ServerEndpoint` \u6ce8\u89e3\u8868\u793a\u6b64\u7c7b\u662f\u4e00\u4e2a WebSocket \u7aef\u70b9\uff0c`value` \u5c5e\u6027\u662f\u5fc5\u987b\u7684\uff0c\u7528\u4e8e\u8bbe\u7f6e\u8def\u7531\u3002\u5b83\u8fd8\u6709\u5176\u4ed6\u7684\u4e00\u4e9b\u53ef\u9009\u5c5e\u6027\u53ef\u4ee5\u7528\u4e8e\u81ea\u5b9a\u4e49\u5b50\u534f\u8bae\u3001\u6d88\u606f\u7f16\u7801\u5668\u3001\u6d88\u606f\u89e3\u7801\u5668\u3001\u63e1\u624b\u5904\u7406\u5668\u7b49\u7b49\uff0c\u7bc7\u5e45\u539f\u56e0\u8fd9\u91cc\u4e0d\u5c55\u5f00\u3002\n\n#### @OnMessage\n\n`@OnMessage` \u6ce8\u89e3\u7528\u4e8e\u76d1\u542c\u5ba2\u6237\u7aef\u6d88\u606f\u4e8b\u4ef6\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027 `long maxMessageSize() default -1;` \u7528\u4e8e\u9650\u5236\u5ba2\u6237\u7aef\u6d88\u606f\u7684\u5927\u5c0f\uff0c\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e 0 \u5219\u8868\u793a\u4e0d\u9650\u5236\u3002\u5f53\u5ba2\u6237\u7aef\u6d88\u606f\u4f53\u79ef\u8d85\u8fc7\u8fd9\u4e2a\u9608\u503c\uff0c\u90a3\u4e48\u670d\u52a1\u5668\u5c31\u4f1a\u4e3b\u52a8\u65ad\u5f00\u8fde\u63a5\uff0c\u72b6\u6001\u7801\u4e3a\uff1a`1009`\u3002\u65b9\u6cd5\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u57fa\u672c\u7684 `String` / `byte[]` \u6216\u8005\u662f `Reader` / `InputStream`\uff0c\u5206\u522b\u8868\u793a WebSocket \u4e2d\u7684\u6587\u672c\u548c\u4e8c\u8fdb\u5236\u6d88\u606f\u3002\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7684 Java \u5bf9\u8c61\uff0c\u4f46\u662f\u9700\u8981\u5728 `@ServerEndpoint` \u4e2d\u914d\u7f6e\u5bf9\u8c61\u7684\u89e3\u7801\u5668\uff08`jakarta.websocket.Decoder`\uff09\u3002\u5bf9\u4e8e\u5185\u5bb9\u8f83\u957f\u7684\u6d88\u606f\uff0c\u652f\u6301\u5206\u6279\u53d1\u9001\uff0c\u53ef\u4ee5\u5728\u6d88\u606f\u53c2\u6570\u540e\u9762\u5b9a\u4e49\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684 `boolean last`\u53c2\u6570\uff0c\u5982\u679c\u8be5\u503c\u4e3a `true` \u5219\u8868\u793a\u6b64\u6d88\u606f\u662f\u6279\u6b21\u6d88\u606f\u4e2d\u7684\u6700\u540e\u4e00\u6761\u3002\n\n```java\n@OnMessage\npublic void onMessage(String message, boolean last) throws IOException{\n    if (last) {\n            // \u8fd9\u662f\u6279\u91cf\u6d88\u606f\u7684\u6700\u540e\u4e00\u6761\n    }\n}\n```\n\n#### @OnOpen\n\n`@OnOpen` \u65b9\u6cd5\u7528\u4e8e\u76d1\u542c\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u4e8b\u4ef6\uff0c\u5b83\u6ca1\u6709\u4efb\u4f55\u5c5e\u6027\u3002\u53ef\u4ee5\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570\u7684\u5bf9\u8c61\u6709\u5f88\u591a\uff0c`Session` \u5bf9\u8c61\u662f\u5fc5\u987b\u7684\uff0c\u8868\u793a\u5f53\u524d\u8fde\u63a5\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6b64\u5bf9\u8c61\u6765\u6267\u884c\u53d1\u9001\u6d88\u606f\u3001\u65ad\u5f00\u8fde\u63a5\u7b49\u64cd\u4f5c\u3002WebSocket \u7684\u8fde\u63a5 URL\uff0c\u7c7b\u4f3c\u4e8e Http \u7684 URL\uff0c\u4e5f\u53ef\u4ee5\u4f20\u9012\u67e5\u8be2\u53c2\u6570\u3001path \u53c2\u6570\u3002\u901a\u5e38\u7528\u4e8e\u4f20\u9012\u8ba4\u8bc1\u3001\u9274\u6743\u7528\u7684 Token \u6216\u5176\u4ed6\u4fe1\u606f\u3002\n\n\u8981\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 `Session` \u7684 `getRequestParameterMap();` \u83b7\u53d6\u3002\n\n```java\nMap<String, List<String>> query = session.getRequestParameterMap();\n```\n\n\u8981\u83b7\u53d6 path \u53c2\u6570\uff0c\u9996\u5148\u8981\u5728 `@ServerEndpoint` \u4e2d\u5b9a\u4e49 path \u53c2\u6570\uff0c\u7c7b\u4f3c\u4e8e Spring Mvc \u7684 path \u53c2\u6570\u5b9a\u4e49\u3002\u4f8b\u5982\uff1a `@ServerEndpoint(value = \"/channel/echo/{id}\")`\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728 `@OnOpen` \u65b9\u6cd5\u4e2d\u4f7f\u7528 `@PathParam` \u6ce8\u89e3\u63a5\u6536\uff0c\u5982\u4e0b\uff1a\n\n```java\n@ServerEndpoint(value = \"/channel/echo/{id}\")\n\n...\n\n@OnOpen\npublic void onOpen(Session session, @PathParam(\"id\") Long id, EndpointConfig endpointConfig){\n    ....\n}\n```\n\n\u793a\u4f8b\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570 `EndpointConfig` \uff0c\u5b83\u662f\u53ef\u9009\uff0c\u7528\u4e8e\u83b7\u53d6\u5168\u5c40\u7684\u4e00\u4e9b\u914d\u7f6e\u3002\u5728\u672c\u6587\u4e2d\u672a\u7528\u5230\u3002\n\n#### @OnClose\n\n`@OnClose` \u7528\u4e8e\u5904\u7406\u8fde\u63a5\u65ad\u5f00\u4e8b\u4ef6\uff0c\u53c2\u6570\u4e2d\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a `CloseReason` \u5bf9\u8c61\uff0c\u5b83\u5c01\u88c5\u4e86\u65ad\u5f00\u8fde\u63a5\u7684\u72b6\u6001\u7801\u3001\u539f\u56e0\u4fe1\u606f\u3002\n\n#### @OnError\n\n`@OnError` \u7528\u4e8e\u5904\u7406\u5f02\u5e38\u4e8b\u4ef6\uff0c**\u8be5\u65b9\u6cd5\u5fc5\u987b\u8981\u6709\u4e00\u4e2a `Throwable` \u7c7b\u578b\u7684\u53c2\u6570**\uff0c\u8868\u793a\u53d1\u751f\u7684\u5f02\u5e38\u3002\u5426\u5219\u5e94\u7528\u4f1a\u542f\u7528\u5931\u8d25\uff1a\n\n```txt\nCaused by: jakarta.websocket.DeploymentException: No Throwable parameter was present on the method [onError] of class [cn.springdoc.demo.channel.EchoChannel] that was annotated with OnError\n    at org.apache.tomcat.websocket.pojo.PojoMethodMapping.getPathParams(PojoMethodMapping.java:311) ~[tomcat-embed-websocket-10.1.12.jar:10.1.12]\n    at org.apache.tomcat.websocket.pojo.PojoMethodMapping.<init>(PojoMethodMapping.java:194) ~[tomcat-embed-websocket-10.1.12.jar:10.1.12]\n    at org.apache.tomcat.websocket.server.WsServerContainer.addEndpoint(WsServerContainer.java:130) ~[tomcat-embed-websocket-10.1.12.jar:10.1.12]\n    at org.apache.tomcat.websocket.server.WsServerContainer.addEndpoint(WsServerContainer.java:240) ~[tomcat-embed-websocket-10.1.12.jar:10.1.12]\n    at org.apache.tomcat.websocket.server.WsServerContainer.addEndpoint(WsServerContainer.java:198) ~[tomcat-embed-websocket-10.1.12.jar:10.1.12]\n    at org.springframework.web.socket.server.standard.ServerEndpointExporter.registerEndpoint(ServerEndpointExporter.java:156) ~[spring-websocket-6.0.11.jar:6.0.11]\n    ... 12 common frames omitted\n```\n\n\u6240\u6709\u4e8b\u4ef6\u65b9\u6cd5\uff0c\u90fd\u652f\u6301\u4f7f\u7528 `Session` \u4f5c\u4e3a\u53c2\u6570\uff0c\u8868\u793a\u5f53\u524d\u8fde\u63a5\u53c2\u6570\u3002\u4f46\u662f\u4e3a\u4e86\u66f4\u52a0\u65b9\u4fbf\uff0c\u6211\u4eec\u5728 `@OnOpen` \u4e8b\u4ef6\u4e2d\u76f4\u63a5\u628a `Session` \u5b58\u50a8\u5230\u4e86\u5f53\u524d\u5bf9\u8c61\u4e2d\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u65b9\u6cd5\u4e2d\u4f7f\u7528 `this` \u8bbf\u95ee\u3002\u670d\u52a1\u5668\u4f1a\u4e3a\u6bcf\u4e2a\u8fde\u63a5\u521b\u5efa\u4e00\u4e2a\u7aef\u70b9\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\n\n\u4e0a\u9762\u8fd8\u63d0\u5230\u4e86\u4e00\u4e2a \u201c\u8fde\u63a5\u5173\u95ed\u72b6\u6001\u7801\u201d\uff0cWebSocket \u534f\u8bae\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u72b6\u6001\u7801\u6765\u8868\u793a\u8fde\u63a5\u65ad\u5f00\u7684\u539f\u56e0\uff0c\u8fd9\u4e9b\u72b6\u6001\u7801\u5b9a\u4e49\u5728\u4e86 `CloseReason.CloseCodes` \u679a\u4e3e\u4e2d\u3002\n\n### \u914d\u7f6e ServerEndpointExporter\n\n\u5b9a\u4e49\u597d\u7aef\u70b9\u540e\uff0c\u9700\u8981\u5728\u914d\u7f6e\u7c7b\u4e2d\u901a\u8fc7\u5b9a\u4e49 `ServerEndpointExporter` Bean \u8fdb\u884c\u6ce8\u518c\u3002\n\n```java\npackage cn.springdoc.demo.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.socket.server.standard.ServerEndpointExporter;\n\nimport cn.springdoc.demo.channel.EchoChannel;\n\n@Configuration\npublic class WebSocketConfiguration {\n\n    @Bean  \n    public ServerEndpointExporter serverEndpointExporter (){\n        \n        ServerEndpointExporter exporter = new ServerEndpointExporter();\n        \n        // \u624b\u52a8\u6ce8\u518c WebSocket \u7aef\u70b9\n        exporter.setAnnotatedEndpointClasses(EchoChannel.class);\n        \n        return exporter;\n    }  \n}\n```\n\n\u4f60\u4e5f\u53ef\u4ee5\u5728 WebSocket \u7aef\u70b9\u4e0a\u6dfb\u52a0 `@Component` \u6ce8\u89e3\uff0c\u4f7f\u7528 Spring \u81ea\u52a8\u626b\u63cf\uff0c\u8fd9\u6837\u7684\u8bdd\u4e0d\u9700\u8981\u624b\u52a8\u8c03\u7528 `setAnnotatedEndpointClasses` \u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c\u3002\n\n### \u6d4b\u8bd5\n\n\u5728\u9879\u76ee\u7684 `src/main/resources` \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a `public` \u6587\u4ef6\u5939\uff0c\u518d\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\u65b0\u5efa\u4e00\u4e2a `index.html` \u6587\u4ef6\uff0c\u4f5c\u4e3a WebSocket \u5ba2\u6237\u7aef\u3002\u5185\u5bb9\u5982\u4e0b\uff1a\n\n> Spring Boot \u9ed8\u8ba4\u4f1a\u628a `public` \u76ee\u5f55\u4e0b\u7684 `index.html` \u4f5c\u4e3a\u5e94\u7528\u4e3b\u9875\u3002\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>WebSocket</title>\n</head>\n<body>\n    <script type=\"text/javascript\">\n        let websocket = new WebSocket(\"ws://localhost:8080/channel/echo\");\n        \n        // \u8fde\u63a5\u65ad\u5f00\n        websocket.onclose = e => {\n            console.log(`\u8fde\u63a5\u5173\u95ed: code=${e.code}, reason=${e.reason}`)\n        }\n        // \u6536\u5230\u6d88\u606f\n        websocket.onmessage = e => {\n            console.log(`\u6536\u5230\u6d88\u606f\uff1a${e.data}`);\n        }\n        // \u5f02\u5e38\n        websocket.onerror = e => {\n            console.log(\"\u8fde\u63a5\u5f02\u5e38\")\n            console.error(e)\n        }\n        // \u8fde\u63a5\u6253\u5f00\n        websocket.onopen = e => {\n            console.log(\"\u8fde\u63a5\u6253\u5f00\");\n            \n            // \u521b\u5efa\u8fde\u63a5\u540e\uff0c\u5f80\u670d\u52a1\u5668\u8fde\u7eed\u5199\u51653\u6761\u6d88\u606f\n            websocket.send(\"sprigdoc.cn\");\n            websocket.send(\"sprigdoc.cn\");\n            websocket.send(\"sprigdoc.cn\");\n            \n            // \u6700\u540e\u53d1\u9001 bye\uff0c\u7531\u670d\u52a1\u5668\u65ad\u5f00\u8fde\u63a5\n            websocket.send(\"bye\");\n            \n            // \u4e5f\u53ef\u4ee5\u7531\u5ba2\u6237\u7aef\u4e3b\u52a8\u65ad\u5f00\n            // websocket.close();\n        }\n    </script>\n</body>\n</html>\n```\n\n\u5185\u5bb9\u5f88\u7b80\u5355\uff0c\u7f51\u9875\u52a0\u8f7d\u540e\u8fd0\u884c Javascript \u4ee3\u7801\u3002\u7acb\u5373\u521b\u5efa\u4e0e `ws://localhost:8080/channel/echo` \u7684 WebSocket \u8fde\u63a5\u5bf9\u8c61\uff0c\u901a\u8fc7\u6ce8\u518c\u5bf9\u8c61\u7684\u5404\u79cd\u76d1\u542c\u65b9\u6cd5\u6765\u5904\u7406\u4e8b\u4ef6\u3002\n\n\u5728\u8fde\u63a5\u5c31\u7eea\u540e\uff0c\u4e5f\u5c31\u662f\u5728 `onopen` \u65b9\u6cd5\u4e2d\u5f80\u670d\u52a1\u5668\u7aef\u70b9\u53d1\u9001\u4e86 3 \u6761\u6d88\u606f\u3002\u6309\u7167\u903b\u8f91\uff0c\u670d\u52a1\u7aef\u4e5f\u4f1a\u56de\u590d 3 \u6761\u6d88\u606f\uff0c\u8fd9\u4f1a\u89e6\u53d1 `onmessage` \u4e8b\u4ef6\uff0c\u628a\u6d88\u606f\u5185\u5bb9\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002\u6700\u540e\uff0c\u53d1\u9001 `bye`\uff0c\u670d\u52a1\u5668\u6536\u5230\u6d88\u606f\u540e\u4f1a\u4e3b\u52a8\u65ad\u5f00\u8fde\u63a5\uff0c\u8fd9\u5c31\u4f1a\u89e6\u53d1 `onclose` \u4e8b\u4ef6\uff0c\u628a \u201c\u8fde\u63a5\u5173\u95ed\u72b6\u6001\u7801\u201d \u548c\u539f\u56e0\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002\n\n> \u5176\u5b9e\u4f60\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u6bb5 Javascript \u4ee3\u7801\u590d\u5236\u5230\u4efb\u610f\u652f\u6301 WebSocket \u7684\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u6267\u884c\uff0cWebSocket \u6ca1\u6709\u8de8\u57df\u7684\u8bf4\u6cd5\uff01\n\n\u542f\u52a8\u5e94\u7528\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\uff08\u5148\u6253\u5f00\u63a7\u5236\u53f0\uff09\uff0c\u7136\u540e\u8bbf\u95ee `http://localhost:8080/`\uff0c\u67e5\u770b\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u65e5\u5fd7\uff1a\n\n```txt\n\u8fde\u63a5\u6253\u5f00\n\u6536\u5230\u6d88\u606f\uff1a[1694505275009] Hello sprigdoc.cn\n\u6536\u5230\u6d88\u606f\uff1a[1694505275012] Hello sprigdoc.cn\n\u6536\u5230\u6d88\u606f\uff1a[1694505275014] Hello sprigdoc.cn\n\u8fde\u63a5\u5173\u95ed: code=1000, reason=Bye\n```\n\n\u518d\u770b\u770b\u670d\u52a1\u7aef\u63a7\u5236\u53f0\u65e5\u5fd7\uff1a\n\n```txt\ncn.springdoc.demo.channel.EchoChannel    : [websocket] \u65b0\u7684\u8fde\u63a5\uff1aid=0\ncn.springdoc.demo.channel.EchoChannel    : [websocket] \u6536\u5230\u6d88\u606f\uff1aid=0\uff0cmessage=sprigdoc.cn\ncn.springdoc.demo.channel.EchoChannel    : [websocket] \u6536\u5230\u6d88\u606f\uff1aid=0\uff0cmessage=sprigdoc.cn\ncn.springdoc.demo.channel.EchoChannel    : [websocket] \u6536\u5230\u6d88\u606f\uff1aid=0\uff0cmessage=sprigdoc.cn\ncn.springdoc.demo.channel.EchoChannel    : [websocket] \u6536\u5230\u6d88\u606f\uff1aid=0\uff0cmessage=bye\ncn.springdoc.demo.channel.EchoChannel    : [websocket] \u8fde\u63a5\u65ad\u5f00\uff1aid=0\uff0creason=CloseReason: code [1000], reason [Bye]\n```\n\n\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4e00\u5207\u6309\u7167\u6211\u4eec\u9884\u5b9a\u4e49\u7684\u903b\u8f91\u5728\u8fd0\u884c\u3002\u5ba2\u6237\u7aef\u53d1\u9001 3 \u6761\u6d88\u606f\uff0c\u670d\u52a1\u5668\u54cd\u5e94 3 \u6761\u6d88\u606f\uff0c\u6700\u540e\u65ad\u5f00\u8fde\u63a5\u3002\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u5668\u76f8\u5e94\u7684\u4e8b\u4ef6\u65b9\u6cd5\u90fd\u6210\u529f\u6267\u884c\u3002\n\n\u670d\u52a1\u7aef\u65e5\u5fd7\u4e2d\u7684 sessionId\uff08`id=0`\uff09\uff0c\u662f\u901a\u8fc7 `Session` \u7684 `String getId();` \u65b9\u6cd5\u83b7\u53d6\u7684\u3002\u670d\u52a1\u5668\u4f1a\u4e3a\u6bcf\u4e2a\u8fde\u63a5\u5206\u914d\u4e00\u4e2a\u4e0d\u540c\u7684 id \u503c\uff0c\u4e0d\u540c\u670d\u52a1\u5668\u751f\u6210\u7684 id \u7c7b\u578b\u4e0d\u4e00\u6837\u3002 Tomcat \u4f7f\u7528\u4ece 0 \u5f00\u59cb\u7684\u81ea\u589e\u503c\uff08\u672c\u4f8b\uff09\uff0cUndertow \u4f7f\u7528\u7684\u662f\u7c7b\u4f3c\u4e8e UUID \u7684 32 \u4f4d\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002\n\n### \u5728\u7aef\u70b9\u4e2d\u6ce8\u5165 Bean\n\n\u5f80\u5f80\u6211\u4eec\u9700\u8981\u5728\u7aef\u70b9\u4e2d\u4f7f\u7528\u5176\u4ed6 Spring \u7ba1\u7406\u7684 Bean \u6765\u5b8c\u6210\u4e1a\u52a1\uff0c\u4f8b\u5982\u8ba4\u8bc1\u3001\u9274\u6743\u3001\u4fdd\u5b58\u6d88\u606f\u3002\u3002\u3002\u7b49\u7b49\u3002\n\n\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a `UserService` \u670d\u52a1\u7c7b\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\n\n```java\npackage cn.springdoc.demo.service;\n\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class UserService {\n    public void foo() {}\n\n    // ....\n}\n```\n\n\u6211\u4eec\u73b0\u5728\u8981\u5728\u7aef\u70b9\u4e2d\u6ce8\u5165\u4f7f\u7528\u5b83\uff0c\u5f88\u591a\u4eba\u4f1a\u76f4\u63a5\u5728\u7aef\u70b9\u7c7b\u4e0a\u4f7f\u7528 `@Component` \u6ce8\u89e3\uff0c\u7136\u540e\u6ce8\u5165\uff1a\n\n```java\n@ServerEndpoint(value = \"/channel/echo\")\n@Component  // \u6ce8\u518c\u4e3a Spring \u7ec4\u4ef6\npublic class EchoChannel {\n\n    @Autowired // \u6ce8\u5165\u9700\u8981\u7684 Bean\n    private UserService userService;\n\n    // ...\n\n    @OnOpen\n    public void onOpen(Session session, EndpointConfig endpointConfig){\n\n        this.session = session;\n\n        // \u5728\u4e1a\u52a1\u4e2d\u4f7f\u7528\n        this.userService.foo();\n    }\n}\n```\n\n\u670d\u52a1\u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\uff0c\u770b\u4f3c\u4e00\u5207\u90fd\u6ca1\u95ee\u9898\uff01\u53ef\u662f\u5f53\u4f60\u5728\u4e8b\u4ef6\u65b9\u6cd5\u4e2d\u4f7f\u7528\u8fd9 Bean \u7684\u65f6\u5019\u5c31\u4f1a\u5bfc\u81f4 `NullPointerException` \u5f02\u5e38\u3002\n\n```txt\njava.lang.NullPointerException: Cannot invoke \"cn.springdoc.demo.service.UserService.foo()\" because \"this.userService\" is null\n    at cn.springdoc.demo.channel.EchoChannel.onOpen(EchoChannel.java:54)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:568)\n    at org.apache.tomcat.websocket.pojo.PojoEndpointBase.doOnOpen(PojoEndpointBase.java:67)\n    at org.apache.tomcat.websocket.pojo.PojoEndpointServer.onOpen(PojoEndpointServer.java:46)\n    at org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.init(WsHttpUpgradeHandler.java:131)\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:936)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\n    at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n    at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    at java.base/java.lang.Thread.run(Thread.java:833)\n```\n\n**\u539f\u56e0\uff1a\u8fd0\u884c\u65f6\u7684 WebSocket \u8fde\u63a5\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u7aef\u70b9\u5b9e\u4f8b\uff0c\u662f\u7531\u670d\u52a1\u5668\u521b\u5efa\uff0c\u800c\u4e0d\u662f Spring\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528\u81ea\u52a8\u88c5\u914d**\u3002\u4e0a\u6587\u4e5f\u63d0\u5230\u8fc7 \u201c\u670d\u52a1\u5668\u4f1a\u4e3a\u6bcf\u4e2a\u8fde\u63a5\u521b\u5efa\u4e00\u4e2a\u7aef\u70b9\u5b9e\u4f8b\u5bf9\u8c61\u201d\u3002\n\n\u77e5\u9053\u4e86\u539f\u56e0\u540e\uff0c\u89e3\u51b3\u529e\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Spring \u7684 `ApplicationContextAware` \u63a5\u53e3\uff0c\u5728\u5e94\u7528\u542f\u52a8\u65f6\u83b7\u53d6\u5230 `ApplicationContext` \u5e76\u4e14\u4fdd\u5b58\u5728\u5168\u5c40\u9759\u6001\u53d8\u91cf\u4e2d\u3002\n\n\u670d\u52a1\u5668\u6bcf\u6b21\u521b\u5efa\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5728 `@OnOpen` \u4e8b\u4ef6\u65b9\u6cd5\u4e2d\u4ece `ApplicationContext` \u83b7\u53d6\u5230\u9700\u8981 Bean \u6765\u521d\u59cb\u5316\u7aef\u70b9\u5bf9\u8c61\u3002\n\n```java\n@ServerEndpoint(value = \"/channel/echo\")\n@Component  // \u7531 spring \u626b\u63cf\u7ba1\u7406\npublic class EchoChannel implements\n                ApplicationContextAware { // \u5b9e\u73b0 ApplicationContextAware \u63a5\u53e3\uff0c Spring \u4f1a\u5728\u8fd0\u884c\u65f6\u6ce8\u5165 ApplicationContext\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(EchoChannel.class);\n\n    // \u5168\u5c40\u9759\u6001\u53d8\u91cf\uff0c\u4fdd\u5b58 ApplicationContext\n    private static ApplicationContext applicationContext;\n\n    private Session session;\n\n    // \u58f0\u660e\u9700\u8981\u7684 Bean\n    private UserService userService;\n\n\n    // \u4fdd\u5b58 Spring \u6ce8\u5165\u7684 ApplicationContext \u5230\u9759\u6001\u53d8\u91cf\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        EchoChannel.applicationContext = applicationContext;\n    }\n\n    @OnOpen\n    public void onOpen(Session session, EndpointConfig endpointConfig){\n        \n        // \u4fdd\u5b58 session \u5230\u5bf9\u8c61\n        this.session = session;\n        \n        // \u8fde\u63a5\u521b\u5efa\u7684\u65f6\u5019\uff0c\u4ece ApplicationContext \u83b7\u53d6\u5230 Bean \u8fdb\u884c\u521d\u59cb\u5316\n        this.userService = EchoChannel.applicationContext.getBean(UserService.class);\n        \n        // \u5728\u4e1a\u52a1\u4e2d\u4f7f\u7528\n        this.userService.foo();\n        \n        LOGGER.info(\"[websocket] \u65b0\u7684\u8fde\u63a5\uff1aid={}\", this.session.getId());\n    }\n    // ....\n}\n```\n\n`onOpen` \u65b9\u6cd5\u5728\u6574\u4e2a\u8fde\u63a5\u7684\u751f\u547d\u5468\u671f\u4e2d\uff0c\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u4f1a\u5e26\u6765\u901a\u4fe1\u65f6\u7684\u6027\u80fd\u635f\u8017\u3002"}