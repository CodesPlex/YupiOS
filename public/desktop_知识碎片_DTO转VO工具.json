{"data": "# DTO\u8f6cVO\u5de5\u5177\n\n> \u4f5c\u8005\uff1a[\u4e00\u74f6\u725b\u5976](https://blog.csdn.net/Dear_SunJunchen?type=blog)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 13461\n\ndata\u5de5\u5177\uff0c\u5b9e\u73b0\u4e86\u5bf9\u8c61\u62f7\u8d1d DTO -> VO \u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u5373\u53ef\n\n## data-utils\n\ndata\u5de5\u5177\uff0c\u5b9e\u73b0\u4e86\u5bf9\u8c61\u62f7\u8d1d DTO -> VO\n\n## \u89e3\u51b3\u7684\u95ee\u9898\n\nMapstruct\u9700\u8981\u5b89\u63d2\u4ef6!!!!\u5f88\u591a\u4e91\u684c\u9762\u7b49\u4f1a\u5f88\u4e0d\u65b9\u4fbf\n\n`org.springframework.beans.BeanUtils`\u6709\u4e00\u4e2a `copyProperties`\u7684\u65b9\u6cd5\n\n```java\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class AccountDTO  {\n\n    private Long id;\n    private String username;\n    private String password;\n    private String gender;\n    private String email;\n    private String role;\n    private Date registerTime;\n    private Integer isDelete;\n}\n@Data\npublic class AccountVO {\n    private String username;\n    private String gender;\n    private String role;\n    //\u7537 1 \u5973 0\n    private String genderNum;\n\n    private Integer isDelete;\n}\n```\n\n\u6bd4\u5982\u6211\u4eec\u6709\u4e24\u4e2a\u7c7b `DTO` \u548c `VO` \u5728\u7ed9\u524d\u7aef`VO`\u7684\u65f6\u5019,\u9700\u8981\u628a`DTO` \u8f6c\u6362\u6210`VO` \u6211\u4eec\u9700\u8981\u8fd9\u6837\u5199 \u9047\u5230`genderNum` `DTO`\u7c7b\u91cc\u6ca1\u6709\u7684\u8fd9\u79cd\u60c5\u51b5,\u6211\u4eec\u9700\u8981\u624b\u52a8`set`\u7684\u65f6\u5019\uff0c\u662f\u4e0b\u9762\u8fd9\u79cd\u5199\u6cd5\n\n```java\nimport com.example.entity.AccountVO;\n\n@Data\npublic class DataTest {\n    @Test\n    void contextLoads1() {\n        AccountDTO accountDTO = new AccountDTO(1L, \"test\", \"123456\", \"\u7537\", \"112@qq.com\", \"user\", new Date(), 1);\n        AccountVO accountVO =  new AccountVO();\n        BeanUtils.copyProperties(accountDTO, accountVO);\n        accountVO.setGender(Objects.equals(accountDTO.getGender(), \"\u7537\") ? \"1\" : \"0\");\n        System.out.println(accountVO);\n    }\n}\n```\n\n\u6709\u4e24\u4e2a\u7f3a\u70b9:\n\n1. `VO`\u9700\u8981\u624b\u52a8new\u4e00\u4e2a\u51fa\u6765\n2. \u5982\u679c`VO`\u91cc\u9762\u6709\u5f88\u591a\u5b57\u6bb5\u9700\u8981\u624b\u52a8`set`\u7684\u65f6\u5019,\u4f1a\u628a\u4ee3\u7801\u5199\u7684\u5f88\u957f\n3. \u5982\u679c\u9047\u5230\u96c6\u5408\u91cc\u9762\u60f3\u8981\u8f6c\u6362, `sonar`\u8fd8\u4f1a\u62a5\u4e0d\u8ba9\u5728\u5faa\u73af\u4e2d\u521b\u5efa\u5bf9\u8c61\u7684\u95ee\u9898\n\n## BaseData\u7684\u4f5c\u7528\n\nBaseData\u4ee3\u7801(\u9879\u76ee\u91cc\u53ea\u8981\u6709\u8fd9\u4e2a\u5c31\u53ef\u4ee5)\n\n```java\nimport com.example.common.Constants;\nimport com.example.common.ErrorCode;\nimport com.example.exception.BusinessException;\nimport org.springframework.util.ReflectionUtils;\n\nimport java.lang.reflect.*;\nimport java.util.Arrays;\nimport java.util.function.Consumer;\n\npublic interface BaseData {\n\n    /**\n     * \u9ed8\u8ba4\u65b9\u6cd5\uff0c\u6839\u636e\u4f20\u5165\u7684Class3\u7c7b\u578b\u5c06\u5f53\u524d\u5bf9\u8c61\u8f6c\u6362\u4e3a\u76ee\u6807\u5bf9\u8c61\u5e76\u6267\u884c\u64cd\u4f5c\n     *\n     * @param clazz    \u76ee\u6807\u7c7b\n     * @param consumer \u53ef\u4ee5\u5199lambda\u8868\u8fbe\u5f0f\u6bd4\u5982\n     *  accountDTO.asTargetObject(AccountVO.class,v->{\n     *      v.setGenderNum(Objects.equals(accountDT0.getGender(),\"\u7537\")?\"1\":\"0\");\n     *          });\n     *  consumer\u662f\u8fd9\u6bb5\n     *  v->{\n     *      v.setGenderNum(Objects.equals(accountDT0.getGender(),\"\u7537\")?\"1\":\"0\");\n     *  }\n     */\n    default <V> V asTargetObject(Class<V> clazz, Consumer<V> consumer) {\n//        \u8c03\u7528 asTargetObject \u65b9\u6cd5\u5c06\u5f53\u524d\u5bf9\u8c61\u8f6c\u6362\u4e3a\u76ee\u6807\u5bf9\u8c61\n        V v = this.asTargetObject(clazz);\n//        \u6267\u884c\u4f20\u5165\u7684Consumer\u64cd\u4f5c\n        consumer.accept(v);\n        return v;\n    }\n\n    /**\n     * \u9ed8\u8ba4\u65b9\u6cd5 \u5c06\u5f53\u524d\u5bf9\u8c61\u8f6c\u6362\u4e3a\u76ee\u6807\u5bf9\u8c61\n     *\n     * @param clazz \u76ee\u6807\u7c7b\n     * @param <V>   \u76ee\u6807\u7c7b\u7c7b\u578b \u5982AccountVO\n     * @return \u8f6c\u6362\u5b8c\u7684\u76ee\u6807\u7c7b\n     */\n    default <V> V asTargetObject(Class<V> clazz) {\n        try {\n//            \u83b7\u53d6\u76ee\u6807\u7c7b\u7684\u6240\u6709\u5b57\u6bb5\n            Field[] declaredFields = clazz.getDeclaredFields();\n//            \u83b7\u53d6\u76ee\u6807\u7c7b\u7684\u6784\u9020\u51fd\u6570\n            Constructor<V> constructor = clazz.getConstructor();\n//            \u6839\u636e\u6784\u9020\u51fd\u6570\u5b9e\u4f8b\u5316\u76ee\u6807\u5bf9\u8c61\n            V v = constructor.newInstance();\n//            \u904d\u5386\u76ee\u6807\u7c7b\u7684\u6bcf\u4e2a\u5b57\u6bb5\uff0c\u5e76\u8fdb\u884c\u8f6c\u6362\u8bd5\u503c\n            Arrays.stream(declaredFields).forEach(declaredField -> convert(declaredField, v));\n            return v;\n        } catch (ReflectiveOperationException e) {\n//            //\u6355\u83b7ReflectiveOperationException\u5f02\u5e38\uff0c\u629b\u51fa\u81ea\u5b9a\u4e49\u7684BusinessException\n            throw new BusinessException(ErrorCode.CAST_OBJECT_ERROR);\n        }\n\n    }\n\n    /**\n     * \u9ed8\u8ba4\u65b9\u6cd5,\u5c06\u5b57\u6bb5\u8f6c\u6362\u5e76\u8d4b\u503c\u7ed9\u76ee\u6807\u5bf9\u8c61\n     * @param field VO\u5269\u4f59\u7684\u5b57\u6bb5\uff0c\u81ea\u5b9a\u4e49\n     * @param vo    \u8981\u8f6c\u6362\u7684VO\n     */\n    default void convert(Field field, Object vo) {\n\n        try {\n//            \u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u4e2d\u4e0e\u76ee\u6807\u5b57\u6bb5\u540c\u540d\u7684\u5b57\u6bb5\n            Field source = this.getClass().getDeclaredField(field.getName());\n//            \u8bbe\u7f6e\u5b57\u6bb5\u53ef\u8bbf\u95ee\n            ReflectionUtils.makeAccessible(field);\n            ReflectionUtils.makeAccessible(source);\n//            \u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u4e2d\u83b7\u53d6\u5b57\u6bb5\u503c\u7684\u65b9\u6cd5\u548c\u76ee\u6807\u5bf9\u8c61\u4e2d\u8bbe\u7f6e\u5b57\u6bb5\u503c\u7684\u65b9\u6cd5\uff0c\u5e76\u8fdb\u884c\u8f6c\u6362\u8d4b\u503c\n            Method sourceGetter = this.getClass().getMethod(Constants.GET + capitalize(field.getName()));\n            Method targetSetter = vo.getClass().getMethod(Constants.SET + capitalize(field.getName()), field.getType());\n            Object value = sourceGetter.invoke(this);\n            targetSetter.invoke(vo, value);\n        } catch (NoSuchFieldException | InvocationTargetException | IllegalAccessException |\n                 NoSuchMethodException ignored) {\n//              \u8fd9\u91ccignored \u539f\u56e0\u662f\n//              \u4e24\u4e2a\u7c7b\u7684\u5b57\u6bb5\u6570\u91cf\u4e0d\u4e00\u6837\u7684\u65f6\u5019\uff0c\u4f1a\u62a5 java.lang.NoSuchFieldException\n//              \u4f46\u662f\u591a\u51fa\u6765\u7684\u5b57\u6bb5\u6211\u4eec\u662f\u53ef\u4ee5\u5904\u7406\u7684\n        }\n    }\n\n    /**\n     * \u9ed8\u8ba4\u65b9\u6cd5,\u5c06\u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199\n     * @param str   \u6bd4\u5982\u5b57\u6bb5\u540d name\n     * @return \u8fd4\u56de Name\n     */\n    default String capitalize(String str) {\n        if (str == null || str.isEmpty()) {\n            return str;\n        }\n        return Character.toUpperCase(str.charAt(0)) + str.substring(1);\n    }\n}\n```\n\n1. \u5b9e\u73b0\u5bf9\u8c61\u6df1\u62f7\u8d1d\n\n```java\n@Data\npublic class DataTest {\n    @Test\n    void contextLoads1() {\n        AccountDTO accountDTO = new AccountDTO(1L,\"test\",\"123456\",\"\u7537\",\"112@qq.com\",\"user\",new Date(),1);\n        AccountVO accountVO = accountDTO.asTargetObject(AccountVO.class,v->{\n            v.setGenderNum(Objects.equals(accountDTO.getGender(), \"\u7537\") ? \"1\" : \"0\");\n        });\n        System.out.println(accountVO);\n    }\n}\n```\n\n1. \u5b9e\u73b0\u5bf9\u8c61Collection \u6df1\u62f7\u8d1d(List Set ...)\n\n```java\n@Data\npublic class DataTest {\n    @Test\n    void contextLoads2() {\n        AccountDTO accountDTO = new AccountDTO(1L,\"test\",\"123456\",\"\u7537\",\"112@qq.com\",\"user\",new Date(),0);\n        AccountDTO accountDTO2 = new AccountDTO(2L,\"test2\",\"123456\",\"\u5973\",\"112@qq.com\",\"admin\",new Date(),1);\n        List<AccountDTO> accountDTOList = new ArrayList<>();\n        accountDTOList.add(accountDTO);\n        accountDTOList.add(accountDTO2);\n        List<AccountVO> list = accountDTOList.stream().map(source -> source.asTargetObject(AccountVO.class, v-> {\n            v.setGenderNum(Objects.equals(source.getGender(), \"\u7537\") ? \"1\" : \"0\");\n        })).collect(Collectors.toList());\n        list.forEach(System.out::println);\n    }\n\n    @Test\n    void contextLoads3() {\n        AccountDTO accountDTO = new AccountDTO(1L,\"test\",\"123456\",\"\u7537\",\"112@qq.com\",\"user\",new Date(),1);\n        AccountDTO accountDTO2 = new AccountDTO(2L,\"test2\",\"123456\",\"\u5973\",\"112@qq.com\",\"admin\",new Date(),0);\n        Set<AccountDTO> accountDTOSet = new HashSet<>();\n        accountDTOSet.add(accountDTO);\n        accountDTOSet.add(accountDTO2);\n        Set<AccountVO> set = accountDTOSet.stream().map(source -> source.asTargetObject(AccountVO.class, v-> {\n            v.setGenderNum(Objects.equals(source.getGender(), \"\u7537\") ? \"1\" : \"0\");\n        })).collect(Collectors.toSet());\n        set.forEach(System.out::println);\n    }\n}\n```\n\n## \u5b9e\u73b0\u6b65\u9aa4\n\n```markdown\n1. dto \u5b9e\u73b0 BaseData\u63a5\u53e3\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class AccountDTO implements BaseData {\n\n    private Long id;\n    private String username;\n    private String password;\n    private String gender;\n    private String email;\n    private String role;\n    private Date registerTime;\n    private Integer isDelete;\n}\n2. dto.asViewObject(Target.class);\n3. \u5982\u679c Target \u8fd8\u6709\u5176\u4ed6\u5b57\u6bb5 \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u4f8b\u5982\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684genderNum(\u53ea\u662f\u7b80\u5355\u4e3e\u7684\u4f8b\u5b50\uff0c\u6309\u7167\u9879\u76ee\u5b9e\u9645\u6765)\n4. `isDelete` \u8fd9\u79cdis\u5f00\u5934\u7684\u4e5f\u652f\u6301\n   1. \u5982\u679c\u6709\u95ee\u9898,\u770b\u4e0blombok\u7248\u672c\u662f\u5426\u6709\u95ee\u9898 \u6b64\u9879\u76ee\u7528\u7684\u7248\u672c\u662f 1.18.28 \u6ca1\u95ee\u9898\n   2. \u5982\u679c\u6ca1\u7528lombok \u624b\u52a8\u52a0\u4e0agetIsDelete() \u7528\u8fd9\u4e2a\u683c\u5f0f\u5c31\u53ef\u4ee5\u4e86\n```\n\n## \u6ce8\u610f\n\n\u4e24\u4e2a\u7c7b \u76f8\u540c\u7684\u5b57\u6bb5\u540d\u7684\u5b57\u6bb5\u7c7b\u578b \u5fc5\u987b\u5b8c\u5168\u4e00\u6837!!!"}