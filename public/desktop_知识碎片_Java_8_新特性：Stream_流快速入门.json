{"data": " # Java 8 \u65b0\u7279\u6027\uff1aStream \u6d41\u5feb\u901f\u5165\u95e8\n\n> \u4f5c\u8005\uff1a[\u53ef\u67e0](https://wx.zsxq.com/dweb2/index/footprint/212822221215421)\uff0c[\u7f16\u7a0b\u5bfc\u822a\u661f\u7403](https://wx.zsxq.com/dweb2/index/group/51122858222824) \u7f16\u53f7 31010\n\n### \u524d\u8a00\n\n\u5728 java \u4e2d\uff0c\u6d89\u53ca\u5230\u5bf9\u6570\u7ec4\u3001\u96c6\u5408\u7b49\u96c6\u5408\u7c7b\u5143\u7d20\u7684\u64cd\u4f5c\u65f6\uff0c\u901a\u5e38\u6211\u4eec\u4f7f\u7528\u7684\u662f\u5faa\u73af\u7684\u65b9\u5f0f\u8fdb\u884c\u9010\u4e2a\u904d\u5386\u5904\u7406\uff0c\u6216\u8005\u4f7f\u7528 stream \u6d41\u7684\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\u3002\n\n### \u4ec0\u4e48\u662f Stream\uff1f\n\nStream\uff08\u6d41\uff09\u662f\u4e00\u4e2a\u6765\u81ea\u6570\u636e\u6e90\u7684\u5143\u7d20\u961f\u5217\u5e76\u652f\u6301\u805a\u5408\u64cd\u4f5c,\u6d41\u5728\u7ba1\u9053\u4e2d\u4f20\u8f93\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u7ba1\u9053\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u5904\u7406\uff0c \u6bd4\u5982\u7b5b\u9009\uff0c \u6392\u5e8f\uff0c\u805a\u5408\u7b49\u3002 Stream\uff08\u6d41\uff09\u7684\u7ec4\u6210\u5305\u542b:\u5143\u7d20\u3001\u6570\u636e\u6e90\u3001\u805a\u5408\u64cd\u4f5c\u3001\u5185\u90e8\u8fed\u4ee3\u3001Pipelining\u7b49\u3002\n\n### \u521b\u5efa Stream \u6d41\n\n1\uff09stream()\n\n```java\nStream<String> stream = stringList.stream();\n```\n\n2\uff09parallelStream()\n\n```java\nStream<String> stringStream = stringList.parallelStream();\n```\n\n### Stream \u6d41\u5e38\u7528\u64cd\u4f5c\n\n1\uff09forEach \n\n```java\nstringList.forEach(System.out::println);\n```\n\n2\uff09map\n\n```java\nstringList.stream().map(i->i.equals(\"juejin\"));\n```\n\n3\uff09filter\n\n```java\nstringList.stream().filter(i->i.equals(\"juejin\"));\n```\n\n4\uff09limit\n\n```java\nintegerList.stream().limit(3);\n```\n\n5\uff09skip\n\n```java\nintegerList.stream().skip(5).limit(3);\n```\n\n6\uff09distinct\n\n```java\nintegerList.stream().distinct().collect(Collectors.toList());\n```\n\n7\uff09sorted\n\n```java\nintegerList.stream().sorted();\n```\n\n8\uff09sorted(Comparator com)\n\n```java\nintegerList.stream().sorted(Comparator.comparing(Integer::intValue));\n```\n\n9\uff09Collectors \u6536\u96c6\u5668\n\n![](https://pic.yupi.icu/5563/202401242026474.png)\n\n- \u6052\u7b49\u5904\u7406 Collectors\n\n\u6240\u8c13**\u6052\u7b49\u5904\u7406**\uff0c\u6307\u7684\u5c31\u662fStream\u7684\u5143\u7d20\u5728\u7ecf\u8fc7Collector\u51fd\u6570\u5904\u7406\u524d\u540e\u5b8c\u5168\u4e0d\u53d8\uff0c\u4f8b\u5982toList()\u64cd\u4f5c\uff0c\u53ea\u662f\u6700\u7ec8\u5c06\u7ed3\u679c\u4eceStream\u4e2d\u53d6\u51fa\u653e\u5165\u5230List\u5bf9\u8c61\u4e2d\uff0c\u5e76\u6ca1\u6709\u5bf9\u5143\u7d20\u672c\u8eab\u505a\u4efb\u4f55\u7684\u66f4\u6539\u5904\u7406\n\n```java\nlist.stream().collect(Collectors.toList());\nlist.stream().collect(Collectors.toSet());\nlist.stream().collect(Collectors.toCollection());\n```\n\n- \u5f52\u7ea6\u6c47\u603b Collectors\n\n\u5bf9\u4e8e**\u5f52\u7ea6\u6c47\u603b**\u7c7b\u7684\u64cd\u4f5c\uff0cStream\u6d41\u4e2d\u7684\u5143\u7d20\u9010\u4e2a\u904d\u5386\uff0c\u8fdb\u5165\u5230Collector\u5904\u7406\u51fd\u6570\u4e2d\uff0c\u7136\u540e\u4f1a\u4e0e\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u5904\u7406\u7ed3\u679c\u8fdb\u884c\u5408\u5e76\u5904\u7406\uff0c\u5e76\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u7ed3\u679c\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u904d\u5386\u5b8c\u6210\u540e\uff0c\u8f93\u51fa\u6700\u7ec8\u7684\u7ed3\u679c\n\n| counting     | \u7edf\u8ba1\u6d41\u4e2d\u7684\u5143\u7d20\u4e2a\u6570                                           |\n| ------------ | ------------------------------------------------------------ |\n| summingInt   | \u8ba1\u7b97\u6d41\u4e2d\u6307\u5b9aint\u5b57\u6bb5\u7684\u7d2f\u52a0\u603b\u548c\u3002\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u5b57\u7c7b\u578b\uff0c\u6709\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982summingDouble\u7b49 |\n| averagingInt | \u8ba1\u7b97\u6d41\u4e2d\u6307\u5b9aint\u5b57\u6bb5\u7684\u5e73\u5747\u503c\u3002\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u5b57\u7c7b\u578b\uff0c\u6709\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982averagingLong\u7b49 |\n| joining      | \u5c06\u6d41\u4e2d\u6240\u6709\u5143\u7d20\uff08\u6216\u8005\u5143\u7d20\u7684\u6307\u5b9a\u5b57\u6bb5\uff09\u5b57\u7b26\u4e32\u503c\u8fdb\u884c\u62fc\u63a5\uff0c\u53ef\u4ee5\u6307\u5b9a\u62fc\u63a5\u8fde\u63a5\u7b26\uff0c\u6216\u8005\u9996\u5c3e\u62fc\u63a5\u5b57\u7b26 |\n| maxBy        | \u6839\u636e\u7ed9\u5b9a\u7684\u6bd4\u8f83\u5668\uff0c\u9009\u62e9\u51fa\u503c\u6700\u5927\u7684\u5143\u7d20                         |\n| minBy        | \u6839\u636e\u7ed9\u5b9a\u7684\u6bd4\u8f83\u5668\uff0c\u9009\u62e9\u51fa\u503c\u6700\u5c0f\u7684\u5143\u7d20                         |\n\n- \u5206\u7ec4\u5206\u533a Collectors\n\n- - \u4ec5\u4ec5\u662f\u505a\u4e00\u4e2a\u5e38\u89c4\u7684\u6570\u636e\u5206\u7ec4\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u4ec5\u4f20\u5165\u4e00\u4e2a\u5206\u7ec4\u51fd\u6570\u5373\u53ef\n\n```java\npublic void groupBySubCompany() {\n    // \u6309\u7167\u5b50\u516c\u53f8\u7ef4\u5ea6\u5c06\u5458\u5de5\u5206\u7ec4\n    Map<String, List<Employee>> resultMap =\n            getAllEmployees().stream()\n                    .collect(Collectors.groupingBy(Employee::getSubCompany));\n    System.out.println(resultMap);\n}\n```\n\n- - \u5982\u679c\u4e0d\u4ec5\u9700\u8981\u5206\u7ec4\uff0c\u8fd8\u9700\u8981\u5bf9\u5206\u7ec4\u540e\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u7684\u65f6\u5019\uff0c\u5219\u9700\u8981\u540c\u65f6\u7ed9\u5b9a\u5206\u7ec4\u51fd\u6570\u4ee5\u53ca\u503c\u6536\u96c6\u5668\n\n```java\npublic void groupAndCaculate() {\n    // \u6309\u7167\u5b50\u516c\u53f8\u5206\u7ec4\uff0c\u5e76\u7edf\u8ba1\u6bcf\u4e2a\u5b50\u516c\u53f8\u7684\u5458\u5de5\u6570\n    Map<String, Long> resultMap = getAllEmployees().stream()\n            .collect(Collectors.groupingBy(Employee::getSubCompany,\n                    Collectors.counting()));\n    System.out.println(resultMap);\n}\n```\n\n### \u603b\u7ed3\n\n\u7b80\u800c\u8a00\u4e4b\uff0cStream API \u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u4e14\u6613\u4e8e\u4f7f\u7528\u7684\u5904\u7406\u6570\u636e\u7684\u65b9\u5f0f\u3002\u8ba9\u7a0b\u5e8f\u5458\u5199\u51fa\u9ad8\u6548\u7387\u3001\u5e72\u51c0\u3001\u7b80\u6d01\u7684\u4ee3\u7801\u3002\n\n"}